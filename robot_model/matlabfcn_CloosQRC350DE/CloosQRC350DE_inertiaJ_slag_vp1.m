% Calculate joint inertia matrix for
% CloosQRC350DE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,kDG]';
% m [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% Mq [6x6]
%   inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-19 21:40
% Revision: caa0dbda1e8a16d11faaa29ba3bbef6afcd619f7 (2020-05-25)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = CloosQRC350DE_inertiaJ_slag_vp1(qJ, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(7,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350DE_inertiaJ_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'CloosQRC350DE_inertiaJ_slag_vp1: pkin has to be [7x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'CloosQRC350DE_inertiaJ_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'CloosQRC350DE_inertiaJ_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'CloosQRC350DE_inertiaJ_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_floatb_twist_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-06-19 21:37:27
% EndTime: 2020-06-19 21:37:30
% DurationCPUTime: 2.83s
% Computational Cost: add. (32847->747), mult. (45460->975), div. (0->0), fcn. (52430->12), ass. (0->463)
unknown=NaN(21,1);
t1 = qJ(2) + qJ(3);
t2 = cos(t1);
t3 = cos(qJ(4));
t4 = t2 * t3;
t7 = Icges(5,4) * t2;
t8 = sin(qJ(4));
t10 = sin(t1);
t12 = Icges(5,1) * t2 * t3 - Icges(5,5) * t10 - t7 * t8;
t13 = t4 * t12;
t14 = t2 * t8;
t19 = -Icges(5,2) * t2 * t8 - Icges(5,6) * t10 + t3 * t7;
t20 = t14 * t19;
t21 = cos(qJ(5));
t23 = sin(qJ(5));
t25 = -t10 * t23 + t21 * t4;
t29 = -t10 * t21 - t23 * t4;
t33 = Icges(6,3) * t2 * t8 + Icges(6,5) * t25 + Icges(6,6) * t29;
t34 = t14 * t33;
t35 = sin(qJ(1));
t36 = sin(qJ(2));
t38 = pkin(3) * t36 + pkin(2);
t39 = t35 * t38;
t40 = t35 * t10;
t41 = t40 * pkin(4);
t42 = t35 * t2;
t43 = t42 * pkin(5);
t45 = cos(qJ(1));
t47 = -t3 * t40 - t45 * t8;
t50 = -t21 * t42 - t23 * t47;
t51 = t50 * pkin(6);
t54 = t21 * t47 - t23 * t42;
t56 = pkin(7) * qJ(5) - qJ(6);
t57 = cos(t56);
t59 = t40 * t8;
t60 = t45 * t3;
t61 = -t59 + t60;
t62 = sin(t56);
t64 = -t54 * t57 - t61 * t62;
t65 = t64 * rSges(7,1);
t68 = -t54 * t62 + t57 * t61;
t69 = t68 * rSges(7,2);
t70 = t50 * rSges(7,3);
t71 = -t39 - t41 - t43 + t51 + t65 + t69 + t70;
t72 = t71 ^ 2;
t73 = t45 * t38;
t74 = t45 * t10;
t75 = t74 * pkin(4);
t76 = t45 * t2;
t77 = t76 * pkin(5);
t80 = t3 * t74 - t35 * t8;
t83 = t21 * t76 - t23 * t80;
t84 = t83 * pkin(6);
t87 = t21 * t80 + t23 * t76;
t89 = t74 * t8;
t90 = t35 * t3;
t91 = t89 + t90;
t93 = -t57 * t87 - t62 * t91;
t94 = t93 * rSges(7,1);
t97 = t57 * t91 - t62 * t87;
t98 = t97 * rSges(7,2);
t99 = t83 * rSges(7,3);
t100 = -t73 - t75 - t77 - t84 - t94 - t98 - t99;
t101 = t100 ^ 2;
t105 = t54 * rSges(6,1);
t106 = t50 * rSges(6,2);
t107 = t61 * rSges(6,3);
t108 = -t39 - t41 - t43 + t105 + t106 + t107;
t109 = t108 ^ 2;
t110 = t87 * rSges(6,1);
t111 = t83 * rSges(6,2);
t112 = t91 * rSges(6,3);
t113 = -t73 - t75 - t77 - t110 - t111 - t112;
t114 = t113 ^ 2;
t118 = t47 * rSges(5,1);
t119 = -t61 * rSges(5,2);
t120 = t42 * rSges(5,3);
t121 = -t39 - t41 - t43 + t118 + t119 - t120;
t122 = t121 ^ 2;
t123 = t80 * rSges(5,1);
t124 = -t91 * rSges(5,2);
t125 = t76 * rSges(5,3);
t126 = -t73 - t75 - t77 - t123 - t124 - t125;
t127 = t126 ^ 2;
t131 = t40 * rSges(4,1);
t132 = t42 * rSges(4,2);
t133 = t45 * rSges(4,3);
t134 = -t39 - t131 - t132 + t133;
t135 = t134 ^ 2;
t136 = t74 * rSges(4,1);
t137 = t76 * rSges(4,2);
t138 = t35 * rSges(4,3);
t139 = -t73 - t136 - t137 - t138;
t140 = t139 ^ 2;
t144 = t35 * pkin(2);
t145 = t35 * t36;
t146 = t145 * rSges(3,1);
t147 = cos(qJ(2));
t148 = t35 * t147;
t149 = t148 * rSges(3,2);
t150 = t45 * rSges(3,3);
t151 = -t144 - t146 - t149 + t150;
t152 = t151 ^ 2;
t153 = t45 * pkin(2);
t154 = t45 * t36;
t155 = t154 * rSges(3,1);
t156 = t45 * t147;
t157 = t156 * rSges(3,2);
t158 = t35 * rSges(3,3);
t159 = -t153 - t155 - t157 - t158;
t160 = t159 ^ 2;
t167 = (-rSges(2,1) * t35 + rSges(2,2) * t45) ^ 2;
t171 = (-rSges(2,1) * t45 - rSges(2,2) * t35) ^ 2;
t177 = -t14 * t62 - t25 * t57;
t181 = t14 * t57 - t25 * t62;
t184 = Icges(7,1) * t177 + Icges(7,4) * t181 + Icges(7,5) * t29;
t185 = t177 * t184;
t189 = Icges(7,4) * t177 + Icges(7,2) * t181 + Icges(7,6) * t29;
t190 = t181 * t189;
t194 = Icges(7,5) * t177 + Icges(7,6) * t181 + Icges(7,3) * t29;
t195 = t29 * t194;
t201 = Icges(5,5) * t2 * t3 - Icges(5,6) * t2 * t8 - Icges(5,3) * t10;
t202 = t10 * t201;
t207 = Icges(6,5) * t2 * t8 + Icges(6,1) * t25 + Icges(6,4) * t29;
t208 = t25 * t207;
t213 = Icges(6,6) * t2 * t8 + Icges(6,4) * t25 + Icges(6,2) * t29;
t214 = t29 * t213;
t217 = Icges(4,1) * t2 - Icges(4,4) * t10;
t221 = Icges(4,4) * t2 - Icges(4,2) * t10;
t225 = Icges(3,1) * t147 - Icges(3,4) * t36;
t229 = Icges(3,4) * t147 - Icges(3,2) * t36;
t231 = t13 - t20 + t34 + Icges(2,3) + m(7) * (t72 + t101) + m(6) * (t109 + t114) + m(5) * (t122 + t127) + m(4) * (t135 + t140) + m(3) * (t152 + t160) + m(2) * (t167 + t171) + t185 + t190 + t195 - t202 + t208 + t214 + t2 * t217 - t10 * t221 + t147 * t225 - t36 * t229;
t234 = Icges(3,4) * t45;
t236 = Icges(3,5) * t35;
t237 = Icges(3,1) * t36 * t45 + t147 * t234 + t236;
t242 = Icges(3,6) * t35;
t243 = Icges(3,2) * t147 * t45 + t234 * t36 + t242;
t249 = Icges(3,4) * t35;
t251 = Icges(3,5) * t45;
t252 = -Icges(3,1) * t35 * t36 - t147 * t249 + t251;
t257 = Icges(3,6) * t45;
t258 = -Icges(3,2) * t147 * t35 - t249 * t36 + t257;
t262 = t156 * pkin(3);
t265 = rSges(4,1) * t2 - rSges(4,2) * t10;
t266 = t45 * t265;
t267 = t262 + t266;
t269 = t148 * pkin(3);
t270 = t35 * t265;
t271 = -t269 - t270;
t277 = rSges(3,1) * t147 - rSges(3,2) * t36;
t288 = Icges(3,5) * t147 - Icges(3,6) * t36;
t300 = Icges(7,1) * t93 + Icges(7,4) * t97 + Icges(7,5) * t83;
t305 = Icges(7,4) * t93 + Icges(7,2) * t97 + Icges(7,6) * t83;
t310 = Icges(7,5) * t93 + Icges(7,6) * t97 + Icges(7,3) * t83;
t312 = t177 * t300 + t181 * t305 + t29 * t310;
t313 = t312 * t35;
t317 = Icges(7,1) * t64 + Icges(7,4) * t68 + Icges(7,5) * t50;
t322 = Icges(7,4) * t64 + Icges(7,2) * t68 + Icges(7,6) * t50;
t327 = Icges(7,5) * t64 + Icges(7,6) * t68 + Icges(7,3) * t50;
t329 = t177 * t317 + t181 * t322 + t29 * t327;
t330 = t329 * t45;
t334 = Icges(6,1) * t87 + Icges(6,4) * t83 + Icges(6,5) * t91;
t339 = Icges(6,4) * t87 + Icges(6,2) * t83 + Icges(6,6) * t91;
t344 = Icges(6,5) * t87 + Icges(6,6) * t83 + Icges(6,3) * t91;
t346 = t14 * t344 + t25 * t334 + t29 * t339;
t347 = t346 * t35;
t351 = Icges(6,1) * t54 + Icges(6,4) * t50 + Icges(6,5) * t61;
t356 = Icges(6,4) * t54 + Icges(6,2) * t50 + Icges(6,6) * t61;
t361 = Icges(6,5) * t54 + Icges(6,6) * t50 + Icges(6,3) * t61;
t363 = t14 * t361 + t25 * t351 + t29 * t356;
t364 = t363 * t45;
t369 = Icges(5,5) * t2 * t45 + Icges(5,1) * t80 - Icges(5,4) * t91;
t375 = Icges(5,6) * t2 * t45 + Icges(5,4) * t80 - Icges(5,2) * t91;
t381 = Icges(5,3) * t2 * t45 + Icges(5,5) * t80 - Icges(5,6) * t91;
t383 = -t10 * t381 - t14 * t375 + t369 * t4;
t384 = t383 * t35;
t389 = -Icges(5,5) * t2 * t35 + Icges(5,1) * t47 - Icges(5,4) * t61;
t395 = -Icges(5,6) * t2 * t35 + Icges(5,4) * t47 - Icges(5,2) * t61;
t401 = -Icges(5,3) * t2 * t35 + Icges(5,5) * t47 - Icges(5,6) * t61;
t403 = -t10 * t401 - t14 * t395 + t389 * t4;
t404 = t403 * t45;
t405 = -(t147 * t237 - t243 * t36) * t35 - (t147 * t252 - t258 * t36) * t45 + 0.2e1 * m(4) * (t134 * t267 + t139 * t271) + 0.2e1 * m(3) * (t151 * t277 * t45 - t159 * t277 * t35) + t45 * (t145 * t225 + t148 * t229 - t288 * t45) + t35 * (-t154 * t225 - t156 * t229 - t288 * t35) - t313 - t330 - t347 - t364 - t384 - t404;
t408 = Icges(4,4) * t45;
t410 = Icges(4,5) * t35;
t411 = Icges(4,1) * t10 * t45 + t2 * t408 + t410;
t416 = Icges(4,6) * t35;
t417 = Icges(4,2) * t2 * t45 + t10 * t408 + t416;
t420 = (-t10 * t417 + t2 * t411) * t35;
t423 = Icges(4,4) * t35;
t425 = Icges(4,5) * t45;
t426 = -Icges(4,1) * t10 * t35 - t2 * t423 + t425;
t431 = Icges(4,6) * t45;
t432 = -Icges(4,2) * t2 * t35 - t10 * t423 + t431;
t435 = (-t10 * t432 + t2 * t426) * t45;
t438 = pkin(4) * t2 - pkin(5) * t10;
t439 = t45 * t438;
t441 = t45 * t29 * pkin(6);
t445 = rSges(7,1) * t177 + rSges(7,2) * t181 + rSges(7,3) * t29;
t446 = t45 * t445;
t447 = t262 + t439 + t441 + t446;
t449 = t35 * t438;
t451 = t35 * t29 * pkin(6);
t452 = t35 * t445;
t453 = -t269 - t449 - t451 - t452;
t460 = -t184 * t64 - t189 * t68 - t194 * t50;
t461 = t45 * t460;
t465 = -t184 * t93 - t189 * t97 - t194 * t83;
t466 = t35 * t465;
t470 = -t207 * t54 - t213 * t50 - t33 * t61;
t471 = t45 * t470;
t475 = -t207 * t87 - t213 * t83 - t33 * t91;
t476 = t35 * t475;
t480 = rSges(6,1) * t25 + rSges(6,2) * t29 + rSges(6,3) * t14;
t481 = t45 * t480;
t482 = t262 + t439 + t481;
t484 = t35 * t480;
t485 = -t269 - t449 - t484;
t492 = rSges(5,1) * t4 - rSges(5,2) * t14 - rSges(5,3) * t10;
t493 = t45 * t492;
t494 = t262 + t439 + t493;
t496 = t35 * t492;
t497 = -t269 - t449 - t496;
t504 = -t12 * t47 + t19 * t61 + t201 * t42;
t505 = t45 * t504;
t509 = -t12 * t80 + t19 * t91 - t201 * t76;
t510 = t35 * t509;
t515 = Icges(4,5) * t2 - Icges(4,6) * t10;
t518 = t45 * (t217 * t40 + t221 * t42 - t45 * t515);
t523 = t35 * (-t217 * t74 - t221 * t76 - t35 * t515);
t524 = -t420 - t435 + 0.2e1 * m(7) * (t100 * t453 + t447 * t71) + t461 + t466 + t471 + t476 + 0.2e1 * m(6) * (t108 * t482 + t113 * t485) + 0.2e1 * m(5) * (t121 * t494 + t126 * t497) + t505 + t510 + t518 + t523;
t526 = t447 ^ 2;
t527 = t453 ^ 2;
t529 = t35 * (t144 - t39);
t531 = t45 * (-t153 + t73);
t533 = t35 * (-t41 - t43);
t535 = t45 * (t75 + t77);
t537 = t35 * t50 * pkin(6);
t539 = t45 * t83 * pkin(6);
t540 = t65 + t69 + t70;
t541 = t35 * t540;
t542 = t94 + t98 + t99;
t543 = t45 * t542;
t544 = t529 - t531 + t533 - t535 + t537 - t539 + t541 - t543;
t545 = t544 ^ 2;
t552 = t300 * t93 + t305 * t97 + t310 * t83;
t557 = t317 * t93 + t322 * t97 + t327 * t83;
t559 = t35 * t552 + t45 * t557;
t560 = t35 * t559;
t564 = t300 * t64 + t305 * t68 + t310 * t50;
t569 = t317 * t64 + t322 * t68 + t327 * t50;
t571 = t35 * t564 + t45 * t569;
t572 = t45 * t571;
t576 = t334 * t87 + t339 * t83 + t344 * t91;
t581 = t351 * t87 + t356 * t83 + t361 * t91;
t583 = t35 * t576 + t45 * t581;
t584 = t35 * t583;
t588 = t334 * t54 + t339 * t50 + t344 * t61;
t593 = t351 * t54 + t356 * t50 + t361 * t61;
t595 = t35 * t588 + t45 * t593;
t596 = t45 * t595;
t597 = t482 ^ 2;
t598 = t485 ^ 2;
t599 = t105 + t106 + t107;
t600 = t35 * t599;
t601 = t110 + t111 + t112;
t602 = t45 * t601;
t603 = t529 - t531 + t533 - t535 + t600 - t602;
t604 = t603 ^ 2;
t611 = t369 * t47 - t375 * t61 - t381 * t42;
t616 = t389 * t47 - t395 * t61 - t401 * t42;
t618 = t35 * t611 + t45 * t616;
t619 = t45 * t618;
t623 = t369 * t80 - t375 * t91 + t381 * t76;
t628 = t389 * t80 - t395 * t91 + t401 * t76;
t630 = t35 * t623 + t45 * t628;
t631 = t35 * t630;
t632 = t494 ^ 2;
t633 = t497 ^ 2;
t634 = t118 + t119 - t120;
t635 = t35 * t634;
t636 = t123 + t124 + t125;
t637 = t45 * t636;
t638 = t529 - t531 + t533 - t535 + t635 - t637;
t639 = t638 ^ 2;
t643 = t267 ^ 2;
t644 = t271 ^ 2;
t646 = t35 * (-t131 - t132 + t133);
t648 = t45 * (t136 + t137 + t138);
t649 = t529 - t531 + t646 - t648;
t650 = t649 ^ 2;
t659 = Icges(4,3) * t35 + t10 * t425 + t2 * t431;
t668 = Icges(4,3) * t45 - t10 * t410 - t2 * t416;
t673 = t45 * ((-t40 * t411 - t417 * t42 + t45 * t659) * t35 + (-t40 * t426 - t42 * t432 + t45 * t668) * t45);
t685 = t35 * ((t35 * t659 + t411 * t74 + t417 * t76) * t35 + (t35 * t668 + t426 * t74 + t432 * t76) * t45);
t691 = Icges(3,3) * t35 + t147 * t257 + t251 * t36;
t700 = Icges(3,3) * t45 - t147 * t242 - t236 * t36;
t718 = t45 ^ 2;
t719 = t277 ^ 2;
t721 = t35 ^ 2;
t728 = (t35 * (-t146 - t149 + t150) - t45 * (t155 + t157 + t158)) ^ 2;
t732 = m(7) * (t526 + t527 + t545) + t560 + t572 + t584 + t596 + m(6) * (t597 + t598 + t604) + t619 + t631 + m(5) * (t632 + t633 + t639) + m(4) * (t643 + t644 + t650) + t673 + t685 + t35 * ((t154 * t237 + t156 * t243 + t35 * t691) * t35 + (t154 * t252 + t156 * t258 + t35 * t700) * t45) + t45 * ((-t145 * t237 - t148 * t243 + t45 * t691) * t35 + (-t145 * t252 - t148 * t258 + t45 * t700) * t45) + m(3) * (t718 * t719 + t719 * t721 + t728);
t733 = t439 + t441 + t446;
t735 = -t449 - t451 - t452;
t739 = t439 + t481;
t741 = -t449 - t484;
t745 = t439 + t493;
t747 = -t449 - t496;
t755 = -t330 - t313 - t347 - t364 - t404 - t384 - t420 - t435 + 0.2e1 * m(7) * (t100 * t735 + t71 * t733) + t461 + t466 + t471 + t476 + 0.2e1 * m(6) * (t108 * t739 + t113 * t741) + 0.2e1 * m(5) * (t121 * t745 + t126 * t747) + t505 + t510 + t518 + t523 + 0.2e1 * m(4) * (t134 * t266 - t139 * t270);
t758 = t533 - t535 + t537 - t539 + t541 - t543;
t765 = t533 - t535 + t600 - t602;
t772 = t533 - t535 + t635 - t637;
t779 = t646 - t648;
t784 = m(7) * (t447 * t733 + t453 * t735 + t544 * t758) + t560 + t572 + t584 + t596 + m(6) * (t482 * t739 + t485 * t741 + t603 * t765) + t619 + t631 + m(5) * (t494 * t745 + t497 * t747 + t638 * t772) + m(4) * (t266 * t267 - t270 * t271 + t649 * t779) + t673 + t685;
t785 = t733 ^ 2;
t786 = t735 ^ 2;
t787 = t758 ^ 2;
t791 = t739 ^ 2;
t792 = t741 ^ 2;
t793 = t765 ^ 2;
t797 = t745 ^ 2;
t798 = t747 ^ 2;
t799 = t772 ^ 2;
t803 = t265 ^ 2;
t806 = t779 ^ 2;
t810 = t560 + t572 + t584 + t596 + t619 + t631 + t673 + t685 + m(7) * (t785 + t786 + t787) + m(6) * (t791 + t792 + t793) + m(5) * (t797 + t798 + t799) + m(4) * (t718 * t803 + t721 * t803 + t806);
t811 = t185 + t190 + t195;
t812 = t811 * t10;
t814 = t329 * t35 * t2;
t816 = t312 * t45 * t2;
t817 = t208 + t214 + t34;
t818 = t817 * t10;
t820 = t346 * t45 * t2;
t822 = t363 * t35 * t2;
t824 = t403 * t35 * t2;
t825 = t13 - t20 - t202;
t826 = t825 * t10;
t828 = t383 * t45 * t2;
t829 = t29 * pkin(6);
t835 = pkin(6) * t10 * t50 + t10 * t540 - t42 * t445 - t42 * t829;
t842 = -pkin(6) * t10 * t83 - t10 * t542 - t445 * t76 - t76 * t829;
t855 = t10 * t599 - t42 * t480;
t859 = -t10 * t601 - t480 * t76;
t866 = t10 * t634 - t42 * t492;
t870 = -t10 * t636 - t492 * t76;
t876 = -t42 * t460 + t76 * t465 + t811 * t10 + t817 * t10 - t42 * t470 + t76 * t475 + 0.2e1 * m(6) * (t108 * t855 + t113 * t859) + t825 * t10 + 0.2e1 * m(5) * (t121 * t866 + t126 * t870) - t42 * t504 + t76 * t509;
t884 = t42 * t542 + t42 * t84 + t51 * t76 + t540 * t76;
t893 = -t2 * t35 * t557 + t2 * t45 * t552 + t10 * t465;
t894 = t35 * t893;
t895 = t42 * t571;
t901 = -t2 * t35 * t569 + t2 * t45 * t564 + t10 * t460;
t902 = t45 * t901;
t903 = t76 * t559;
t904 = t313 + t330;
t905 = t10 * t904;
t911 = -t2 * t35 * t581 + t2 * t45 * t576 + t10 * t475;
t912 = t35 * t911;
t918 = -t2 * t35 * t593 + t2 * t45 * t588 + t10 * t470;
t919 = t45 * t918;
t924 = t42 * t601 + t599 * t76;
t928 = t76 * t583;
t929 = t347 + t364;
t930 = t10 * t929;
t931 = t42 * t595;
t933 = t10 * (t384 + t404);
t939 = -t2 * t35 * t616 + t2 * t45 * t611 + t10 * t504;
t940 = t45 * t939;
t941 = t42 * t618;
t942 = t76 * t630;
t947 = t42 * t636 + t634 * t76;
t956 = -t2 * t35 * t628 + t2 * t45 * t623 + t10 * t509;
t957 = t35 * t956;
t958 = 0.2e1 * m(7) * (t447 * t835 + t453 * t842 + t544 * t884) + t894 - t895 + t902 + t903 - t905 + t912 + t919 + 0.2e1 * m(6) * (t482 * t855 + t485 * t859 + t603 * t924) + t928 - t930 - t931 - t933 + t940 - t941 + t942 + 0.2e1 * m(5) * (t494 * t866 + t497 * t870 + t638 * t947) + t957;
t974 = t894 - t895 + t902 + t903 - t905 + t912 + t919 + t928 - t930 - t931 - t933 + t940 - t941 + t942 + t957 + 0.2e1 * m(7) * (t733 * t835 + t735 * t842 + t758 * t884) + 0.2e1 * m(6) * (t739 * t855 + t741 * t859 + t765 * t924) + 0.2e1 * m(5) * (t745 * t866 + t747 * t870 + t772 * t947);
t981 = t816 - t814 - t812;
t983 = t835 ^ 2;
t984 = t842 ^ 2;
t985 = t884 ^ 2;
t989 = t820 - t822 - t818;
t991 = t855 ^ 2;
t992 = t859 ^ 2;
t993 = t924 ^ 2;
t997 = t866 ^ 2;
t998 = t870 ^ 2;
t999 = t947 ^ 2;
t1005 = t76 * t893 - t42 * t901 + t76 * t911 - t42 * t918 + t76 * t956 - t42 * t939 - t10 * t981 + m(7) * (t983 + t984 + t985) - t10 * t989 + m(6) * (t991 + t992 + t993) + m(5) * (t997 + t998 + t999) - t10 * (t828 - t824 - t826);
t1007 = -pkin(7) * t29 + t14;
t1008 = t811 * t1007;
t1010 = -pkin(7) * t50 - t59 + t60;
t1011 = t329 * t1010;
t1013 = -pkin(7) * t83 + t89 + t90;
t1014 = t312 * t1013;
t1016 = t817 * t2 * t8;
t1017 = t346 * t91;
t1018 = t363 * t61;
t1024 = pkin(6) * t29 * t61 - t1007 * t540 + t1010 * t445 - t14 * t51;
t1031 = -pkin(6) * t29 * t91 + t1007 * t542 - t1013 * t445 + t14 * t84;
t1043 = -t14 * t599 + t480 * t61;
t1047 = t14 * t601 - t480 * t91;
t1051 = -t1008 - t1011 - t1014 - t1016 - t1017 - t1018 + 0.2e1 * m(7) * (t100 * t1031 + t1024 * t71) + t1010 * t460 + t1013 * t465 - t811 * t1007 - t14 * t817 + t61 * t470 + t91 * t475 + 0.2e1 * m(6) * (t1043 * t108 + t1047 * t113);
t1060 = pkin(6) * t50 * t91 - pkin(6) * t61 * t83 - t1010 * t542 + t1013 * t540;
t1067 = -t1007 * t465 + t1010 * t557 + t1013 * t552;
t1068 = t35 * t1067;
t1069 = t1010 * t571;
t1073 = -t1007 * t460 + t1010 * t569 + t1013 * t564;
t1074 = t45 * t1073;
t1075 = t1013 * t559;
t1076 = t1007 * t904;
t1081 = -t2 * t475 * t8 + t576 * t91 + t581 * t61;
t1082 = t35 * t1081;
t1087 = -t2 * t470 * t8 + t588 * t91 + t593 * t61;
t1088 = t45 * t1087;
t1093 = t599 * t91 - t601 * t61;
t1097 = t91 * t583;
t1098 = t14 * t929;
t1099 = t61 * t595;
t1100 = 0.2e1 * m(7) * (t1024 * t447 + t1031 * t453 + t1060 * t544) + t1068 + t1069 + t1074 + t1075 + t1076 + t1082 + t1088 + 0.2e1 * m(6) * (t1043 * t482 + t1047 * t485 + t1093 * t603) + t1097 + t1098 + t1099;
t1111 = t1068 + t1069 + t1074 + t1075 + t1076 + t1082 + t1088 + t1097 + t1098 + t1099 + 0.2e1 * m(7) * (t1024 * t733 + t1031 * t735 + t1060 * t758) + 0.2e1 * m(6) * (t1043 * t739 + t1047 * t741 + t1093 * t765);
t1116 = t1014 + t1011 + t1008;
t1127 = t1017 + t1018 + t1016;
t1136 = t76 * t1067 - t42 * t1073 + t76 * t1081 - t42 * t1087 - t10 * t1116 + t1010 * t901 + t1013 * t893 + t1007 * t981 + 0.2e1 * m(7) * (t1024 * t835 + t1031 * t842 + t1060 * t884) + t61 * t918 - t10 * t1127 + t14 * t989 + 0.2e1 * m(6) * (t1043 * t855 + t1047 * t859 + t1093 * t924) + t91 * t911;
t1141 = t1024 ^ 2;
t1142 = t1031 ^ 2;
t1143 = t1060 ^ 2;
t1148 = t1043 ^ 2;
t1149 = t1047 ^ 2;
t1150 = t1093 ^ 2;
t1156 = t811 * t29;
t1157 = t329 * t50;
t1158 = t312 * t83;
t1161 = -t29 * t540 + t445 * t50;
t1165 = t29 * t542 - t445 * t83;
t1177 = -t50 * t542 + t540 * t83;
t1184 = -t29 * t465 + t50 * t557 + t552 * t83;
t1185 = t35 * t1184;
t1186 = t50 * t571;
t1190 = -t29 * t460 + t50 * t569 + t564 * t83;
t1191 = t45 * t1190;
t1192 = t83 * t559;
t1193 = t29 * t904;
t1203 = t1158 + t1157 + t1156;
t1229 = t1161 ^ 2;
t1230 = t1165 ^ 2;
t1231 = t1177 ^ 2;
unknown(1,1) = t231;
unknown(2,1) = t405 / 0.2e1 + t524 / 0.2e1;
unknown(3,1) = t732;
unknown(4,1) = t755 / 0.2e1;
unknown(5,1) = t784;
unknown(6,1) = t810;
unknown(7,1) = t812 / 0.2e1 + t814 / 0.2e1 - t816 / 0.2e1 + t818 / 0.2e1 - t820 / 0.2e1 + t822 / 0.2e1 + t824 / 0.2e1 + t826 / 0.2e1 - t828 / 0.2e1 + m(7) * (t100 * t842 + t71 * t835) + t876 / 0.2e1;
unknown(8,1) = t958 / 0.2e1;
unknown(9,1) = t974 / 0.2e1;
unknown(10,1) = t1005;
unknown(11,1) = t1051 / 0.2e1;
unknown(12,1) = t1100 / 0.2e1;
unknown(13,1) = t1111 / 0.2e1;
unknown(14,1) = t1136 / 0.2e1;
unknown(15,1) = t14 * t1127 + t1007 * t1116 + t1010 * t1073 + t1013 * t1067 + m(7) * (t1141 + t1142 + t1143) + t91 * t1081 + m(6) * (t1148 + t1149 + t1150) + t61 * t1087;
unknown(16,1) = -t1156 / 0.2e1 - t1157 / 0.2e1 - t1158 / 0.2e1 + m(7) * (t100 * t1165 + t1161 * t71) + t50 * t460 / 0.2e1 + t83 * t465 / 0.2e1 - t811 * t29 / 0.2e1;
unknown(17,1) = m(7) * (t1161 * t447 + t1165 * t453 + t1177 * t544) + t1185 / 0.2e1 + t1186 / 0.2e1 + t1191 / 0.2e1 + t1192 / 0.2e1 + t1193 / 0.2e1;
unknown(18,1) = t1185 / 0.2e1 + t1186 / 0.2e1 + t1191 / 0.2e1 + t1192 / 0.2e1 + t1193 / 0.2e1 + m(7) * (t1161 * t733 + t1165 * t735 + t1177 * t758);
unknown(19,1) = t76 * t1184 / 0.2e1 - t42 * t1190 / 0.2e1 - t10 * t1203 / 0.2e1 + t50 * t901 / 0.2e1 + t83 * t893 / 0.2e1 + t29 * t981 / 0.2e1 + m(7) * (t1161 * t835 + t1165 * t842 + t1177 * t884);
unknown(20,1) = t29 * t1116 / 0.2e1 + t50 * t1073 / 0.2e1 + t83 * t1067 / 0.2e1 + t1010 * t1190 / 0.2e1 + m(7) * (t1161 * t1024 + t1165 * t1031 + t1177 * t1060) + t1013 * t1184 / 0.2e1 + t1007 * t1203 / 0.2e1;
unknown(21,1) = t83 * t1184 + t50 * t1190 + t29 * t1203 + m(7) * (t1229 + t1230 + t1231);
%% Postprocessing: Reshape Output
% From vec2symmat_6_matlab.m
res = [unknown(1), unknown(2), unknown(4), unknown(7), unknown(11), unknown(16); unknown(2), unknown(3), unknown(5), unknown(8), unknown(12), unknown(17); unknown(4), unknown(5), unknown(6), unknown(9), unknown(13), unknown(18); unknown(7), unknown(8), unknown(9), unknown(10), unknown(14), unknown(19); unknown(11), unknown(12), unknown(13), unknown(14), unknown(15), unknown(20); unknown(16), unknown(17), unknown(18), unknown(19), unknown(20), unknown(21);];
Mq = res;
