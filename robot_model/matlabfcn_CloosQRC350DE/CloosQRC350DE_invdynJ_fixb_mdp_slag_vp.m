% Calculate vector of inverse dynamics joint torques for
% CloosQRC350DE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,kDG]';
% MDP [36x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see CloosQRC350DE_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-19 21:40
% Revision: caa0dbda1e8a16d11faaa29ba3bbef6afcd619f7 (2020-05-25)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = CloosQRC350DE_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(7,1),zeros(36,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350DE_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350DE_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'CloosQRC350DE_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'CloosQRC350DE_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'CloosQRC350DE_invdynJ_fixb_mdp_slag_vp: pkin has to be [7x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [36 1]), ...
  'CloosQRC350DE_invdynJ_fixb_mdp_slag_vp: MDP has to be [36x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 1
% StartTime: 2020-06-19 21:39:39
% EndTime: 2020-06-19 21:39:42
% DurationCPUTime: 1.90s
% Computational Cost: add. (13310->952), mult. (27830->1165), div. (0->0), fcn. (21394->12), ass. (0->457)
unknown=NaN(6,1);
t1 = pkin(7) * qJD(5);
t2 = t1 - qJD(6);
t4 = pkin(7) * qJ(5) - qJ(6);
t5 = sin(t4);
t6 = t2 * t5;
t7 = cos(qJ(5));
t8 = sin(qJ(4));
t9 = t7 * t8;
t10 = sin(qJ(2));
t11 = t10 * pkin(3);
t12 = cos(qJ(3));
t13 = cos(qJ(2));
t14 = t12 * t13;
t15 = sin(qJ(3));
t16 = t15 * t10;
t17 = -t14 + t16;
t19 = t15 * t13;
t20 = t12 * t10;
t21 = t19 + t20;
t23 = -t21 * pkin(4) + t17 * pkin(5) - pkin(2) - t11;
t25 = t8 * t17;
t27 = -t25 * pkin(6) - t9 * t23;
t29 = cos(t4);
t30 = sin(qJ(5));
t31 = qJD(5) * t30;
t32 = t8 * t23;
t34 = t7 * qJD(4);
t35 = cos(qJ(4));
t36 = t35 * t23;
t38 = qJD(2) * t13;
t40 = qJD(3) * t15;
t42 = t12 * qJD(2);
t44 = qJD(3) * t12;
t46 = t15 * qJD(2);
t48 = t42 * t10 + t44 * t10 + t40 * t13 + t46 * t13;
t54 = -t40 * t10 - t46 * t10 + t42 * t13 + t44 * t13;
t56 = -t38 * pkin(3) - t54 * pkin(4) + t48 * pkin(5);
t58 = qJD(4) * t35;
t61 = t8 * t48;
t63 = -t58 * t17 * pkin(6) - t61 * pkin(6) + t31 * t32 - t34 * t36 - t9 * t56;
t65 = t2 * t29;
t66 = t7 * t35;
t69 = t66 * t17 + t30 * t21;
t71 = t69 * pkin(6) + t36;
t73 = qJD(4) * t8;
t75 = t35 * t56;
t76 = t35 * t17;
t80 = qJD(5) * t7;
t83 = t80 * t21 - t34 * t25 + t30 * t54 - t31 * t76 + t66 * t48;
t85 = t83 * pkin(6) - t73 * t23 + t75;
t90 = -t14 * qJD(1) + t16 * qJD(1);
t92 = qJD(2) + qJD(3);
t94 = t35 * t90 - t8 * t92;
t95 = t30 * t94;
t96 = t19 * qJD(1);
t97 = t20 * qJD(1);
t98 = t96 + t97 + qJD(4);
t99 = t7 * t98;
t100 = t95 - t99 - qJD(6) + t1;
t105 = t80 * t94;
t106 = t73 * t90;
t107 = t13 * qJD(1);
t108 = t40 * t107;
t109 = t10 * qJD(1);
t110 = t42 * t109;
t111 = t14 * qJDD(1);
t112 = t44 * t109;
t113 = t46 * t107;
t114 = t16 * qJDD(1);
t115 = t108 + t110 - t111 + t112 + t113 + t114;
t116 = t35 * t115;
t117 = t58 * t92;
t118 = qJDD(2) + qJDD(3);
t119 = t8 * t118;
t120 = -t106 + t116 - t117 - t119;
t121 = t30 * t120;
t122 = t31 * t98;
t123 = t44 * t107;
t124 = t46 * t109;
t125 = t19 * qJDD(1);
t126 = t40 * t109;
t127 = t42 * t107;
t128 = t20 * qJDD(1);
t129 = t123 - t124 + t125 - t126 + t127 + t128 + qJDD(4);
t130 = t7 * t129;
t132 = pkin(7) * qJDD(5) - qJDD(6) + t105 + t121 + t122 - t130;
t136 = t46 * pkin(3) - t92 * pkin(5);
t137 = t35 * t136;
t138 = qJD(1) * pkin(2);
t139 = t109 * pkin(3);
t141 = t96 + t97;
t143 = -t141 * pkin(4) + t90 * pkin(5) - t138 - t139;
t144 = t8 * t143;
t145 = t137 - t144;
t146 = t7 * t145;
t149 = t42 * pkin(3) + t92 * pkin(4);
t150 = t30 * t149;
t151 = t8 * t90;
t152 = t35 * t92;
t153 = t151 + t152 + qJD(5);
t155 = -t153 * pkin(6) + t146 + t150;
t156 = t6 * t155;
t157 = t31 * t145;
t158 = t73 * t136;
t159 = qJD(2) * pkin(3);
t160 = t44 * t159;
t162 = t15 * qJDD(2) * pkin(3);
t164 = -t118 * pkin(5) + t160 + t162;
t165 = t35 * t164;
t166 = t58 * t143;
t167 = qJDD(1) * pkin(2);
t169 = t38 * qJD(1) * pkin(3);
t170 = t10 * qJDD(1);
t171 = t170 * pkin(3);
t173 = t123 - t124 + t125 - t126 + t127 + t128;
t175 = -t173 * pkin(4) + t115 * pkin(5) - t167 - t169 - t171;
t176 = t8 * t175;
t177 = -t158 + t165 - t166 - t176;
t178 = t7 * t177;
t179 = t80 * t149;
t180 = t40 * t159;
t182 = t12 * qJDD(2) * pkin(3);
t184 = t118 * pkin(4) - t180 + t182;
t185 = t30 * t184;
t186 = t58 * t90;
t187 = t8 * t115;
t188 = t73 * t92;
t189 = t35 * t118;
t190 = t186 + t187 - t188 + t189 + qJDD(5);
t192 = -t190 * pkin(6) - t157 + t178 + t179 + t185;
t193 = t29 * t192;
t194 = t8 * t136;
t195 = t35 * t143;
t198 = t30 * t98 + t7 * t94;
t200 = t198 * pkin(6) + t194 + t195;
t201 = t65 * t200;
t202 = t58 * t136;
t203 = t8 * t164;
t204 = t73 * t143;
t205 = t35 * t175;
t206 = t31 * t94;
t207 = t7 * t120;
t208 = t80 * t98;
t209 = t30 * t129;
t210 = -t206 + t207 + t208 + t209;
t212 = t210 * pkin(6) + t202 + t203 - t204 + t205;
t213 = t5 * t212;
t214 = t156 - t193 - t201 - t213;
t215 = t30 * t35;
t218 = t215 * t17 - t7 * t21;
t222 = -t29 * t155 - t5 * t200;
t224 = t30 * qJD(4);
t229 = t31 * t21 + t215 * t48 - t224 * t25 - t7 * t54 + t80 * t76;
t233 = -t5 * t153 - t29 * t198;
t238 = t30 * t8;
t241 = t6 * t198;
t242 = t29 * t210;
t243 = t65 * t153;
t244 = t5 * t190;
t245 = t241 - t242 - t243 - t244;
t248 = t80 * t145;
t249 = t30 * t177;
t250 = t31 * t149;
t251 = t7 * t184;
t252 = -t248 - t249 - t250 + t251;
t254 = t5 * t8;
t256 = -t254 * t17 - t29 * t69;
t260 = -t30 * t145 + t7 * t149;
t264 = t5 * qJD(4);
t267 = -t65 * t25 - t254 * t48 - t264 * t76 - t29 * t83 + t6 * t69;
t272 = qJD(2) * t10;
t275 = t13 ^ 2;
t279 = t10 ^ 2;
t282 = t13 * qJDD(1);
t289 = qJD(2) ^ 2;
t323 = -pkin(3) * t141;
t325 = -pkin(2) - t11;
t327 = -t167 - t169 - t171;
t329 = -t138 - t139;
t333 = pkin(3) * t90;
t340 = t120 * t35;
t342 = t94 * qJD(4);
t344 = t94 * t35;
t348 = -t151 - t152;
t351 = t35 * t48;
t353 = -t186 - t187 + t188 - t189;
t355 = t120 * t8;
t358 = t94 * t8;
t362 = t17 * t98;
t370 = ((t6 * t27 - t29 * t63 - t5 * t85 - t65 * t71) * t100 + (-t29 * t27 - t5 * t71) * t132 + t214 * t218 + t222 * t229 + t80 * t32 * t233 + t224 * t36 * t233 + t238 * t56 * t233 + t238 * t23 * t245 + t252 * t256 + t260 * t267) * MDP(36) + qJDD(1) * MDP(1) + (t275 * qJDD(1) - 0.2e1 * t107 * t272) * MDP(2) + 0.2e1 * (-t275 * qJD(1) * qJD(2) + qJD(2) * t279 * qJD(1) - t282 * t10) * MDP(3) + (-qJDD(2) * t13 + t289 * t10) * MDP(4) + (qJDD(2) * t10 + t289 * t13) * MDP(5) + 0.2e1 * (t167 * t10 + t138 * t38) * MDP(7) + 0.2e1 * (t167 * t13 - t138 * t272) * MDP(8) + (t115 * t17 + t90 * t48) * MDP(9) + (t115 * t21 + t48 * t141 + t17 * t173 + t90 * t54) * MDP(10) + (t17 * t118 + t48 * t92) * MDP(11) + (t21 * t118 + t54 * t92) * MDP(12) + (-t325 * t173 - t327 * t21 - t38 * t323 - t329 * t54) * MDP(14) + (t325 * t115 + t327 * t17 + t329 * t48 - t38 * t333) * MDP(15) + (t340 * t17 - t342 * t25 + t344 * t48) * MDP(16) + (-t73 * t17 * t348 - t355 * t17 - t342 * t76 + t351 * t348 + t76 * t353 - t358 * t48) * MDP(17) + (t120 * t21 + t76 * t129 + t351 * t98 - t73 * t362 + t94 * t54) * MDP(18);
t390 = -t157 + t178 + t179 + t185;
t393 = t146 + t150;
t394 = t393 * qJD(4);
t396 = t393 * t8;
t402 = t202 + t203 - t204 + t205;
t404 = t194 + t195;
t406 = -t31 * t32 * t153 + t34 * t36 * t153 + t9 * t56 * t153 - t390 * t8 * t17 + t9 * t23 * t190 - t73 * t23 * t198 + t75 * t198 + t36 * t210 - t394 * t76 - t396 * t48 + t402 * t69 + t404 * t83;
t414 = t29 * t153 - t5 * t198;
t416 = t65 * t198;
t417 = t5 * t210;
t418 = t6 * t153;
t419 = t29 * t190;
t420 = -t416 - t417 - t418 + t419;
t423 = t29 * t8;
t425 = t423 * t17 - t5 * t69;
t430 = t29 * qJD(4);
t433 = -t6 * t25 + t423 * t48 + t430 * t76 - t5 * t83 - t65 * t69;
t463 = t65 * t155;
t464 = t5 * t192;
t465 = t6 * t200;
t466 = t29 * t212;
t467 = -t463 - t464 - t465 + t466;
t471 = -t5 * t155 + t29 * t200;
t491 = t184 * t8;
t493 = t149 * qJD(4);
t495 = t149 * t8;
t506 = t184 * t35;
t509 = t149 * t35;
t517 = -t95 + t99;
t519 = -t105 - t121 - t122 + t130;
t529 = t198 * qJD(4);
t531 = t198 * t8;
t539 = t517 * qJD(4);
t541 = t517 * t8;
t547 = t153 * qJD(4);
t549 = t153 * t8;
t563 = t260 * qJD(4);
t565 = t260 * t8;
t573 = t224 * t36 * t153 + t238 * t56 * t153 + t80 * t32 * t153 + t252 * t8 * t17 + t238 * t23 * t190 + t73 * t23 * t517 + t402 * t218 + t404 * t229 - t36 * t519 + t565 * t48 - t75 * t517 + t563 * t76;
t575 = (-t25 * t129 + t353 * t21 + t348 * t54 - t58 * t362 - t61 * t98) * MDP(19) + (t129 * t21 + t98 * t54) * MDP(20) + t406 * MDP(29) + (t233 * t267 + t245 * t256) * MDP(30) + (t233 * t433 + t245 * t425 + t256 * t420 + t267 * t414) * MDP(31) + (-t267 * t100 - t256 * t132 - t245 * t218 - t233 * t229) * MDP(32) + (-t433 * t100 - t425 * t132 - t420 * t218 - t414 * t229) * MDP(33) + (t100 * t229 + t132 * t218) * MDP(34) + (-(-t65 * t27 + t29 * t85 - t5 * t63 - t6 * t71) * t100 - (-t5 * t27 + t29 * t71) * t132 - t467 * t218 - t471 * t229 - t80 * t32 * t414 - t224 * t36 * t414 - t238 * t56 * t414 - t238 * t23 * t420 - t252 * t425 - t260 * t433) * MDP(35) + (t73 * t23 * t98 - t36 * t129 + t491 * t17 - t402 * t21 - t404 * t54 + t495 * t48 + t493 * t76 - t75 * t98) * MDP(21) + (t58 * t23 * t98 + t8 * t56 * t98 + t32 * t129 - t145 * t54 + t506 * t17 - t177 * t21 - t493 * t25 + t509 * t48) * MDP(22) + (t198 * t83 + t210 * t69) * MDP(23) + (-t198 * t229 - t210 * t218 + t83 * t517 + t69 * t519) * MDP(24) + (t210 * t8 * t17 + t83 * t153 + t69 * t190 + t531 * t48 + t529 * t76) * MDP(25) + (t519 * t8 * t17 - t229 * t153 - t218 * t190 + t541 * t48 + t539 * t76) * MDP(26) + (t190 * t8 * t17 + t549 * t48 + t547 * t76) * MDP(27) + t573 * MDP(28);
t578 = t5 * qJD(5);
t580 = t5 * t7;
t584 = -t578 * t238 - t6 * t35 - t430 * t8 + t580 * t58 + t65 * t9;
t588 = t29 * t35 + t580 * t8;
t592 = t414 * qJD(5);
t594 = t414 * t30;
t598 = t66 * t141 - t30 * t90;
t601 = t423 * t141 - t5 * t598;
t605 = -t215 * t141 - t7 * t90;
t608 = (t420 * t30 * t8 - t584 * t100 + t601 * t100 - t588 * t132 - t414 * t605 + t594 * t58 + t592 * t9) * MDP(33);
t611 = -t100 * qJD(5);
t613 = -t100 * t30;
t617 = (-t132 * t30 * t8 + t100 * t605 + t613 * t58 + t611 * t9) * MDP(34);
t618 = t15 * pkin(3);
t619 = t618 - pkin(5);
t620 = t66 * t619;
t621 = t12 * pkin(3);
t622 = t621 + pkin(4);
t623 = t30 * t622;
t624 = t35 * pkin(6);
t625 = t620 + t623 - t624;
t627 = t35 * t619;
t628 = t31 * t627;
t629 = t8 * t619;
t630 = t34 * t629;
t631 = t44 * pkin(3);
t632 = t66 * t631;
t633 = t80 * t622;
t635 = t30 * qJD(3) * t618;
t636 = t73 * pkin(6);
t637 = -t628 - t630 + t632 + t633 - t635 + t636;
t639 = t9 * pkin(6);
t640 = t629 - t639;
t643 = t8 * qJD(3);
t646 = t31 * t8 * pkin(6);
t647 = t34 * t624;
t648 = t58 * t619 + t643 * t621 + t646 - t647;
t657 = t467 * t30 * t8;
t658 = t471 * qJD(5);
t659 = t658 * t9;
t660 = t471 * t30;
t661 = t660 * t58;
t668 = -t7 * qJD(3) * t618 - t215 * t631 + t224 * t629 - t31 * t622 - t80 * t627;
t672 = -t215 * t619 + t7 * t622;
t674 = -t252 * t588;
t675 = -t260 * t584;
t677 = t141 * pkin(5);
t678 = -t90 * pkin(4);
t679 = -t107 * pkin(3) + t677 - t678;
t681 = t8 * t141;
t682 = t681 * pkin(6);
t683 = -t9 * t679 - t682;
t685 = t35 * t679;
t686 = t598 * pkin(6);
t687 = t685 + t686;
t691 = t471 * t605;
t694 = -t260 * t601;
t695 = qJ(2) + qJ(3);
t696 = sin(t695);
t697 = t696 * t35;
t699 = cos(t695);
t701 = -t699 * t30 - t697 * t7;
t703 = t696 * t8;
t706 = g(3) * (-t701 * t29 + t703 * t5);
t707 = -(t29 * t648 - t5 * t637 - t6 * t640 - t65 * t625) * t100 - (t29 * t640 - t5 * t625) * t132 + t657 + t659 + t661 - t668 * t414 - t672 * t420 + t674 + t675 + (t29 * t687 - t5 * t683) * t100 - t691 + t238 * t679 * t414 - t694 - t706;
t720 = t214 * t30 * t8;
t721 = t222 * qJD(5);
t722 = t721 * t9;
t723 = t222 * t30;
t724 = t723 * t58;
t727 = t29 * t7;
t730 = -t5 * t35 + t727 * t8;
t731 = t252 * t730;
t733 = t29 * qJD(5);
t738 = -t733 * t238 + t264 * t8 - t65 * t35 + t727 * t58 - t6 * t9;
t739 = t260 * t738;
t744 = -t222 * t605;
t749 = -t254 * t141 - t29 * t598;
t750 = t260 * t749;
t754 = g(3) * (-t703 * t29 - t701 * t5);
t755 = (-t29 * t637 - t5 * t648 + t6 * t625 - t65 * t640) * t100 + (-t29 * t625 - t5 * t640) * t132 - t720 - t722 - t724 + t668 * t233 + t672 * t245 + t731 + t739 - (-t29 * t683 - t5 * t687) * t100 - t744 - t238 * t679 * t233 - t750 - t754;
t757 = qJD(1) ^ 2;
t762 = t141 ^ 2;
t765 = (t90 ^ 2 - t762) * MDP(10);
t766 = t118 * MDP(13);
t767 = pkin(3) * t92;
t771 = t329 * t90;
t772 = g(3) * t696;
t775 = -pkin(3) * t92;
t779 = t329 * t141;
t780 = g(3) * t699;
t786 = (-t344 * t141 - t342 * t35 - t355) * MDP(16);
t790 = t35 * t141;
t794 = (t358 * t141 + t342 * t8 - t58 * t348 - t790 * t348 - t8 * t353 - t340) * MDP(17);
t800 = (-t8 * t129 - t58 * t98 - t790 * t98 + t94 * t90) * MDP(18);
t806 = (-t35 * t129 + t348 * t90 + t681 * t98 + t73 * t98) * MDP(19);
t812 = -pkin(3) * t348;
t815 = t493 * t8;
t817 = t404 * t90;
t818 = t495 * t141;
t819 = t772 * t35;
t820 = -t58 * t619 * t98 - t643 * t621 * t98 - t629 * t129 - t622 * t353 - t40 * t812 + t685 * t98 + t506 - t815 - t817 - t818 + t819;
t828 = pkin(3) * t94;
t831 = t493 * t35;
t834 = t145 * t90;
t835 = t509 * t141;
t836 = t772 * t8;
t837 = -t35 * qJD(3) * t621 * t98 + t73 * t619 * t98 - t8 * t679 * t98 + t622 * t120 - t627 * t129 - t40 * t828 - t491 - t831 - t834 - t835 - t836;
t839 = t210 * t7;
t841 = t198 * qJD(5);
t843 = t198 * t7;
t847 = (-t198 * t598 + t841 * t238 - t843 * t58 - t839 * t8) * MDP(23);
t852 = t210 * t30;
t855 = t198 * t30;
t860 = (-t34 * t35 * t517 - t198 * t605 + t31 * t541 - t598 * t517 - t9 * t519 + t855 * t58 + t852 * t8 + t841 * t9) * MDP(24);
t861 = t608 + t617 + t707 * MDP(35) + t755 * MDP(36) + (t275 * t757 - t279 * t757) * MDP(3) + t765 + t766 + (t107 * t323 + t621 * t118 - t40 * t767 - t180 + t182 - t771 + t772) * MDP(14) + (t107 * t333 - t618 * t118 + t44 * t775 - t160 - t162 - t779 + t780) * MDP(15) + t786 + t794 + t800 + t806 + t820 * MDP(21) + t837 * MDP(22) + t847 + t860;
t863 = t35 * t153;
t871 = (-t531 * t141 - t598 * t153 - t9 * t190 + t210 * t35 + t31 * t549 - t34 * t863 - t529 * t8) * MDP(25);
t880 = (-t541 * t141 - t605 * t153 + t238 * t190 + t224 * t863 + t519 * t35 - t539 * t8 + t80 * t549) * MDP(26);
t885 = (-t549 * t141 + t35 * t190 - t547 * t8) * MDP(27);
t888 = t252 * t35;
t889 = t563 * t8;
t895 = t402 * t30;
t896 = t895 * t8;
t897 = t404 * qJD(5);
t898 = t897 * t9;
t899 = t404 * t30;
t900 = t899 * t58;
t903 = t565 * t141;
t905 = -t404 * t605;
t906 = g(3) * t701;
t907 = -t238 * t679 * t153 - t58 * t619 * t517 - t643 * t621 * t517 + t668 * t153 + t672 * t190 + t685 * t517 - t629 * t519 + t888 - t889 - t896 - t898 - t900 - t903 - t905 - t906;
t913 = t390 * t35;
t914 = t394 * t8;
t920 = t402 * t7;
t921 = t920 * t8;
t922 = t897 * t238;
t923 = t404 * t7;
t924 = t923 * t58;
t927 = t396 * t141;
t929 = t404 * t598;
t933 = g(3) * (t697 * t30 - t699 * t7);
t934 = -(-t628 - t630 + t632 + t633 - t635) * t153 - (t620 + t623) * t190 - t913 + t914 + t58 * t619 * t198 + t643 * t621 * t198 + t629 * t210 - t921 + t922 - t924 - t9 * t679 * t153 + t927 - t685 * t198 - t929 - t933;
t940 = (t233 * t738 - t233 * t749 + t245 * t730) * MDP(30);
t948 = (t233 * t584 - t233 * t601 + t245 * t588 + t738 * t414 - t749 * t414 + t730 * t420) * MDP(31);
t953 = t233 * qJD(5);
t955 = t233 * t30;
t960 = (t245 * t30 * t8 - t738 * t100 + t749 * t100 - t730 * t132 - t233 * t605 + t955 * t58 + t953 * t9) * MDP(32);
t962 = t757 * pkin(2);
t973 = (-t141 * t92 + t108 + t110 - t111 + t112 + t113 + t114) * MDP(11);
t976 = (t90 * t92 + t123 - t124 + t125 - t126 + t127 + t128) * MDP(12);
t983 = t90 * t141 * MDP(9);
t985 = -t98 * t90 * MDP(20);
t986 = t871 + t880 + t885 + t907 * MDP(28) + t934 * MDP(29) + t940 + t948 + t960 + qJDD(2) * MDP(6) + (g(3) * t10 - t962 * t13) * MDP(7) + (g(3) * t13 + t962 * t10) * MDP(8) + t973 + t976 + t13 * t757 * t10 * MDP(2) - t282 * MDP(4) + t170 * MDP(5) - t983 - t985;
t988 = t66 * pkin(5);
t989 = t30 * pkin(4);
t990 = -t988 + t989 - t624;
t992 = t35 * pkin(5);
t993 = t31 * t992;
t994 = t8 * pkin(5);
t995 = t34 * t994;
t996 = t80 * pkin(4);
t997 = t993 + t995 + t996 + t636;
t999 = -t994 - t639;
t1002 = -t58 * pkin(5) + t646 - t647;
t1013 = -t31 * pkin(4) - t224 * t994 + t80 * t992;
t1017 = t7 * pkin(4) + t215 * pkin(5);
t1021 = t677 - t678;
t1023 = t35 * t12 * t159 - t8 * t1021;
t1024 = t7 * t1023;
t1026 = t30 * t15 * t159;
t1027 = t1024 - t1026 - t682;
t1030 = t8 * t12 * t159;
t1031 = t35 * t1021;
t1032 = t1030 + t1031 + t686;
t1039 = -t7 * t15 * t159 - t30 * t1023;
t1041 = -(t29 * t1002 - t5 * t997 - t6 * t999 - t65 * t990) * t100 - (t29 * t999 - t5 * t990) * t132 + t657 + t659 + t661 - t1013 * t414 - t1017 * t420 + t674 + t675 + (-t5 * t1027 + t29 * t1032) * t100 - t691 + t1039 * t414 - t694 - t706;
t1060 = (-t5 * t1002 - t29 * t997 + t6 * t990 - t65 * t999) * t100 + (-t29 * t990 - t5 * t999) * t132 - t720 - t722 - t724 + t1013 * t233 + t1017 * t245 + t731 + t739 - (-t29 * t1027 - t5 * t1032) * t100 - t744 - t1039 * t233 - t750 - t754;
t1072 = -t1030 - t1031;
t1092 = t58 * pkin(5) * t517 + t1013 * t153 + t1017 * t190 - t1039 * t153 - t1072 * t517 + t994 * t519 + t888 - t889 - t896 - t898 - t900 - t903 - t905 - t906;
t1104 = -(t993 + t995 + t996) * t153 - (-t988 + t989) * t190 - t913 + t914 - t58 * pkin(5) * t198 - t994 * t210 - t921 + t922 - t924 + (t1024 - t1026) * t153 + t927 + t1072 * t198 - t929 - t933;
t1106 = t1041 * MDP(35) + t1060 * MDP(36) + t608 + t617 + t765 + (t46 * t767 - t180 + t182 - t771 + t772) * MDP(14) + (-t42 * t775 - t160 - t162 - t779 + t780) * MDP(15) + (t58 * pkin(5) * t98 - pkin(4) * t353 - t1072 * t98 + t994 * t129 + t46 * t812 + t506 - t815 - t817 - t818 + t819) * MDP(21) + (-t73 * pkin(5) * t98 + pkin(4) * t120 + t1023 * t98 + t992 * t129 + t46 * t828 - t491 - t831 - t834 - t835 - t836) * MDP(22) + t1092 * MDP(28) + t1104 * MDP(29) + t766 + t786 + t794;
t1107 = t800 + t806 + t847 + t860 + t871 + t880 + t885 + t940 + t948 + t960 + t973 + t976 - t983 - t985;
t1111 = t348 ^ 2;
t1139 = t7 * t348;
t1161 = -t404 * t30;
t1170 = -t404 * t7;
t1178 = t245 * t29;
t1180 = t233 * t2;
t1181 = t5 * t30;
t1187 = -t727 * t348 - t5 * t94;
t1194 = t29 * t30;
t1196 = t245 * t5;
t1204 = t29 * t94 - t580 * t348;
t1209 = -t7 * t100;
t1232 = t30 * pkin(6);
t1235 = t7 * pkin(6);
t1242 = t252 * t5;
t1244 = t260 * t2;
t1246 = t5 * t260;
t1249 = -t94 * pkin(6) + t1170;
t1252 = t1139 * pkin(6) + t137 - t144;
t1259 = t699 * t8;
t1261 = t699 * t35;
t1265 = t6 * t1232 * t100 - t733 * t1235 * t100 - t1194 * pkin(6) * t132 + t467 * t7 - t658 * t30 + t1242 * t30 + t1244 * t1194 + t1246 * t80 + (-t5 * t1249 + t29 * t1252) * t100 + t660 * t348 - t1161 * t414 + t260 * t1204 - g(3) * (t1259 * t727 - t1261 * t5);
t1275 = t252 * t29;
t1278 = t260 * t29;
t1291 = -t65 * t1232 * t100 - t578 * t1235 * t100 - t1181 * pkin(6) * t132 - t214 * t7 + t721 * t30 - t1275 * t30 + t1244 * t1181 - t1278 * t80 - (-t29 * t1249 - t5 * t1252) * t100 - t723 * t348 + t1161 * t233 - t260 * t1187 - g(3) * (t1259 * t580 + t1261 * t29);
t1293 = (t30 * t348 * t153 - t31 * t153 + t7 * t190 - t517 * t94) * MDP(26) - t153 * t94 * MDP(27) + (t1161 * t153 + t145 * t517 - t260 * t94 + t897 * t30 - t899 * t348 + t780 * t9 - t920) * MDP(28) + (t1170 * t153 - t145 * t198 - t780 * t238 - t923 * t348 + t393 * t94 + t897 * t7 + t895) * MDP(29) + (-t233 * t29 * t80 - t1178 * t30 + t1180 * t1181 - t233 * t1187) * MDP(30) + (-t233 * t5 * t80 - t733 * t7 * t414 - t1180 * t1194 - t1187 * t414 - t1194 * t420 - t1196 * t30 - t233 * t1204 + t6 * t594) * MDP(31) + (t1187 * t100 + t1194 * t132 - t733 * t1209 + t245 * t7 - t953 * t30 + t955 * t348 + t6 * t613) * MDP(32) + (t1204 * t100 + t1181 * t132 - t578 * t1209 - t592 * t30 + t594 * t348 + t420 * t7 - t65 * t613) * MDP(33) + (-t132 * t7 - t611 * t30 + t613 * t348) * MDP(34) + t1265 * MDP(35) + t1291 * MDP(36);
t1297 = t517 ^ 2;
t1312 = -t1261 * t30 - t696 * t7;
t1320 = -t1261 * t7 + t696 * t30;
t1325 = pkin(7) * t5;
t1327 = t29 * t517;
t1328 = pkin(7) * t29;
t1330 = t1325 * t198 - t1328 * t153 - t1327;
t1339 = t5 * t517;
t1341 = -t1325 * t153 - t1328 * t198 - t1339;
t1378 = -t1320 * pkin(7);
t1406 = -t198 * t517 * MDP(23) + (t198 ^ 2 - t1297) * MDP(24) + (-t517 * t153 - t206 + t207 + t208 + t209) * MDP(25) + (t198 * t153 - t105 - t121 - t122 + t130) * MDP(26) + t190 * MDP(27) + (-g(3) * t1312 + t393 * t153 - t404 * t198 - t248 - t249 - t250 + t251) * MDP(28) + (-g(3) * t1320 + t260 * t153 - t404 * t517 + t157 - t178 - t179 - t185) * MDP(29) + (-t1180 * t29 - t233 * t1330 - t1196) * MDP(30) + (-t1180 * t5 - t1330 * t414 - t233 * t1341 - t65 * t414 - t5 * t420 + t1178) * MDP(31) + (-t245 * pkin(7) + t1330 * t100 + t65 * t100 + t5 * t132 + t233 * t198) * MDP(32) + (-t420 * pkin(7) + t1341 * t100 + t6 * t100 - t29 * t132 + t414 * t198) * MDP(33) + (t132 * pkin(7) - t100 * t198) * MDP(34) + (-t65 * pkin(6) * t100 - t5 * pkin(6) * t132 - t467 * pkin(7) - t1275 + t1244 * t5 + (t1327 * pkin(6) - t1325 * t200 - t1328 * t155 - t1246) * t100 + t471 * t198 - t393 * t414 + t260 * t1341 - g(3) * (-t1259 * t1328 - t1312 * t29 + t1378 * t5)) * MDP(35) + (-t6 * pkin(6) * t100 + t29 * pkin(6) * t132 + t214 * pkin(7) - t65 * t260 - t1242 - (-t1339 * pkin(6) + t1325 * t155 - t1328 * t200 - t1278) * t100 - t222 * t198 + t393 * t233 - t260 * t1330 - g(3) * (-t1259 * t1325 - t1312 * t5 - t1378 * t29)) * MDP(36);
t1409 = t414 ^ 2;
unknown(1,1) = t370 + t575;
unknown(2,1) = t861 + t986;
unknown(3,1) = t1106 + t1107;
unknown(4,1) = -t94 * t348 * MDP(16) + (t94 ^ 2 - t1111) * MDP(17) + (-t348 * t98 - t106 + t116 - t117 - t119) * MDP(18) + (t94 * t98 - t186 - t187 + t188 - t189) * MDP(19) + t129 * MDP(20) + (t145 * t98 - t149 * t94 + t780 * t8 - t202 - t203 + t204 - t205) * MDP(21) + (-t149 * t348 + t780 * t35 - t404 * t98 + t158 - t165 + t166 + t176) * MDP(22) + (-t843 * t348 + t841 * t7 + t852) * MDP(23) + (-t1139 * t517 + t30 * t519 - t841 * t30 + t855 * t348 + t80 * t517 + t839) * MDP(24) + (-t1139 * t153 + t80 * t153 + t30 * t190 - t198 * t94) * MDP(25) + t1293;
unknown(5,1) = t1406;
unknown(6,1) = -t233 * t414 * MDP(30) + (t233 ^ 2 - t1409) * MDP(31) + (t414 * t100 + t241 - t242 - t243 - t244) * MDP(32) + (-t233 * t100 - t416 - t417 - t418 + t419) * MDP(33) - t132 * MDP(34) + (-t463 - t464 - t465 + t466 - t222 * t100 - t260 * t233 - g(3) * (t1259 * t29 + t1320 * t5)) * MDP(35) + (-t156 + t193 + t201 + t213 - t471 * t100 - t260 * t414 - g(3) * (t1259 * t5 - t1320 * t29)) * MDP(36);
tau = unknown;
