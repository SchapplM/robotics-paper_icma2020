% Calculate minimal parameter regressor of coriolis joint torque vector for
% CloosQRC350DE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,kDG]';
% 
% Output:
% tauc_reg [6x36]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-19 21:40
% Revision: caa0dbda1e8a16d11faaa29ba3bbef6afcd619f7 (2020-05-25)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = CloosQRC350DE_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350DE_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350DE_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'CloosQRC350DE_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 1
% StartTime: 2020-06-19 21:39:35
% EndTime: 2020-06-19 21:39:39
% DurationCPUTime: 1.95s
% Computational Cost: add. (11256->736), mult. (25247->975), div. (0->0), fcn. (19276->10), ass. (0->625)
unknown=NaN(6,36);
t1 = cos(qJ(2));
t2 = t1 * qJD(1);
t3 = sin(qJ(2));
t4 = qJD(2) * t3;
t7 = t3 ^ 2;
t10 = t1 ^ 2;
t14 = qJD(2) ^ 2;
t17 = qJD(1) * pkin(2);
t18 = qJD(2) * t1;
t23 = sin(qJ(3));
t24 = qJD(3) * t23;
t25 = t24 * t2;
t26 = cos(qJ(3));
t27 = t26 * qJD(2);
t28 = t3 * qJD(1);
t29 = t27 * t28;
t30 = qJD(3) * t26;
t31 = t30 * t28;
t32 = t23 * qJD(2);
t33 = t32 * t2;
t34 = t25 + t29 + t31 + t33;
t35 = t26 * t1;
t36 = t23 * t3;
t37 = -t35 + t36;
t41 = -qJD(1) * t35 + qJD(1) * t36;
t46 = t1 * t24 + t1 * t32 + t27 * t3 + t3 * t30;
t49 = t23 * t1;
t50 = t49 * qJD(1);
t51 = t26 * t3;
t52 = t51 * qJD(1);
t53 = t50 + t52;
t55 = t30 * t2;
t56 = t32 * t28;
t57 = t24 * t28;
t58 = t27 * t2;
t59 = t55 - t56 - t57 + t58;
t61 = t49 + t51;
t67 = t1 * t27 + t1 * t30 - t24 * t3 - t3 * t32;
t70 = qJD(2) + qJD(3);
t73 = -pkin(3) * t53;
t75 = t3 * pkin(3);
t76 = -pkin(2) - t75;
t78 = qJD(1) * pkin(3);
t81 = t28 * pkin(3);
t82 = -t17 - t81;
t85 = pkin(3) * t41;
t92 = sin(qJ(4));
t93 = qJD(4) * t92;
t94 = t93 * t41;
t95 = cos(qJ(4));
t96 = t95 * t34;
t97 = qJD(4) * t95;
t98 = t97 * t70;
t99 = -t94 + t96 - t98;
t100 = t99 * t95;
t104 = t41 * t95 - t70 * t92;
t105 = t104 * qJD(4);
t106 = t92 * t37;
t108 = t104 * t95;
t111 = t92 * t41;
t112 = t95 * t70;
t113 = -t111 - t112;
t116 = t95 * t46;
t118 = t95 * t37;
t119 = t97 * t41;
t120 = t92 * t34;
t121 = t93 * t70;
t122 = -t119 - t120 + t121;
t124 = t99 * t92;
t127 = t104 * t92;
t130 = t50 + t52 + qJD(4);
t131 = t37 * t130;
t139 = t92 * t46;
t150 = -pkin(4) * t61 + pkin(5) * t37 - pkin(2) - t75;
t156 = -pkin(3) * t18 - pkin(4) * t67 + pkin(5) * t46;
t157 = t95 * t156;
t159 = t95 * t150;
t161 = t32 * pkin(3);
t163 = -pkin(5) * t70 + t161;
t164 = t97 * t163;
t165 = t92 * qJD(3);
t166 = t27 * pkin(3);
t167 = t165 * t166;
t170 = -pkin(4) * t53 + pkin(5) * t41 - t17 - t81;
t171 = t93 * t170;
t175 = -pkin(4) * t59 + pkin(5) * t34 - t18 * t78;
t176 = t95 * t175;
t177 = -t164 - t167 + t171 - t176;
t179 = t92 * t163;
t180 = t95 * t170;
t181 = -t179 - t180;
t183 = t24 * qJD(2);
t188 = pkin(4) * t70 + t166;
t189 = t188 * qJD(4);
t191 = t188 * t92;
t198 = t92 * t150;
t200 = t93 * t163;
t201 = t95 * qJD(3);
t202 = t201 * t166;
t203 = t97 * t170;
t204 = t92 * t175;
t205 = -t200 + t202 - t203 - t204;
t207 = t95 * t163;
t208 = t92 * t170;
t209 = t207 - t208;
t215 = t188 * t95;
t218 = sin(qJ(5));
t219 = qJD(5) * t218;
t220 = t219 * t104;
t221 = cos(qJ(5));
t222 = t221 * t99;
t223 = qJD(5) * t221;
t224 = t223 * t130;
t225 = t218 * t59;
t226 = -t220 + t222 + t224 + t225;
t227 = t221 * t95;
t230 = t218 * t61 + t227 * t37;
t234 = t104 * t221 + t130 * t218;
t236 = t221 * qJD(4);
t241 = -t106 * t236 - t118 * t219 + t218 * t67 + t223 * t61 + t227 * t46;
t244 = t218 * t104;
t245 = t221 * t130;
t246 = -t244 + t245;
t248 = t223 * t104;
t249 = t218 * t99;
t250 = t219 * t130;
t251 = t221 * t59;
t252 = -t248 - t249 - t250 + t251;
t254 = t218 * t95;
t257 = t221 * t61 - t254 * t37;
t260 = t218 * qJD(4);
t265 = t106 * t260 - t118 * t223 - t219 * t61 + t221 * t67 - t254 * t46;
t268 = t111 + t112 + qJD(5);
t273 = t234 * qJD(4);
t275 = t234 * t92;
t282 = t246 * qJD(4);
t284 = t246 * t92;
t289 = t268 * qJD(4);
t291 = t268 * t92;
t298 = t218 * t92;
t303 = t223 * t209;
t304 = t218 * t205;
t305 = t219 * t188;
t306 = t221 * qJD(3);
t307 = t306 * t161;
t308 = -t303 - t304 - t305 - t307;
t313 = t188 * t221 - t209 * t218;
t314 = t313 * qJD(4);
t316 = t313 * t92;
t324 = -t122 * t150 * t298 + t150 * t246 * t93 + t156 * t268 * t298 + t159 * t260 * t268 + t198 * t223 * t268 + t308 * t37 * t92 + t118 * t314 - t157 * t246 - t159 * t252 + t177 * t257 + t181 * t265 + t316 * t46;
t329 = t221 * t92;
t334 = t219 * t209;
t335 = t221 * t205;
t336 = t223 * t188;
t337 = t218 * qJD(3);
t338 = t337 * t161;
t339 = -t334 + t335 + t336 - t338;
t342 = t221 * t209;
t343 = t218 * t188;
t344 = t342 + t343;
t345 = t344 * qJD(4);
t347 = t344 * t92;
t355 = -t122 * t150 * t329 - t150 * t234 * t93 + t156 * t268 * t329 + t159 * t236 * t268 - t198 * t219 * t268 - t339 * t37 * t92 - t118 * t345 + t157 * t234 + t159 * t226 - t177 * t230 - t181 * t241 - t347 * t46;
t356 = pkin(7) * qJD(5);
t357 = t356 - qJD(6);
t359 = pkin(7) * qJ(5) - qJ(6);
t360 = sin(t359);
t361 = t357 * t360;
t362 = t361 * t234;
t363 = cos(t359);
t364 = t363 * t226;
t365 = t357 * t363;
t366 = t365 * t268;
t367 = -t360 * t122;
t368 = t362 - t364 - t366 - t367;
t370 = t360 * t92;
t372 = -t230 * t363 - t37 * t370;
t376 = -t234 * t363 - t268 * t360;
t380 = t360 * qJD(4);
t383 = -t106 * t365 - t118 * t380 + t230 * t361 - t241 * t363 - t370 * t46;
t388 = -t234 * t360 + t268 * t363;
t390 = t365 * t234;
t391 = t360 * t226;
t392 = t361 * t268;
t393 = -t363 * t122;
t394 = -t390 - t391 - t392 + t393;
t397 = t363 * t92;
t399 = -t230 * t360 + t37 * t397;
t404 = t363 * qJD(4);
t407 = -t106 * t361 + t118 * t404 - t230 * t365 - t241 * t360 + t397 * t46;
t410 = -t244 + t245 + qJD(6) - t356;
t426 = -pkin(6) * t106 - t150 * t329;
t434 = -pkin(6) * t37 * t97 - pkin(6) * t139 - t156 * t329 - t159 * t236 + t198 * t219;
t437 = pkin(6) * t230 + t159;
t441 = pkin(6) * t241 - t150 * t93 + t157;
t450 = -pkin(6) * t268 + t342 + t343;
t451 = t365 * t450;
t453 = pkin(6) * t122 - t334 + t335 + t336 - t338;
t454 = t360 * t453;
t456 = pkin(6) * t234 + t179 + t180;
t457 = t361 * t456;
t459 = pkin(6) * t226 + t164 + t167 - t171 + t176;
t460 = t363 * t459;
t461 = -t451 - t454 - t457 + t460;
t465 = -t360 * t450 + t363 * t456;
t488 = t361 * t450;
t489 = t363 * t453;
t490 = t365 * t456;
t491 = t360 * t459;
t492 = t488 - t489 - t490 - t491;
t496 = -t360 * t456 - t363 * t450;
t509 = qJD(1) ^ 2;
t515 = t509 * pkin(2);
t518 = t41 * t53;
t519 = t53 ^ 2;
t521 = t41 ^ 2 - t519;
t523 = -t53 * t70 + t25 + t29 + t31 + t33;
t525 = t41 * t70 + t55 - t56 - t57 + t58;
t526 = pkin(3) * t70;
t528 = qJD(2) * pkin(3);
t529 = t24 * t528;
t531 = t82 * t41;
t533 = -pkin(3) * t70;
t535 = t30 * t528;
t537 = t82 * t53;
t541 = -t105 * t95 - t108 * t53 - t124;
t545 = t95 * t53;
t548 = t105 * t92 - t113 * t545 - t113 * t97 - t122 * t92 + t127 * t53 - t100;
t553 = t104 * t41 - t130 * t545 - t130 * t97 - t59 * t92;
t556 = t92 * t53;
t559 = t113 * t41 + t130 * t556 + t130 * t93 - t59 * t95;
t560 = -t130 * t41;
t561 = t23 * pkin(3);
t562 = t561 - pkin(5);
t565 = t26 * pkin(3);
t568 = t92 * t562;
t570 = -pkin(3) * t113;
t572 = t565 + pkin(4);
t575 = t24 * t528 * t95;
t576 = t189 * t92;
t578 = t53 * pkin(5);
t579 = -t41 * pkin(4);
t580 = -pkin(3) * t2 + t578 - t579;
t581 = t95 * t580;
t583 = -t181 * t41;
t584 = t191 * t53;
t590 = t95 * t562;
t592 = pkin(3) * t104;
t596 = t24 * t528 * t92;
t597 = t189 * t95;
t600 = t209 * t41;
t601 = t215 * t53;
t603 = t226 * t221;
t605 = t234 * qJD(5);
t607 = t234 * t221;
t611 = -t218 * t41 + t227 * t53;
t613 = -t234 * t611 + t298 * t605 - t603 * t92 - t607 * t97;
t618 = t226 * t218;
t621 = t234 * t218;
t626 = -t221 * t41 - t254 * t53;
t628 = -t236 * t246 * t95 + t219 * t284 - t234 * t626 - t246 * t611 - t252 * t329 + t329 * t605 + t618 * t92 + t621 * t97;
t630 = t95 * t268;
t637 = t122 * t329 + t219 * t291 + t226 * t95 - t236 * t630 - t268 * t611 - t273 * t92 - t275 * t53;
t645 = -t122 * t298 + t223 * t291 + t252 * t95 + t260 * t630 - t268 * t626 - t282 * t92 - t284 * t53;
t649 = -t122 * t95 - t289 * t92 - t291 * t53;
t652 = t30 * pkin(3);
t656 = -t219 * t572 - t223 * t590 - t254 * t652 + t260 * t568 - t306 * t561;
t660 = t221 * t572 - t254 * t562;
t662 = t308 * t95;
t663 = t314 * t92;
t669 = -t177 * t218;
t670 = t669 * t92;
t671 = -t181 * qJD(5);
t672 = t671 * t329;
t673 = -t181 * t218;
t674 = t673 * t97;
t677 = t316 * t53;
t679 = t181 * t626;
t680 = -t165 * t246 * t565 - t246 * t562 * t97 - t268 * t298 * t580 - t122 * t660 + t246 * t581 - t252 * t568 + t268 * t656 + t662 - t663 - t670 - t672 - t674 - t677 - t679;
t681 = t219 * t590;
t682 = t236 * t568;
t683 = t227 * t652;
t684 = t223 * t572;
t685 = t337 * t561;
t688 = t227 * t562;
t689 = t218 * t572;
t692 = t339 * t95;
t693 = t345 * t92;
t699 = -t177 * t221;
t700 = t699 * t92;
t701 = t671 * t298;
t702 = -t181 * t221;
t703 = t702 * t97;
t706 = t347 * t53;
t708 = -t181 * t611;
t709 = -(-t681 - t682 + t683 + t684 - t685) * t268 + (t688 + t689) * t122 - t692 + t693 + t97 * t562 * t234 + t165 * t565 * t234 + t568 * t226 - t700 + t701 - t703 - t329 * t580 * t268 + t706 - t581 * t234 - t708;
t710 = t363 * t221;
t713 = -t360 * t95 + t710 * t92;
t716 = t363 * qJD(5);
t721 = -t298 * t716 - t329 * t361 - t365 * t95 + t380 * t92 + t710 * t97;
t725 = -t363 * t611 - t370 * t53;
t727 = t368 * t713 + t376 * t721 - t376 * t725;
t730 = t360 * t221;
t733 = t363 * t95 + t730 * t92;
t736 = t360 * qJD(5);
t741 = -t298 * t736 + t329 * t365 - t361 * t95 - t404 * t92 + t730 * t97;
t746 = -t360 * t611 + t397 * t53;
t748 = t368 * t733 + t376 * t741 - t376 * t746 + t388 * t721 - t388 * t725 + t394 * t713;
t753 = t376 * qJD(5);
t755 = t376 * t218;
t759 = t218 * t368 * t92 + t252 * t713 + t329 * t753 - t376 * t626 + t410 * t721 - t410 * t725 + t755 * t97;
t764 = t388 * qJD(5);
t766 = t388 * t218;
t770 = t218 * t394 * t92 + t252 * t733 + t329 * t764 - t388 * t626 + t410 * t741 - t410 * t746 + t766 * t97;
t771 = t252 * t218;
t773 = t410 * qJD(5);
t775 = t410 * t218;
t778 = t329 * t773 - t410 * t626 + t771 * t92 + t775 * t97;
t779 = t95 * pkin(6);
t780 = t688 + t689 - t779;
t782 = t93 * pkin(6);
t783 = -t681 - t682 + t683 + t684 - t685 + t782;
t785 = t329 * pkin(6);
t786 = t568 - t785;
t791 = t219 * t92 * pkin(6);
t792 = t236 * t779;
t793 = t165 * t565 + t562 * t97 + t791 - t792;
t802 = t461 * t218 * t92;
t803 = t465 * qJD(5);
t804 = t803 * t329;
t805 = t465 * t218;
t806 = t805 * t97;
t809 = -t308 * t733;
t810 = -t313 * t741;
t812 = t556 * pkin(6);
t813 = -t329 * t580 - t812;
t815 = t611 * pkin(6);
t816 = t581 + t815;
t820 = t465 * t626;
t823 = -t313 * t746;
t824 = (-t360 * t783 - t361 * t786 + t363 * t793 - t365 * t780) * t410 + (-t360 * t780 + t363 * t786) * t252 + t802 + t804 + t806 - t656 * t388 - t660 * t394 + t809 + t810 - (-t360 * t813 + t363 * t816) * t410 - t820 + t298 * t580 * t388 - t823;
t836 = t492 * t218 * t92;
t837 = t496 * qJD(5);
t838 = t837 * t329;
t839 = t496 * t218;
t840 = t839 * t97;
t843 = t308 * t713;
t844 = t313 * t721;
t849 = -t496 * t626;
t852 = t313 * t725;
t853 = -(-t360 * t793 + t361 * t780 - t363 * t783 - t365 * t786) * t410 - (-t360 * t786 - t363 * t780) * t252 - t836 - t838 - t840 + t656 * t376 + t660 * t368 + t843 + t844 + (-t360 * t816 - t363 * t813) * t410 - t849 - t298 * t580 * t376 - t852;
t860 = t92 * pkin(5);
t864 = t92 * t26 * t528;
t865 = t578 - t579;
t866 = t95 * t865;
t867 = -t864 - t866;
t873 = t95 * pkin(5);
t879 = t26 * t528 * t95 - t865 * t92;
t886 = -pkin(4) * t219 + t223 * t873 - t260 * t860;
t890 = pkin(4) * t221 + pkin(5) * t254;
t898 = -t221 * t23 * t528 - t218 * t879;
t901 = pkin(5) * t246 * t97 - t122 * t890 - t246 * t867 + t252 * t860 + t268 * t886 - t268 * t898 + t662 - t663 - t670 - t672 - t674 - t677 - t679;
t902 = t219 * t873;
t903 = t236 * t860;
t904 = t223 * pkin(4);
t907 = t227 * pkin(5);
t908 = t218 * pkin(4);
t914 = t221 * t879;
t916 = t218 * t23 * t528;
t920 = -(t902 + t903 + t904) * t268 + (-t907 + t908) * t122 - t692 + t693 - t97 * pkin(5) * t234 - t860 * t226 - t700 + t701 - t703 + (t914 - t916) * t268 + t706 + t867 * t234 - t708;
t921 = -t907 + t908 - t779;
t923 = t902 + t903 + t904 + t782;
t925 = -t860 - t785;
t928 = -pkin(5) * t97 + t791 - t792;
t938 = t914 - t916 - t812;
t940 = t864 + t866 + t815;
t945 = (-t360 * t923 - t361 * t925 + t363 * t928 - t365 * t921) * t410 + (-t360 * t921 + t363 * t925) * t252 + t802 + t804 + t806 - t886 * t388 - t890 * t394 + t809 + t810 - (-t360 * t938 + t363 * t940) * t410 - t820 + t898 * t388 - t823;
t963 = -(-t360 * t928 + t361 * t921 - t363 * t923 - t365 * t925) * t410 - (-t360 * t925 - t363 * t921) * t252 - t836 - t838 - t840 + t886 * t376 + t890 * t368 + t843 + t844 + (-t360 * t940 - t363 * t938) * t410 - t849 - t898 * t376 - t852;
t965 = t113 ^ 2;
t983 = t221 * t113;
t1000 = t181 * t218;
t1007 = t181 * t221;
t1013 = t368 * t363;
t1015 = t376 * t357;
t1016 = t360 * t218;
t1022 = -t104 * t360 - t113 * t710;
t1028 = t363 * t218;
t1030 = t368 * t360;
t1038 = t104 * t363 - t113 * t730;
t1042 = t221 * t410;
t1062 = t218 * pkin(6);
t1065 = t221 * pkin(6);
t1072 = t308 * t360;
t1074 = t313 * t357;
t1076 = t360 * t313;
t1079 = -pkin(6) * t104 + t1007;
t1082 = pkin(6) * t983 + t207 - t208;
t1089 = -t361 * t1062 * t410 + t716 * t1065 * t410 + t1028 * pkin(6) * t252 + t461 * t221 - t803 * t218 + t1072 * t218 + t1074 * t1028 + t1076 * t223 - (-t1079 * t360 + t1082 * t363) * t410 + t805 * t113 - t1000 * t388 + t313 * t1038;
t1098 = t308 * t363;
t1101 = t313 * t363;
t1110 = t365 * t1062 * t410 + t736 * t1065 * t410 + t1016 * pkin(6) * t252 - t492 * t221 + t837 * t218 - t1098 * t218 + t1074 * t1016 - t1101 * t223 + (-t1079 * t363 - t1082 * t360) * t410 - t839 * t113 + t1000 * t376 - t313 * t1022;
t1112 = t246 ^ 2;
t1126 = pkin(7) * t360;
t1128 = t363 * t246;
t1129 = pkin(7) * t363;
t1131 = t1126 * t234 - t1129 * t268 - t1128;
t1139 = t360 * t246;
t1141 = -t1126 * t268 - t1129 * t234 - t1139;
t1190 = t388 ^ 2;
unknown(1,1) = 0;
unknown(1,2) = -(0.2e1 * t2 * t4);
unknown(1,3) = (-0.2e1 * qJD(1) * qJD(2) * t10 + 0.2e1 * qJD(1) * qJD(2) * t7);
unknown(1,4) = (t14 * t3);
unknown(1,5) = (t14 * t1);
unknown(1,6) = 0;
unknown(1,7) = (0.2e1 * t17 * t18);
unknown(1,8) = -(0.2e1 * t17 * t4);
unknown(1,9) = (t34 * t37 + t41 * t46);
unknown(1,10) = (t34 * t61 + t37 * t59 + t41 * t67 + t46 * t53);
unknown(1,11) = (t46 * t70);
unknown(1,12) = (t67 * t70);
unknown(1,13) = 0;
unknown(1,14) = (t18 * t61 * t78 - t18 * t73 - t59 * t76 - t67 * t82);
unknown(1,15) = (-t18 * t37 * t78 - t18 * t85 + t34 * t76 + t46 * t82);
unknown(1,16) = (t100 * t37 - t105 * t106 + t108 * t46);
unknown(1,17) = (-t113 * t37 * t93 - t105 * t118 + t113 * t116 + t118 * t122 - t124 * t37 - t127 * t46);
unknown(1,18) = (t104 * t67 + t116 * t130 + t118 * t59 - t131 * t93 + t61 * t99);
unknown(1,19) = (-t106 * t59 + t113 * t67 + t122 * t61 - t130 * t139 - t131 * t97);
unknown(1,20) = (t130 * t67 + t59 * t61);
unknown(1,21) = (-pkin(3) * t183 * t37 * t92 + t130 * t150 * t93 + t118 * t189 - t130 * t157 - t159 * t59 + t177 * t61 + t181 * t67 + t191 * t46);
unknown(1,22) = (-pkin(3) * t183 * t37 * t95 + t130 * t150 * t97 + t130 * t156 * t92 - t106 * t189 + t198 * t59 - t205 * t61 - t209 * t67 + t215 * t46);
unknown(1,23) = (t226 * t230 + t234 * t241);
unknown(1,24) = (t226 * t257 + t230 * t252 + t234 * t265 + t241 * t246);
unknown(1,25) = (t226 * t37 * t92 + t118 * t273 - t122 * t230 + t241 * t268 + t275 * t46);
unknown(1,26) = (t252 * t37 * t92 + t118 * t282 - t122 * t257 + t265 * t268 + t284 * t46);
unknown(1,27) = (-t122 * t37 * t92 + t118 * t289 + t291 * t46);
unknown(1,28) = t324;
unknown(1,29) = t355;
unknown(1,30) = (t368 * t372 + t376 * t383);
unknown(1,31) = (t368 * t399 + t372 * t394 + t376 * t407 + t383 * t388);
unknown(1,32) = (t252 * t372 + t257 * t368 + t265 * t376 + t383 * t410);
unknown(1,33) = (t252 * t399 + t257 * t394 + t265 * t388 + t407 * t410);
unknown(1,34) = (t252 * t257 + t265 * t410);
unknown(1,35) = ((-t360 * t434 - t361 * t437 + t363 * t441 - t365 * t426) * t410 + (-t360 * t426 + t363 * t437) * t252 + t461 * t257 + t465 * t265 - t223 * t198 * t388 - t260 * t159 * t388 - t298 * t156 * t388 - t298 * t150 * t394 - t308 * t399 - t313 * t407);
unknown(1,36) = (-(-t360 * t441 + t361 * t426 - t363 * t434 - t365 * t437) * t410 - (-t360 * t437 - t363 * t426) * t252 - t492 * t257 - t496 * t265 + t223 * t198 * t376 + t260 * t159 * t376 + t298 * t156 * t376 + t298 * t150 * t368 + t308 * t372 + t313 * t383);
unknown(2,1) = 0;
unknown(2,2) = (t1 * t509 * t3);
unknown(2,3) = (t10 * t509 - t509 * t7);
unknown(2,4) = 0;
unknown(2,5) = 0;
unknown(2,6) = 0;
unknown(2,7) = -(t515 * t1);
unknown(2,8) = (t515 * t3);
unknown(2,9) = -t518;
unknown(2,10) = t521;
unknown(2,11) = t523;
unknown(2,12) = t525;
unknown(2,13) = 0;
unknown(2,14) = (t2 * t73 - t24 * t526 - t529 - t531);
unknown(2,15) = (t2 * t85 + t30 * t533 - t535 - t537);
unknown(2,16) = t541;
unknown(2,17) = t548;
unknown(2,18) = t553;
unknown(2,19) = t559;
unknown(2,20) = -t560;
unknown(2,21) = (-t130 * t165 * t565 - t130 * t562 * t97 - t122 * t572 + t130 * t581 - t24 * t570 - t568 * t59 - t575 - t576 - t583 - t584);
unknown(2,22) = (-t130 * t201 * t565 + t130 * t562 * t93 - t130 * t580 * t92 - t24 * t592 + t572 * t99 - t59 * t590 + t596 - t597 - t600 - t601);
unknown(2,23) = t613;
unknown(2,24) = t628;
unknown(2,25) = t637;
unknown(2,26) = t645;
unknown(2,27) = t649;
unknown(2,28) = t680;
unknown(2,29) = t709;
unknown(2,30) = t727;
unknown(2,31) = t748;
unknown(2,32) = t759;
unknown(2,33) = t770;
unknown(2,34) = t778;
unknown(2,35) = t824;
unknown(2,36) = t853;
unknown(3,1) = 0;
unknown(3,2) = 0;
unknown(3,3) = 0;
unknown(3,4) = 0;
unknown(3,5) = 0;
unknown(3,6) = 0;
unknown(3,7) = 0;
unknown(3,8) = 0;
unknown(3,9) = -t518;
unknown(3,10) = t521;
unknown(3,11) = t523;
unknown(3,12) = t525;
unknown(3,13) = 0;
unknown(3,14) = (t32 * t526 - t529 - t531);
unknown(3,15) = (-t27 * t533 - t535 - t537);
unknown(3,16) = t541;
unknown(3,17) = t548;
unknown(3,18) = t553;
unknown(3,19) = t559;
unknown(3,20) = -t560;
unknown(3,21) = (pkin(5) * t130 * t97 - pkin(4) * t122 - t130 * t867 + t32 * t570 + t59 * t860 - t575 - t576 - t583 - t584);
unknown(3,22) = (-pkin(5) * t130 * t93 + pkin(4) * t99 + t130 * t879 + t32 * t592 + t59 * t873 + t596 - t597 - t600 - t601);
unknown(3,23) = t613;
unknown(3,24) = t628;
unknown(3,25) = t637;
unknown(3,26) = t645;
unknown(3,27) = t649;
unknown(3,28) = t901;
unknown(3,29) = t920;
unknown(3,30) = t727;
unknown(3,31) = t748;
unknown(3,32) = t759;
unknown(3,33) = t770;
unknown(3,34) = t778;
unknown(3,35) = t945;
unknown(3,36) = t963;
unknown(4,1) = 0;
unknown(4,2) = 0;
unknown(4,3) = 0;
unknown(4,4) = 0;
unknown(4,5) = 0;
unknown(4,6) = 0;
unknown(4,7) = 0;
unknown(4,8) = 0;
unknown(4,9) = 0;
unknown(4,10) = 0;
unknown(4,11) = 0;
unknown(4,12) = 0;
unknown(4,13) = 0;
unknown(4,14) = 0;
unknown(4,15) = 0;
unknown(4,16) = -(t104 * t113);
unknown(4,17) = (t104 ^ 2 - t965);
unknown(4,18) = (-t113 * t130 - t94 + t96 - t98);
unknown(4,19) = (t104 * t130 - t119 - t120 + t121);
unknown(4,20) = t59;
unknown(4,21) = (-t104 * t188 + t130 * t209 - t164 - t167 + t171 - t176);
unknown(4,22) = (-t113 * t188 + t130 * t181 + t200 - t202 + t203 + t204);
unknown(4,23) = (-t113 * t607 + t221 * t605 + t618);
unknown(4,24) = (t113 * t621 - t218 * t605 + t223 * t246 - t246 * t983 + t603 + t771);
unknown(4,25) = (-t104 * t234 - t122 * t218 + t223 * t268 - t268 * t983);
unknown(4,26) = (t113 * t218 * t268 - t104 * t246 - t122 * t221 - t219 * t268);
unknown(4,27) = -(t268 * t104);
unknown(4,28) = (t1000 * t268 - t104 * t313 - t113 * t673 + t209 * t246 + t218 * t671 - t699);
unknown(4,29) = (t1007 * t268 + t104 * t344 - t113 * t702 - t209 * t234 + t221 * t671 + t669);
unknown(4,30) = (-t223 * t363 * t376 - t1013 * t218 + t1015 * t1016 - t1022 * t376);
unknown(4,31) = (-t221 * t388 * t716 - t223 * t360 * t376 - t1015 * t1028 - t1022 * t388 - t1028 * t394 - t1030 * t218 - t1038 * t376 + t361 * t766);
unknown(4,32) = (-t1022 * t410 - t1028 * t252 - t1042 * t716 + t113 * t755 - t218 * t753 + t221 * t368 + t361 * t775);
unknown(4,33) = (-t1016 * t252 - t1038 * t410 - t1042 * t736 + t113 * t766 - t218 * t764 + t221 * t394 - t365 * t775);
unknown(4,34) = (t113 * t775 - t218 * t773 + t221 * t252);
unknown(4,35) = t1089;
unknown(4,36) = t1110;
unknown(5,1) = 0;
unknown(5,2) = 0;
unknown(5,3) = 0;
unknown(5,4) = 0;
unknown(5,5) = 0;
unknown(5,6) = 0;
unknown(5,7) = 0;
unknown(5,8) = 0;
unknown(5,9) = 0;
unknown(5,10) = 0;
unknown(5,11) = 0;
unknown(5,12) = 0;
unknown(5,13) = 0;
unknown(5,14) = 0;
unknown(5,15) = 0;
unknown(5,16) = 0;
unknown(5,17) = 0;
unknown(5,18) = 0;
unknown(5,19) = 0;
unknown(5,20) = 0;
unknown(5,21) = 0;
unknown(5,22) = 0;
unknown(5,23) = -(t234 * t246);
unknown(5,24) = (t234 ^ 2 - t1112);
unknown(5,25) = (-t246 * t268 - t220 + t222 + t224 + t225);
unknown(5,26) = (t234 * t268 - t248 - t249 - t250 + t251);
unknown(5,27) = -t122;
unknown(5,28) = (t181 * t234 + t268 * t344 - t303 - t304 - t305 - t307);
unknown(5,29) = (t181 * t246 + t268 * t313 + t334 - t335 - t336 + t338);
unknown(5,30) = (-t1015 * t363 - t1131 * t376 - t1030);
unknown(5,31) = (-t1015 * t360 - t1131 * t388 - t1141 * t376 - t360 * t394 - t365 * t388 + t1013);
unknown(5,32) = (-pkin(7) * t368 - t1131 * t410 + t234 * t376 - t252 * t360 - t365 * t410);
unknown(5,33) = (-pkin(7) * t394 - t1141 * t410 + t234 * t388 + t252 * t363 - t361 * t410);
unknown(5,34) = (-pkin(7) * t252 + t234 * t410);
unknown(5,35) = (t365 * pkin(6) * t410 + t360 * pkin(6) * t252 - t461 * pkin(7) - t1098 + t1074 * t360 - (pkin(6) * t1128 - t1126 * t456 - t1129 * t450 - t1076) * t410 + t465 * t234 - t344 * t388 + t313 * t1141);
unknown(5,36) = (t361 * pkin(6) * t410 - t363 * pkin(6) * t252 + t492 * pkin(7) - t365 * t313 - t1072 + (-pkin(6) * t1139 + t1126 * t450 - t1129 * t456 - t1101) * t410 - t496 * t234 + t344 * t376 - t313 * t1131);
unknown(6,1) = 0;
unknown(6,2) = 0;
unknown(6,3) = 0;
unknown(6,4) = 0;
unknown(6,5) = 0;
unknown(6,6) = 0;
unknown(6,7) = 0;
unknown(6,8) = 0;
unknown(6,9) = 0;
unknown(6,10) = 0;
unknown(6,11) = 0;
unknown(6,12) = 0;
unknown(6,13) = 0;
unknown(6,14) = 0;
unknown(6,15) = 0;
unknown(6,16) = 0;
unknown(6,17) = 0;
unknown(6,18) = 0;
unknown(6,19) = 0;
unknown(6,20) = 0;
unknown(6,21) = 0;
unknown(6,22) = 0;
unknown(6,23) = 0;
unknown(6,24) = 0;
unknown(6,25) = 0;
unknown(6,26) = 0;
unknown(6,27) = 0;
unknown(6,28) = 0;
unknown(6,29) = 0;
unknown(6,30) = -(t376 * t388);
unknown(6,31) = (t376 ^ 2 - t1190);
unknown(6,32) = (-t388 * t410 + t362 - t364 - t366 - t367);
unknown(6,33) = (t376 * t410 - t390 - t391 - t392 + t393);
unknown(6,34) = t252;
unknown(6,35) = (-t313 * t376 + t410 * t496 - t451 - t454 - t457 + t460);
unknown(6,36) = (-t313 * t388 + t410 * t465 - t488 + t489 + t490 + t491);
tauc_reg = unknown;
