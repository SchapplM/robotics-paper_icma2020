% Calculate matrix of centrifugal and coriolis load on the joints for
% CloosQRC350DE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,kDG]';
% m [7x1]
%   mass of all robot links (including the base)
% mrSges [7x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% Ifges [7x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
% 
% Output:
% Cq [6x6]
%   matrix of coriolis and centrifugal joint torques

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-23 21:15
% Revision: 3f22bf868ffa24e21e77a0fe3b46e78b2d6fdc1f (2020-06-23)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Cq = CloosQRC350DE_coriolismatJ_fixb_slag_vp2(qJ, qJD, ...
  pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(7,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350DE_coriolismatJ_fixb_slag_vp2: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350DE_coriolismatJ_fixb_slag_vp2: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'CloosQRC350DE_coriolismatJ_fixb_slag_vp2: pkin has to be [7x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'CloosQRC350DE_coriolismatJ_fixb_slag_vp2: m has to be [7x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [7,3]), ...
  'CloosQRC350DE_coriolismatJ_fixb_slag_vp2: mrSges has to be [7x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [7 6]), ...
  'CloosQRC350DE_coriolismatJ_fixb_slag_vp2: Ifges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolismat_joint_fixb_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-23 21:02:09
% EndTime: 2020-06-23 21:02:42
% DurationCPUTime: 27.08s
% Computational Cost: add. (10651->641), mult. (17342->923), div. (0->0), fcn. (10311->10), ass. (0->447)
t597 = qJD(2) + qJD(3);
t256 = sin(qJ(5));
t261 = cos(qJ(4));
t477 = t261 * t256;
t397 = t477 / 0.2e1;
t363 = Ifges(7,3) * t397;
t255 = Ifges(7,2) - Ifges(7,1);
t257 = sin(qJ(4));
t260 = cos(qJ(5));
t231 = pkin(7) * qJ(5) - qJ(6);
t221 = sin(t231);
t222 = cos(t231);
t509 = t221 * t222;
t436 = t260 * t509;
t369 = t257 * t436;
t218 = t221 ^ 2;
t219 = t222 ^ 2;
t468 = t218 - t219;
t306 = t468 * t261 - 0.2e1 * t369;
t600 = t306 * t255 * t256;
t603 = t600 / 0.2e1 + t363;
t611 = qJD(6) * t603;
t604 = t363 - t600 / 0.2e1;
t610 = t604 * qJD(6);
t251 = t260 ^ 2;
t233 = t251 + 0.1e1;
t252 = t261 ^ 2;
t502 = t233 * t252;
t327 = (-t251 + t502) * t509;
t478 = t261 * t219;
t422 = t255 * t478;
t476 = t261 * t260;
t490 = t257 * t260;
t73 = t422 * t490 + (-t257 * t218 * t476 - t327) * t255;
t575 = t597 * t73;
t423 = t261 * t509;
t170 = t255 * t423;
t393 = t219 / 0.2e1 - t218 / 0.2e1;
t580 = t393 * t255;
t329 = t257 * t580;
t400 = t490 / 0.2e1;
t91 = Ifges(7,3) * t400 - t260 * t329 + t170;
t609 = qJD(4) * t604 + t91 * qJD(5) - t575;
t92 = t170 + (-Ifges(7,3) / 0.2e1 - t580) * t490;
t608 = qJD(4) * t603 - t92 * qJD(5) + t575;
t230 = pkin(6) * m(7) + mrSges(6,2) + mrSges(7,3);
t541 = (m(7) * pkin(6) ^ 2);
t562 = (mrSges(7,3) * pkin(6));
t352 = t541 + 2 * t562;
t323 = -Ifges(6,2) - Ifges(7,3) + t352;
t536 = Ifges(6,1) + Ifges(7,2);
t204 = t323 + t536;
t192 = t204 * t260;
t539 = t230 * pkin(5);
t164 = t192 + t539;
t262 = cos(qJ(3));
t519 = t164 * t262;
t258 = sin(qJ(3));
t544 = pkin(4) * t258;
t129 = t230 * t544 + t519;
t259 = sin(qJ(2));
t263 = cos(qJ(2));
t485 = t258 * t263;
t197 = t259 * t262 + t485;
t503 = t230 * t262;
t208 = pkin(4) * t503;
t592 = -t164 * t258 + t208;
t191 = t204 * t251;
t535 = (Ifges(7,1) + Ifges(6,3));
t455 = Ifges(5,2) + t535;
t150 = Ifges(5,1) - t323 - t455 + t191;
t601 = t150 * t261;
t607 = -t197 * t601 + (-t129 * t263 - t259 * t592) * t256;
t398 = -t477 / 0.2e1;
t491 = t257 * t219;
t429 = t256 * t491;
t494 = t256 * t257;
t602 = t204 * t494 + (pkin(7) * t306 - t429) * t255;
t264 = m(5) + m(6);
t584 = m(7) + t264;
t543 = pkin(5) * t584;
t391 = mrSges(5,3) + t543;
t217 = mrSges(4,2) + t391;
t489 = t257 * t261;
t134 = t150 * t489;
t247 = t256 ^ 2;
t467 = t247 - t251;
t599 = t467 * t261;
t555 = t257 / 0.2e1;
t403 = t197 * t555;
t472 = t262 * t263;
t487 = t258 * t259;
t333 = -t472 + t487;
t495 = t256 * t333;
t598 = (-t197 * t476 + t495) * t509 / 0.2e1 + t219 * t403;
t437 = t257 * t509;
t367 = t255 * t437;
t160 = t256 * t367;
t419 = t256 * t476;
t240 = t260 + 0.1e1;
t241 = t260 - 0.1e1;
t500 = t240 * t241;
t586 = Ifges(5,3) + t536 - t191;
t510 = t219 * t255;
t590 = -t510 / 0.2e1;
t591 = t333 / 0.2e1;
t274 = (t352 + t586) * t591 + (-t197 * t419 - t333 * t500) * t590 + t197 * t160 / 0.2e1;
t210 = pkin(5) * t262 + t544;
t473 = t262 * t260;
t439 = t204 * t473;
t576 = -t210 * t230 - t439;
t310 = t576 * t259;
t542 = pkin(5) * t258;
t389 = t262 * pkin(4) - t542;
t479 = t260 * t258;
t427 = t204 * t479;
t596 = -t274 + (t310 + (t389 * t230 - t427) * t263) * t398;
t205 = pkin(3) + t389;
t325 = t205 * t230 - t427;
t595 = -t274 + (t325 * t263 + t310) * t398;
t232 = t584 * pkin(5) ^ 2;
t268 = pkin(4) ^ 2;
t242 = t264 * t268;
t571 = -0.2e1 * pkin(5);
t593 = mrSges(5,3) * t571 - t150 * t252 - Ifges(4,1) + Ifges(4,2) - t232 + t242 - t455 + t586;
t564 = 0.2e1 * t262;
t480 = t260 * t256;
t501 = t233 * t261;
t118 = -t197 * t480 - t333 * t501;
t464 = t252 - 0.1e1 / 0.2e1;
t582 = t260 * t464;
t99 = t197 * t398 - t333 * t582;
t589 = t118 * t367 + t99 * t510;
t588 = t261 * t333;
t530 = pkin(7) * t257;
t446 = t255 * t530;
t375 = t218 * t446;
t587 = t260 * t375 + t160;
t413 = t261 * t473;
t385 = -0.2e1 * t413;
t387 = t467 * t258;
t585 = (t256 * t385 + t387) * t263;
t499 = t247 * t204;
t583 = t255 * (t219 * t476 + t437);
t581 = (t219 * t490 - t423) * t255;
t253 = t262 ^ 2;
t463 = t253 - 0.1e1 / 0.2e1;
t378 = t463 * t260;
t545 = pkin(3) * t258;
t226 = -pkin(5) + t545;
t383 = t226 * t230 - t192;
t579 = t598 * t255;
t220 = pkin(4) * t230;
t374 = t219 * t446;
t577 = -t374 + t220;
t574 = t255 * t468 + Ifges(7,3);
t563 = Ifges(7,3) / 0.2e1;
t131 = (t563 + t580) * t256;
t424 = t333 * t476;
t496 = t256 * t197;
t127 = -t424 - t496;
t313 = Ifges(7,3) * t127;
t133 = t333 * t367;
t314 = -t127 * t580 + t133;
t32 = -t313 / 0.2e1 + t314;
t438 = t255 * t509;
t361 = qJD(5) * t438;
t573 = qJD(1) * t32 + qJD(4) * t131 + t597 * t92 + t361;
t462 = -0.2e1 * t542;
t142 = -0.2e1 * t427 + (pkin(3) + t462) * t230;
t566 = 0.4e1 * t253;
t572 = t142 * t564 + (t566 - 0.2e1) * t220;
t248 = t257 ^ 2;
t215 = pkin(4) * t584 + mrSges(4,1);
t570 = 0.2e1 * t215;
t569 = 0.2e1 * t252;
t568 = -0.4e1 * t253;
t567 = 0.2e1 * t253;
t565 = -0.2e1 * t258;
t254 = t263 ^ 2;
t559 = t254 / 0.2e1;
t558 = -t256 / 0.2e1;
t557 = t256 / 0.2e1;
t556 = -t257 / 0.2e1;
t554 = -t259 / 0.2e1;
t553 = t260 / 0.2e1;
t552 = -t261 / 0.2e1;
t551 = t261 / 0.2e1;
t550 = t263 / 0.2e1;
t549 = t252 - 0.1e1;
t548 = t252 + 0.1e1;
t547 = t569 - 0.1e1;
t239 = pkin(3) * t262;
t540 = t215 * pkin(3);
t152 = t258 * t398 + t262 * t582;
t407 = t547 * t260;
t475 = t261 * t262;
t414 = t256 * t475;
t155 = t258 * t407 + t414;
t96 = t152 * t263 + t155 * t554;
t538 = t96 * pkin(7);
t534 = t210 * t263 + pkin(2);
t224 = t259 * pkin(3) + pkin(2);
t533 = t239 + 0.2e1 * pkin(4);
t420 = t258 * t477;
t103 = (-t217 * t262 - t215 * t258 + (t420 - t473) * t230) * pkin(3);
t67 = t73 * qJD(6);
t532 = t103 * qJD(3) - t67;
t531 = pkin(7) * t255;
t508 = t224 * t258;
t123 = -t259 * t192 + t230 * (-pkin(5) * t259 + t508);
t237 = t259 * pkin(2);
t409 = pkin(3) - t542;
t130 = -t427 + (t237 + t409) * t230;
t408 = t548 * t260;
t180 = t256 * t408;
t506 = t230 * t256;
t184 = t226 * t506;
t196 = t259 * t462 + t224;
t225 = t237 + pkin(3);
t430 = t261 * t499;
t447 = pkin(4) * t506;
t317 = -t430 + t447;
t348 = -0.2e1 * t367;
t223 = t251 / 0.2e1 + 0.1e1 / 0.2e1;
t209 = t223 * t252;
t182 = -t209 - t251 / 0.2e1 + 0.1e1;
t201 = t258 * t413;
t339 = t256 * t201;
t183 = -0.2e1 * t339;
t193 = t251 - 0.2e1 + t502;
t112 = t193 * t253 + t182 + t183;
t200 = t253 * t419;
t474 = t262 * t258;
t394 = t474 / 0.2e1;
t396 = -t476 / 0.2e1;
t116 = t193 * t394 + t256 * t396 + t200;
t482 = t259 * t263;
t458 = -0.2e1 * t482;
t36 = t112 * t254 + t116 * t458 + t182 * t253 + t339 - 0.1e1 / 0.2e1 + t209;
t416 = t258 * t473;
t425 = t252 * t480;
t449 = pkin(5) * t506;
t504 = t230 * t261;
t450 = pkin(4) * t504;
t492 = t256 * t262;
t211 = t253 * t476;
t153 = -t256 * t474 + t211 + t396;
t162 = t463 * t256 + t201;
t395 = t476 / 0.2e1;
t51 = t153 * t254 - t162 * t482 - t211 / 0.2e1 + t256 * t394 + t395;
t514 = t204 * t256;
t517 = t180 * t253;
t1 = -((0.2e1 * t387 * t475 + t180 - 0.2e1 * t517) * t254 + (-t180 * t474 - t463 * t599) * t458 + t517 - t425 - t474 * t599) * t510 + 0.2e1 * t36 * pkin(7) * t438 + ((-t463 * t477 - t416) * t254 - (-t258 * t414 + t378) * t482 + t253 * t397 + t260 * t394 + t398) * t348 + (t449 * t568 - 0.2e1 * t184 - 0.4e1 * t317 * t474 + (t572 * t261 + (t548 * t568 + t569 + 0.2e1) * t514) * t260) * t559 + (-0.2e1 * t196 * t230 * t492 - 0.2e1 * t123 * t476 + ((-t447 + (-t164 * t260 + t499) * t261) * t566 - 0.2e1 * t430 + 0.2e1 * t447 + (-0.4e1 * t450 + (0.4e1 * t252 + 0.4e1) * t514) * t416) * t259) * t550 + (-t260 * t450 + (t204 * t408 + t539) * t256) * t253 + (-t130 * t476 + t317 * t258) * t262 - t204 * t425 + (t225 * t258 - pkin(5)) * t506 + (-0.2e1 * t374 + 0.2e1 * t375) * t51;
t529 = t1 * qJD(1);
t203 = t391 * pkin(4) - Ifges(4,4);
t244 = m(4) + t264;
t269 = pkin(3) ^ 2;
t432 = t230 * t477;
t377 = pkin(4) * t432;
t194 = -0.2e1 * t377;
t287 = t194 + t593;
t265 = t268 * m(7);
t324 = t265 + t593;
t505 = t230 * t260;
t343 = (t217 + t505) * pkin(3);
t346 = t215 - t432;
t354 = pkin(4) * t505 + t203;
t293 = t324 + t194;
t39 = t196 * t505 + t217 * t224 + t293 * t487;
t431 = t263 * t505;
t434 = t226 * t505;
t457 = -0.2e1 * t477;
t181 = 0.2e1 * t191;
t454 = 0.2e1 * t455;
t144 = 0.2e1 * Ifges(5,1) + 0.2e1 * Ifges(6,2) + 0.2e1 * Ifges(7,3) + t181 - t454 - (2 * t541) - (4 * t562);
t388 = mrSges(5,3) + t505;
t46 = 0.4e1 * pkin(5) * t388 + t144 * t252 + 0.2e1 * Ifges(4,1) - (2 * Ifges(6,1)) - 0.2e1 * Ifges(4,2) - (2 * Ifges(7,2)) - 0.2e1 * Ifges(5,3) + t181 + 0.2e1 * t232 - 0.2e1 * t242 - 0.2e1 * t265 + 0.4e1 * t377 + t454;
t108 = -t164 * t477 - Ifges(4,4) + (t388 + t543) * pkin(4);
t460 = t108 * t567;
t466 = t259 ^ 2 - t254;
t320 = 0.4e1 * t354;
t57 = 0.2e1 * t142 * t477 + t258 * t320 - 0.2e1 * t540;
t2 = -0.2e1 * (-t112 * t482 + t466 * t116) * t510 + (t153 * t458 + t466 * t162) * t348 - (0.2e1 * t434 + 0.2e1 * t217 * t545 + (t268 - t269) * m(7) - t244 * t269 + Ifges(3,1) - Ifges(3,2) + t287 + t46 * t253 + t57 * t262) * t482 + 0.2e1 * ((t343 + (0.2e1 * (-pkin(4) * t477 - pkin(5) * t260) * t230 + t324) * t258) * t472 - pkin(4) * t431 + t485 * t540 + (-t383 * t477 - t203 + t460) * t263) * t550 + (t123 * t457 + t508 * t570 + t39 * t564 + 0.2e1 * (-t354 + t460) * t259) * t554 + (t346 * t472 - t258 * t431 - t217 * t485 + (mrSges(3,1) + (m(7) + t244) * pkin(3)) * t263) * pkin(2);
t528 = t2 * qJD(1);
t527 = t218 * pkin(7);
t249 = t258 ^ 2;
t321 = 0.2e1 * t354;
t330 = -t249 * t419 + t200;
t365 = t472 * t487;
t448 = pkin(5) * t505;
t390 = -0.2e1 * t448;
t392 = t253 / 0.2e1 - t249 / 0.2e1;
t443 = t519 * t477;
t3 = -(0.2e1 * (-t193 * t474 - t330) * t254 + (t392 * t193 + t183) * t458 - 0.2e1 * t182 * t474 + t330) * t510 + (-0.2e1 * t201 * t254 - (-t249 * t476 + t211) * t482 + t201 + ((t249 - t253) * t254 + 0.2e1 * t365 + t392) * t256) * t348 - t57 * t258 * t559 + t39 * t565 * t550 - (t265 + t287 + t390) * t474 - (t130 * t457 + t225 * t570 - t258 * t321) * t258 / 0.2e1 - t230 * t225 * t473 + ((t46 * t565 + 0.2e1 * t343 - 0.4e1 * t443) * t559 + (0.2e1 * t346 * t224 + (-0.8e1 * t108 * t258 + (t293 + t390) * t564) * t259) * t550 + t443 - t225 * t217 + (t320 * t559 - t321 / 0.2e1) * t262) * t262;
t526 = t3 * qJD(1);
t347 = -0.2e1 * t170;
t415 = t256 * t473;
t364 = t258 * t415;
t433 = t230 * t494;
t376 = pkin(4) * t433;
t401 = -t490 / 0.2e1;
t486 = t258 * t261;
t421 = t233 * t486;
t488 = t257 * t262;
t498 = t254 * t257;
t4 = -(0.2e1 * (t364 + (-t233 * t253 + t223) * t261) * t498 + (t567 - 0.2e1) * t223 * t489 + ((-t256 * t378 - t262 * t421) * t458 - t364) * t257) * t510 + t51 * t347 + (t253 * t400 + t365 * t490 - t378 * t498 + t401) * t348 + (0.2e1 * t134 + (-0.2e1 * t144 * t261 * t253 - t572 * t256) * t257) * t559 + (0.2e1 * t256 * t123 + 0.4e1 * (t256 * t164 * t253 + (t447 + t601) * t474) * t259) * t257 * t550 + (t134 + t376) * t253 + t256 * t130 * t488 - t134;
t525 = t4 * qJD(1);
t524 = pkin(7) * qJD(5);
t17 = (-t468 * t51 * t257 - t36 * t509) * t255;
t523 = qJD(1) * t17;
t167 = -t415 - t421;
t168 = t233 * t475 - t256 * t479;
t107 = t167 * t259 + t168 * t263;
t511 = t218 * t255;
t64 = t96 * t511;
t296 = t64 + (-t107 * t437 - t219 * t96) * t255;
t312 = Ifges(7,3) * (-t197 * t477 - t260 * t333);
t307 = -t312 / 0.2e1;
t19 = t307 + t296;
t522 = qJD(1) * t19;
t445 = t99 * t511;
t332 = t445 - t589;
t21 = t307 + t332;
t521 = qJD(1) * t21;
t518 = t167 * t263;
t216 = t352 + t535;
t516 = t197 * t216;
t512 = t210 * t259;
t493 = t256 * t258;
t484 = t259 * t129;
t483 = t259 * t168;
t481 = t260 * t197;
t368 = t255 * t436;
t469 = t252 * t368 + t134;
t465 = qJD(4) * t256;
t459 = 0.2e1 * t509;
t229 = Ifges(7,3) * t530;
t444 = -t239 / 0.2e1;
t441 = t333 * t494;
t428 = t150 * t486;
t418 = t258 * t476;
t417 = t150 * t475;
t411 = t587 * t261 + t327 * t531;
t410 = pkin(7) * t347 - t587;
t406 = -t333 * t248 / 0.2e1;
t405 = t506 / 0.2e1;
t404 = -t494 / 0.2e1;
t402 = -t491 / 0.2e1;
t399 = -t478 / 0.2e1;
t206 = Ifges(4,5) * t262 - Ifges(4,6) * t258;
t386 = 0.2e1 * t424;
t195 = t263 * (Ifges(4,5) * t258 + Ifges(4,6) * t262);
t382 = t259 * t206 + t195;
t381 = t256 * t464;
t373 = pkin(3) * t405;
t372 = t229 / 0.2e1;
t371 = Ifges(7,3) * pkin(7) * t552;
t370 = t500 * t509;
t366 = t333 * t419;
t362 = t549 * t510;
t360 = t230 * t396;
t359 = t233 * t406;
t357 = t255 * t402;
t356 = t197 * t396;
t355 = t255 * t399;
t353 = t230 * t533 / 0.2e1;
t351 = (-t240 - t241) * t496;
t350 = -0.2e1 * t256 * t418;
t341 = t256 * t371;
t340 = t255 * t370;
t227 = t239 + pkin(4);
t300 = (-t204 * t252 + t204 + t362) * t256;
t28 = -t184 + ((t227 * t230 - t374) * t261 + t300) * t260 + t411;
t326 = t230 * t409 + t208;
t270 = -pkin(7) * t64 + ((t326 * t263 - t484) * t260 + (t585 - t259 * (-t262 * t247 + t350)) * t204) * t555 + (t585 - (-t467 * t262 + t350) * t259) * t357;
t303 = pkin(7) * t307;
t276 = (-(t205 * t263 - t512) * t505 + t516) * t555 + t303;
t95 = (t258 * t396 - t262 * t381) * t263 + (-t547 * t493 + t413) * t554;
t5 = -t107 * pkin(7) * t367 - t95 * t438 - t510 * t538 - t270 + t276 + t579;
t338 = -t5 * qJD(1) - t28 * qJD(2);
t286 = (-t233 * t257 * t478 - t248 * t436) * t255 + t469;
t44 = t227 * t433 + t286;
t56 = t417 + t256 * (t326 - t427);
t59 = t129 * t256 + t428;
t284 = ((t385 + t493 / 0.2e1) * t263 + (-0.4e1 * t418 - t492) * t554) * t367 + (-t259 * t59 + t263 * t56) * t551 + t107 * t355;
t298 = t333 * t233 * t590;
t9 = t284 + (t150 * t591 + t298) * t248 - t595;
t337 = t9 * qJD(1) + t44 * qJD(2);
t335 = t395 * t509;
t334 = t263 * t592 - t484;
t117 = -t197 * t501 + t333 * t480;
t273 = ((t256 * t576 - t428) * t263 - t259 * (t256 * t592 + t417)) * t257;
t285 = t607 * t555;
t94 = (-t258 * t582 + t262 * t398) * t263 + (t262 * t407 - t420) * t554;
t98 = -t197 * t582 - t333 * t398;
t12 = t285 - t273 / 0.2e1 + ((-t94 + t98) * t509 + (-t117 / 0.2e1 + t518 / 0.2e1 - t483 / 0.2e1) * t491) * t255;
t331 = qJD(1) * t12 - qJD(2) * t103;
t322 = t411 + t449;
t319 = -t229 - t577;
t24 = ((t353 - t374) * t261 + t300) * t260 + t360 * t239 + t322;
t29 = (t577 * t261 + t300) * t260 + t322;
t272 = (t333 * t381 + t356) * t438 + (t334 * t260 + (t386 + t496) * t514) * t555 + (t467 * t197 + 0.2e1 * t366) * t357 + t589 * pkin(7);
t275 = (-(t389 * t263 - t512) * t505 + t516) * t555 + t303;
t7 = pkin(7) * t445 - t272 + t275 + t579;
t311 = -t7 * qJD(1) - t24 * qJD(2) - t29 * qJD(3);
t309 = (-t483 + t518) * t491;
t114 = (t386 + t496 / 0.2e1) * t257;
t280 = (-t150 * t588 + t334 * t256) * t551 - t150 * t406;
t15 = t114 * t438 + t118 * t355 + t359 * t510 + t280 - t596;
t41 = -t248 * t368 + (-t233 * t422 + (t239 / 0.2e1 + pkin(4) + t444) * t506) * t257 + t469;
t45 = t286 + t376;
t308 = t15 * qJD(1) + t41 * qJD(2) + t45 * qJD(3);
t301 = (t402 + t335) * t255;
t145 = t205 * t259 + t534;
t282 = t534 * t230 + t325 * t259 + t263 * t439;
t90 = (t197 * t500 - t366) * t438;
t278 = pkin(7) * t90 + t282 * t395;
t13 = (-t145 * t505 + t216 * t333) * t551 + (-t333 * t372 + (t557 * t588 - t481) * t204) * t256 + (-t219 * t351 / 0.2e1 - ((t247 / 0.2e1 - t223) * t478 + (-t393 * t256 * pkin(7) - t436) * t257) * t333) * t255 + t278;
t271 = (t383 * t257 + t581) * t553 + t602 * t557;
t281 = (t216 - t434) * t556 + t341;
t22 = t255 * t335 - t271 + t281 + t357;
t288 = (t216 + t448) * t556;
t26 = t288 + (t164 * t257 + t170) * t553 + (t204 * t404 + t371) * t256 + (t402 + (pkin(7) * t478 - t261 * t527 + t429) * t557 + (t219 * t401 + (pkin(7) * t494 + t551) * t509) * t260) * t255;
t54 = t204 * t480 + (-pkin(7) * t370 + (-t240 / 0.2e1 - t241 / 0.2e1) * t256 * t219) * t255;
t294 = -t13 * qJD(1) - t22 * qJD(2) - t26 * qJD(3) + t54 * qJD(4);
t38 = t90 - (t563 - t580) * t441;
t283 = -qJD(1) * t38 - qJD(4) * t340 + t597 * t603;
t132 = Ifges(7,3) * t558 + t256 * t580;
t121 = t312 / 0.2e1;
t82 = t92 * qJD(6);
t80 = t91 * qJD(6);
t40 = t353 * t494 + t373 * t488 + t286;
t37 = -Ifges(7,3) * t333 * t404 + t329 * t495 + t90;
t31 = t313 / 0.2e1 + t314;
t27 = -t260 * (t170 + (-t260 * t510 + t164) * t257) / 0.2e1 - t602 * t558 + t288 + t341 + t301;
t25 = -t362 * t480 + t533 * t360 + (t571 + t545) * t405 + t258 * t373 + ((t230 * t444 + t374) * t261 + t549 * t514) * t260 - t411;
t23 = t301 + t271 + t281;
t20 = t121 + t332;
t18 = t121 + t296;
t16 = (t114 * t509 + (t118 * t552 + t359) * t219) * t255 + t280 + t596;
t14 = (t467 * t588 + t351) * t510 / 0.2e1 - t133 * t553 - t588 * t499 / 0.2e1 + (t204 * t496 - t145 * t504 / 0.2e1) * t260 - (t216 * t552 + t256 * t372 + (t399 - t369 / 0.2e1) * t255) * t333 - t278 - t393 * t441 * t531;
t11 = t273 / 0.2e1 + t285 + t382 + (-t309 / 0.2e1 + t117 * t402 + (t94 + t98) * t509) * t255;
t10 = (t298 + (t487 / 0.2e1 - t472 / 0.2e1) * t150) * t248 + t284 + t595;
t8 = (-t99 * t527 + t598) * t255 + t272 + t275;
t6 = ((t403 + t538) * t219 + (t107 * t530 + t95 + t356 + t495 / 0.2e1) * t509) * t255 + t270 + t276;
t30 = [qJD(2) * t2 + qJD(3) * t3 + qJD(4) * t4 + qJD(5) * t1 + 0.2e1 * qJD(6) * t17, t528 + ((-t259 * t56 - t263 * t59) * t257 - (mrSges(4,3) * pkin(3) - Ifges(3,5) - t206) * t259 + t195 + (-t309 + (-t152 * t259 - t263 * t155 / 0.2e1) * t459) * t255) * qJD(2) + t11 * qJD(3) + t10 * qJD(4) + t6 * qJD(5) + t18 * qJD(6), t526 + t11 * qJD(2) + (t607 * t257 + (-t117 * t491 + t459 * t98) * t255 + t382) * qJD(3) + t16 * qJD(4) + t8 * qJD(5) + t20 * qJD(6), t525 + t10 * qJD(2) + t16 * qJD(3) + (t257 * t282 + t333 * t581) * t465 + t14 * qJD(5) + t37 * qJD(6), t529 + t6 * qJD(2) + t8 * qJD(3) + t14 * qJD(4) + ((t333 * t477 - t481) * t438 + t145 * t433) * qJD(5) + t31 * qJD(6) + (-t574 * t127 - 0.2e1 * t133) * t524, qJD(2) * t18 + qJD(3) * t20 + qJD(4) * t37 + qJD(5) * t31 + 0.2e1 * t523; -qJD(3) * t12 + qJD(4) * t9 - qJD(5) * t5 + qJD(6) * t19 - t528, qJD(4) * t44 - qJD(5) * t28 + t532, qJD(4) * t40 + qJD(5) * t25 - t331 + t532, t40 * qJD(3) + (t261 * t383 + t583) * t465 + t23 * qJD(5) + t610 + t337, t25 * qJD(3) + t23 * qJD(4) + (t226 * t432 + (-pkin(3) * t503 + t319) * t260 + t410) * qJD(5) + t80 + t338, t522 + t609; qJD(2) * t12 + qJD(4) * t15 - qJD(5) * t7 + qJD(6) * t21 - t526, qJD(4) * t41 - qJD(5) * t24 + t331 - t67, qJD(4) * t45 - qJD(5) * t29 - t67, -(t164 * t261 - t583) * t465 + t27 * qJD(5) + t610 + t308, t27 * qJD(4) + (-pkin(5) * t432 + t260 * t319 + t410) * qJD(5) + t80 + t311, t521 + t609; -qJD(2) * t9 - qJD(3) * t15 - qJD(5) * t13 + qJD(6) * t38 - t525, -qJD(3) * t41 - qJD(5) * t22 - t337 - t611, -qJD(5) * t26 - t308 - t611, qJD(5) * t54 + qJD(6) * t340, t574 * t256 * t524 + t132 * qJD(6) - t260 * t361 + t294, qJD(5) * t132 - t283; qJD(2) * t5 + qJD(3) * t7 + qJD(4) * t13 + qJD(6) * t32 - t529, qJD(3) * t24 + qJD(4) * t22 - t338 + t82, qJD(4) * t26 - t311 + t82, qJD(6) * t131 - t294, (qJD(6) - t524) * t438, t573; -qJD(2) * t19 - qJD(3) * t21 - qJD(4) * t38 - qJD(5) * t32 - 0.2e1 * t523, -t522 + t608, -t521 + t608, -qJD(5) * t131 + t283, -t573, 0;];
Cq = t30;
