% Calculate minimal parameter regressor of Coriolis joint torque vector for
% CloosQRC350DE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,kDG]';
% MDP [36x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see CloosQRC350DE_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-19 21:40
% Revision: caa0dbda1e8a16d11faaa29ba3bbef6afcd619f7 (2020-05-25)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = CloosQRC350DE_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(7,1),zeros(36,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350DE_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350DE_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'CloosQRC350DE_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [7x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [36 1]), ...
  'CloosQRC350DE_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [36x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 1
% StartTime: 2020-06-19 21:39:39
% EndTime: 2020-06-19 21:39:42
% DurationCPUTime: 1.68s
% Computational Cost: add. (11374->850), mult. (25380->1088), div. (0->0), fcn. (19276->10), ass. (0->423)
unknown=NaN(6,1);
t1 = cos(qJ(2));
t2 = t1 * qJD(1);
t3 = sin(qJ(2));
t4 = qJD(2) * t3;
t8 = qJD(1) * pkin(2);
t9 = qJD(2) * t1;
t16 = qJD(2) ^ 2;
t21 = sin(qJ(3));
t22 = qJD(3) * t21;
t24 = cos(qJ(3));
t25 = t24 * qJD(2);
t27 = qJD(3) * t24;
t29 = t21 * qJD(2);
t31 = t1 * t22 + t1 * t29 + t25 * t3 + t27 * t3;
t32 = qJD(2) + qJD(3);
t39 = t1 * t25 + t1 * t27 - t22 * t3 - t29 * t3;
t42 = t3 ^ 2;
t45 = t1 ^ 2;
t50 = t22 * t2;
t51 = t3 * qJD(1);
t52 = t25 * t51;
t53 = t27 * t51;
t54 = t29 * t2;
t55 = t50 + t52 + t53 + t54;
t56 = t24 * t1;
t57 = t21 * t3;
t58 = -t56 + t57;
t62 = -qJD(1) * t56 + qJD(1) * t57;
t66 = t21 * t1;
t67 = t66 * qJD(1);
t68 = t24 * t3;
t69 = t68 * qJD(1);
t70 = t67 + t69;
t72 = t27 * t2;
t73 = t29 * t51;
t74 = t22 * t51;
t75 = t25 * t2;
t76 = t72 - t73 - t74 + t75;
t78 = t66 + t68;
t83 = -pkin(3) * t70;
t85 = t3 * pkin(3);
t86 = -pkin(2) - t85;
t88 = qJD(1) * pkin(3);
t91 = t51 * pkin(3);
t92 = -t8 - t91;
t96 = pkin(3) * t62;
t104 = sin(qJ(4));
t105 = t104 * qJD(4);
t106 = t105 * t62;
t107 = cos(qJ(4));
t108 = t107 * t55;
t109 = qJD(4) * t107;
t110 = t109 * t32;
t111 = -t106 + t108 - t110;
t112 = t111 * t107;
t116 = -t104 * t32 + t107 * t62;
t117 = t116 * qJD(4);
t118 = t104 * t58;
t120 = t116 * t107;
t124 = t104 * t62;
t125 = t107 * t32;
t126 = -t124 - t125;
t129 = t107 * t31;
t131 = t107 * t58;
t132 = t109 * t62;
t133 = t104 * t55;
t134 = t105 * t32;
t135 = -t132 - t133 + t134;
t137 = t111 * t104;
t140 = t116 * t104;
t144 = t67 + t69 + qJD(4);
t145 = t58 * t144;
t154 = t104 * t31;
t161 = -0.2e1 * t2 * t4 * MDP(2) + 0.2e1 * t8 * t9 * MDP(7) - 0.2e1 * t8 * t4 * MDP(8) + t16 * t3 * MDP(4) + t16 * t1 * MDP(5) + t31 * t32 * MDP(11) + t39 * t32 * MDP(12) + 0.2e1 * (qJD(1) * qJD(2) * t42 - qJD(1) * qJD(2) * t45) * MDP(3) + (t31 * t62 + t55 * t58) * MDP(9) + (t31 * t70 + t39 * t62 + t55 * t78 + t58 * t76) * MDP(10) + (t78 * t88 * t9 - t39 * t92 - t76 * t86 - t83 * t9) * MDP(14) + (-t58 * t88 * t9 + t31 * t92 + t55 * t86 - t9 * t96) * MDP(15) + (t112 * t58 - t117 * t118 + t120 * t31) * MDP(16) + (-t105 * t126 * t58 - t117 * t131 + t126 * t129 + t131 * t135 - t137 * t58 - t140 * t31) * MDP(17) + (-t105 * t145 + t111 * t78 + t116 * t39 + t129 * t144 + t131 * t76) * MDP(18) + (-t109 * t145 - t118 * t76 + t126 * t39 + t135 * t78 - t144 * t154) * MDP(19);
t168 = -pkin(4) * t78 + pkin(5) * t58 - pkin(2) - t85;
t174 = -pkin(3) * t9 - pkin(4) * t39 + pkin(5) * t31;
t175 = t107 * t174;
t177 = t107 * t168;
t179 = t29 * pkin(3);
t181 = -pkin(5) * t32 + t179;
t182 = t109 * t181;
t183 = t104 * qJD(3);
t184 = t25 * pkin(3);
t185 = t183 * t184;
t188 = -pkin(4) * t70 + pkin(5) * t62 - t8 - t91;
t189 = t105 * t188;
t193 = -pkin(4) * t76 + pkin(5) * t55 - t88 * t9;
t194 = t107 * t193;
t195 = -t182 - t185 + t189 - t194;
t197 = t104 * t181;
t198 = t107 * t188;
t199 = -t197 - t198;
t201 = t22 * qJD(2);
t206 = pkin(4) * t32 + t184;
t207 = t206 * qJD(4);
t209 = t206 * t104;
t217 = t104 * t168;
t219 = t105 * t181;
t220 = t107 * qJD(3);
t221 = t220 * t184;
t222 = t109 * t188;
t223 = t104 * t193;
t224 = -t219 + t221 - t222 - t223;
t226 = t107 * t181;
t227 = t104 * t188;
t228 = t226 - t227;
t234 = t206 * t107;
t238 = sin(qJ(5));
t239 = qJD(5) * t238;
t240 = t239 * t116;
t241 = cos(qJ(5));
t242 = t241 * t111;
t243 = qJD(5) * t241;
t244 = t243 * t144;
t245 = t238 * t76;
t246 = -t240 + t242 + t244 + t245;
t247 = t241 * t107;
t250 = t238 * t78 + t247 * t58;
t254 = t116 * t241 + t144 * t238;
t256 = t241 * qJD(4);
t261 = -t118 * t256 - t131 * t239 + t238 * t39 + t243 * t78 + t247 * t31;
t265 = t238 * t116;
t266 = t241 * t144;
t267 = -t265 + t266;
t269 = t243 * t116;
t270 = t238 * t111;
t271 = t239 * t144;
t272 = t241 * t76;
t273 = -t269 - t270 - t271 + t272;
t275 = t238 * t107;
t278 = t241 * t78 - t275 * t58;
t281 = t238 * qJD(4);
t286 = t118 * t281 - t131 * t243 - t239 * t78 + t241 * t39 - t275 * t31;
t290 = t124 + t125 + qJD(5);
t295 = t254 * qJD(4);
t297 = t254 * t104;
t305 = t267 * qJD(4);
t307 = t267 * t104;
t313 = t290 * qJD(4);
t315 = t290 * t104;
t323 = t238 * t104;
t328 = t243 * t228;
t329 = t238 * t224;
t330 = t239 * t206;
t331 = t241 * qJD(3);
t332 = t331 * t179;
t333 = -t328 - t329 - t330 - t332;
t338 = t206 * t241 - t228 * t238;
t339 = t338 * qJD(4);
t341 = t338 * t104;
t349 = t104 * t333 * t58 + t105 * t168 * t267 - t135 * t168 * t323 + t174 * t290 * t323 + t177 * t281 * t290 + t217 * t243 * t290 + t131 * t339 - t175 * t267 - t177 * t273 + t195 * t278 + t199 * t286 + t31 * t341;
t355 = t241 * t104;
t360 = t239 * t228;
t361 = t241 * t224;
t362 = t243 * t206;
t363 = t238 * qJD(3);
t364 = t363 * t179;
t365 = -t360 + t361 + t362 - t364;
t368 = t241 * t228;
t369 = t238 * t206;
t370 = t368 + t369;
t371 = t370 * qJD(4);
t373 = t370 * t104;
t381 = -t104 * t365 * t58 - t105 * t168 * t254 - t135 * t168 * t355 + t174 * t290 * t355 + t177 * t256 * t290 - t217 * t239 * t290 - t131 * t371 + t175 * t254 + t177 * t246 - t195 * t250 - t199 * t261 - t31 * t373;
t383 = pkin(7) * qJD(5);
t384 = t383 - qJD(6);
t386 = pkin(7) * qJ(5) - qJ(6);
t387 = sin(t386);
t388 = t384 * t387;
t389 = t388 * t254;
t390 = cos(t386);
t391 = t390 * t246;
t392 = t384 * t390;
t393 = t392 * t290;
t394 = -t387 * t135;
t395 = t389 - t391 - t393 - t394;
t397 = t387 * t104;
t399 = -t250 * t390 - t397 * t58;
t403 = -t254 * t390 - t290 * t387;
t407 = t387 * qJD(4);
t410 = -t118 * t392 - t131 * t407 + t250 * t388 - t261 * t390 - t31 * t397;
t416 = -t254 * t387 + t290 * t390;
t418 = t392 * t254;
t419 = t387 * t246;
t420 = t388 * t290;
t421 = -t390 * t135;
t422 = -t418 - t419 - t420 + t421;
t425 = t390 * t104;
t427 = -t250 * t387 + t425 * t58;
t432 = t390 * qJD(4);
t435 = -t118 * t388 + t131 * t432 - t250 * t392 - t261 * t387 + t31 * t425;
t439 = -t265 + t266 + qJD(6) - t383;
t452 = -pkin(6) * t118 - t168 * t355;
t460 = -pkin(6) * t109 * t58 - pkin(6) * t154 - t174 * t355 - t177 * t256 + t217 * t239;
t463 = pkin(6) * t250 + t177;
t467 = pkin(6) * t261 - t105 * t168 + t175;
t476 = -pkin(6) * t290 + t368 + t369;
t477 = t392 * t476;
t479 = pkin(6) * t135 - t360 + t361 + t362 - t364;
t480 = t387 * t479;
t482 = pkin(6) * t254 + t197 + t198;
t483 = t388 * t482;
t485 = pkin(6) * t246 + t182 + t185 - t189 + t194;
t486 = t390 * t485;
t487 = -t477 - t480 - t483 + t486;
t491 = -t387 * t476 + t390 * t482;
t515 = t388 * t476;
t516 = t390 * t479;
t517 = t392 * t482;
t518 = t387 * t485;
t519 = t515 - t516 - t517 - t518;
t523 = -t387 * t482 - t390 * t476;
t543 = (t144 * t39 + t76 * t78) * MDP(20) + (-pkin(3) * t104 * t201 * t58 + t105 * t144 * t168 + t131 * t207 - t144 * t175 - t177 * t76 + t195 * t78 + t199 * t39 + t209 * t31) * MDP(21) + (-pkin(3) * t107 * t201 * t58 + t104 * t144 * t174 + t109 * t144 * t168 - t118 * t207 + t217 * t76 - t224 * t78 - t228 * t39 + t234 * t31) * MDP(22) + (t246 * t250 + t254 * t261) * MDP(23) + (t246 * t278 + t250 * t273 + t254 * t286 + t261 * t267) * MDP(24) + (t104 * t246 * t58 + t131 * t295 - t135 * t250 + t261 * t290 + t297 * t31) * MDP(25) + (t104 * t273 * t58 + t131 * t305 - t135 * t278 + t286 * t290 + t307 * t31) * MDP(26) + (-t104 * t135 * t58 + t131 * t313 + t31 * t315) * MDP(27) + t349 * MDP(28) + t381 * MDP(29) + (t395 * t399 + t403 * t410) * MDP(30) + (t395 * t427 + t399 * t422 + t403 * t435 + t410 * t416) * MDP(31) + (t273 * t399 + t278 * t395 + t286 * t403 + t410 * t439) * MDP(32) + (t273 * t278 + t286 * t439) * MDP(34) + ((-t387 * t460 - t388 * t463 + t390 * t467 - t392 * t452) * t439 + (-t387 * t452 + t390 * t463) * t273 + t487 * t278 + t491 * t286 - t243 * t217 * t416 - t281 * t177 * t416 - t323 * t174 * t416 - t323 * t168 * t422 - t333 * t427 - t338 * t435) * MDP(35) + (-(-t387 * t467 + t388 * t452 - t390 * t460 - t392 * t463) * t439 - (-t387 * t463 - t390 * t452) * t273 - t519 * t278 - t523 * t286 + t243 * t217 * t403 + t281 * t177 * t403 + t323 * t174 * t403 + t323 * t168 * t395 + t333 * t399 + t338 * t410) * MDP(36) + (t273 * t427 + t278 * t422 + t286 * t416 + t435 * t439) * MDP(33);
t545 = qJD(1) ^ 2;
t549 = t545 * pkin(2);
t555 = t62 * t70 * MDP(9);
t557 = -t144 * t62 * MDP(20);
t558 = t273 * t238;
t560 = t439 * qJD(5);
t562 = t439 * t238;
t566 = -t241 * t62 - t275 * t70;
t569 = (t104 * t558 + t109 * t562 + t355 * t560 - t439 * t566) * MDP(34);
t570 = t21 * pkin(3);
t571 = t570 - pkin(5);
t572 = t247 * t571;
t573 = t24 * pkin(3);
t574 = t573 + pkin(4);
t575 = t238 * t574;
t576 = t107 * pkin(6);
t577 = t572 + t575 - t576;
t579 = t107 * t571;
t580 = t239 * t579;
t581 = t104 * t571;
t582 = t256 * t581;
t583 = t27 * pkin(3);
t584 = t247 * t583;
t585 = t243 * t574;
t586 = t363 * t570;
t587 = t105 * pkin(6);
t588 = -t580 - t582 + t584 + t585 - t586 + t587;
t590 = t355 * pkin(6);
t591 = t581 - t590;
t596 = t239 * t104 * pkin(6);
t597 = t256 * t576;
t598 = t109 * t571 + t183 * t573 + t596 - t597;
t607 = t487 * t238 * t104;
t608 = t491 * qJD(5);
t609 = t608 * t355;
t610 = t491 * t238;
t611 = t610 * t109;
t617 = -t239 * t574 - t243 * t579 - t275 * t583 + t281 * t581 - t331 * t570;
t621 = t241 * t574 - t275 * t571;
t623 = t387 * t241;
t626 = -t104 * t623 - t107 * t390;
t627 = t333 * t626;
t629 = t387 * qJD(5);
t634 = t104 * t432 + t107 * t388 - t109 * t623 + t323 * t629 - t355 * t392;
t635 = t338 * t634;
t637 = t70 * pkin(5);
t638 = -t62 * pkin(4);
t639 = -pkin(3) * t2 + t637 - t638;
t641 = t104 * t70;
t642 = t641 * pkin(6);
t643 = -t355 * t639 - t642;
t645 = t107 * t639;
t648 = -t238 * t62 + t247 * t70;
t649 = t648 * pkin(6);
t650 = t645 + t649;
t654 = t491 * t566;
t659 = t387 * t648 - t425 * t70;
t660 = t338 * t659;
t661 = (-t387 * t588 - t388 * t591 + t390 * t598 - t392 * t577) * t439 + (-t387 * t577 + t390 * t591) * t273 + t607 + t609 + t611 - t617 * t416 - t621 * t422 + t627 + t635 - (-t387 * t643 + t390 * t650) * t439 - t654 + t323 * t639 * t416 - t660;
t674 = t519 * t238 * t104;
t675 = t523 * qJD(5);
t676 = t675 * t355;
t677 = t523 * t238;
t678 = t677 * t109;
t681 = t390 * t241;
t684 = t104 * t681 - t107 * t387;
t685 = t333 * t684;
t687 = t390 * qJD(5);
t692 = t104 * t407 - t107 * t392 + t109 * t681 - t323 * t687 - t355 * t388;
t693 = t338 * t692;
t698 = -t523 * t566;
t703 = -t390 * t648 - t397 * t70;
t704 = t338 * t703;
t705 = -(-t387 * t598 + t388 * t577 - t390 * t588 - t392 * t591) * t439 - (-t387 * t591 - t390 * t577) * t273 - t674 - t676 - t678 + t617 * t403 + t621 * t395 + t685 + t693 + (-t387 * t650 - t390 * t643) * t439 - t698 - t323 * t639 * t403 - t704;
t707 = t70 ^ 2;
t710 = (t62 ^ 2 - t707) * MDP(10);
t713 = (-t32 * t70 + t50 + t52 + t53 + t54) * MDP(11);
t716 = (t32 * t62 + t72 - t73 - t74 + t75) * MDP(12);
t717 = t32 * pkin(3);
t719 = qJD(2) * pkin(3);
t720 = t22 * t719;
t722 = t92 * t62;
t725 = -t32 * pkin(3);
t727 = t27 * t719;
t729 = t92 * t70;
t735 = (-t107 * t117 - t120 * t70 - t137) * MDP(16);
t739 = t107 * t70;
t743 = (t104 * t117 - t104 * t135 - t109 * t126 - t126 * t739 + t140 * t70 - t112) * MDP(17);
t744 = t1 * t545 * t3 * MDP(2) - t549 * t1 * MDP(7) + t549 * t3 * MDP(8) - t555 - t557 + t569 + t661 * MDP(35) + t705 * MDP(36) + t710 + t713 + t716 + (t2 * t83 - t22 * t717 - t720 - t722) * MDP(14) + (t2 * t96 + t27 * t725 - t727 - t729) * MDP(15) + t735 + t743;
t750 = (-t104 * t76 - t109 * t144 + t116 * t62 - t144 * t739) * MDP(18);
t756 = (t105 * t144 - t107 * t76 + t126 * t62 + t144 * t641) * MDP(19);
t762 = -pkin(3) * t126;
t766 = t22 * t719 * t107;
t767 = t207 * t104;
t769 = -t199 * t62;
t770 = t209 * t70;
t778 = pkin(3) * t116;
t782 = t22 * t719 * t104;
t783 = t207 * t107;
t786 = t228 * t62;
t787 = t234 * t70;
t790 = t246 * t241;
t792 = t254 * qJD(5);
t794 = t254 * t241;
t798 = (-t104 * t790 - t109 * t794 - t254 * t648 + t323 * t792) * MDP(23);
t803 = t246 * t238;
t806 = t254 * t238;
t811 = (-t107 * t256 * t267 + t104 * t803 + t109 * t806 + t239 * t307 - t254 * t566 - t267 * t648 - t273 * t355 + t355 * t792) * MDP(24);
t813 = t107 * t290;
t821 = (-t104 * t295 + t107 * t246 + t135 * t355 + t239 * t315 - t256 * t813 - t290 * t648 - t297 * t70) * MDP(25);
t830 = (-t104 * t305 + t107 * t273 - t135 * t323 + t243 * t315 + t281 * t813 - t290 * t566 - t307 * t70) * MDP(26);
t835 = (-t104 * t313 - t107 * t135 - t315 * t70) * MDP(27);
t838 = t333 * t107;
t839 = t339 * t104;
t845 = -t195 * t238;
t846 = t845 * t104;
t847 = -t199 * qJD(5);
t848 = t847 * t355;
t849 = -t199 * t238;
t850 = t849 * t109;
t853 = t341 * t70;
t855 = t199 * t566;
t856 = -t109 * t267 * t571 - t183 * t267 * t573 - t290 * t323 * t639 - t135 * t621 + t267 * t645 - t273 * t581 + t290 * t617 + t838 - t839 - t846 - t848 - t850 - t853 - t855;
t862 = t365 * t107;
t863 = t371 * t104;
t869 = -t195 * t241;
t870 = t869 * t104;
t871 = t847 * t323;
t872 = -t199 * t241;
t873 = t872 * t109;
t876 = t373 * t70;
t878 = -t199 * t648;
t879 = -(-t580 - t582 + t584 + t585 - t586) * t290 + (t572 + t575) * t135 - t862 + t863 + t109 * t571 * t254 + t183 * t573 * t254 + t581 * t246 - t870 + t871 - t873 - t355 * t639 * t290 + t876 - t645 * t254 - t878;
t885 = (t395 * t684 + t403 * t692 - t403 * t703) * MDP(30);
t893 = (-t395 * t626 - t403 * t634 + t403 * t659 + t416 * t692 - t416 * t703 + t422 * t684) * MDP(31);
t898 = t403 * qJD(5);
t900 = t403 * t238;
t905 = (t104 * t238 * t395 + t109 * t900 + t273 * t684 + t355 * t898 - t403 * t566 + t439 * t692 - t439 * t703) * MDP(32);
t910 = t416 * qJD(5);
t912 = t416 * t238;
t917 = (t104 * t238 * t422 + t109 * t912 - t273 * t626 + t355 * t910 - t416 * t566 - t439 * t634 + t439 * t659) * MDP(33);
t922 = t750 + t756 + (-t109 * t144 * t571 - t144 * t183 * t573 - t135 * t574 + t144 * t645 - t22 * t762 - t581 * t76 - t766 - t767 - t769 - t770) * MDP(21) + (-t104 * t144 * t639 + t105 * t144 * t571 - t144 * t220 * t573 + t111 * t574 - t22 * t778 - t579 * t76 + t782 - t783 - t786 - t787) * MDP(22) + t798 + t811 + t821 + t830 + t835 + t856 * MDP(28) + t879 * MDP(29) + t885 + t893 + t905 + t917 + (-t42 * t545 + t45 * t545) * MDP(3);
t924 = t247 * pkin(5);
t925 = t238 * pkin(4);
t926 = -t924 + t925 - t576;
t928 = t107 * pkin(5);
t929 = t239 * t928;
t930 = t104 * pkin(5);
t931 = t256 * t930;
t932 = t243 * pkin(4);
t933 = t929 + t931 + t932 + t587;
t935 = -t930 - t590;
t938 = -pkin(5) * t109 + t596 - t597;
t949 = -pkin(4) * t239 + t243 * t928 - t281 * t930;
t953 = pkin(4) * t241 + pkin(5) * t275;
t957 = t637 - t638;
t959 = t107 * t24 * t719 - t104 * t957;
t960 = t241 * t959;
t962 = t238 * t21 * t719;
t963 = t960 - t962 - t642;
t966 = t104 * t24 * t719;
t967 = t107 * t957;
t968 = t966 + t967 + t649;
t975 = -t21 * t241 * t719 - t238 * t959;
t977 = -(-t387 * t938 + t388 * t926 - t390 * t933 - t392 * t935) * t439 - (-t387 * t935 - t390 * t926) * t273 - t674 - t676 - t678 + t949 * t403 + t953 * t395 + t685 + t693 + (-t387 * t968 - t390 * t963) * t439 - t698 - t975 * t403 - t704;
t989 = -t966 - t967;
t1009 = pkin(5) * t109 * t267 - t135 * t953 - t267 * t989 + t273 * t930 + t290 * t949 - t290 * t975 + t838 - t839 - t846 - t848 - t850 - t853 - t855;
t1021 = -(t929 + t931 + t932) * t290 + (-t924 + t925) * t135 - t862 + t863 - t109 * pkin(5) * t254 - t930 * t246 - t870 + t871 - t873 + (t960 - t962) * t290 + t876 + t989 * t254 - t878;
t1040 = (-t387 * t933 - t388 * t935 + t390 * t938 - t392 * t926) * t439 + (-t387 * t926 + t390 * t935) * t273 + t607 + t609 + t611 - t949 * t416 - t953 * t422 + t627 + t635 - (-t387 * t963 + t390 * t968) * t439 - t654 + t975 * t416 - t660;
t1042 = -t555 - t557 + t977 * MDP(36) + t569 + (t29 * t717 - t720 - t722) * MDP(14) + (-t25 * t725 - t727 - t729) * MDP(15) + (pkin(5) * t109 * t144 - pkin(4) * t135 - t144 * t989 + t29 * t762 + t76 * t930 - t766 - t767 - t769 - t770) * MDP(21) + (-pkin(5) * t105 * t144 + pkin(4) * t111 + t144 * t959 + t29 * t778 + t76 * t928 + t782 - t783 - t786 - t787) * MDP(22) + t1009 * MDP(28) + t1021 * MDP(29) + t1040 * MDP(35) + t710 + t713;
t1043 = t716 + t735 + t743 + t750 + t756 + t798 + t811 + t821 + t830 + t835 + t885 + t893 + t905 + t917;
t1047 = t126 ^ 2;
t1072 = t241 * t126;
t1094 = t199 * t238;
t1102 = t199 * t241;
t1109 = t395 * t390;
t1111 = t403 * t384;
t1112 = t387 * t238;
t1118 = -t116 * t387 - t126 * t681;
t1125 = t390 * t238;
t1127 = t395 * t387;
t1135 = t116 * t390 - t126 * t623;
t1140 = t241 * t439;
t1163 = t238 * pkin(6);
t1166 = t241 * pkin(6);
t1173 = t333 * t387;
t1175 = t338 * t384;
t1177 = t387 * t338;
t1180 = -pkin(6) * t116 + t1102;
t1183 = pkin(6) * t1072 + t226 - t227;
t1190 = -t388 * t1163 * t439 + t687 * t1166 * t439 + t1125 * pkin(6) * t273 + t487 * t241 - t608 * t238 + t1173 * t238 + t1175 * t1125 + t1177 * t243 - (-t1180 * t387 + t1183 * t390) * t439 + t610 * t126 - t1094 * t416 + t338 * t1135;
t1200 = t333 * t390;
t1203 = t338 * t390;
t1212 = t392 * t1163 * t439 + t629 * t1166 * t439 + t1112 * pkin(6) * t273 - t519 * t241 + t675 * t238 - t1200 * t238 + t1175 * t1112 - t1203 * t243 + (-t1180 * t390 - t1183 * t387) * t439 - t677 * t126 + t1094 * t403 - t338 * t1118;
t1214 = (t126 * t238 * t290 - t116 * t267 - t135 * t241 - t239 * t290) * MDP(26) - t290 * t116 * MDP(27) + (t1094 * t290 - t116 * t338 - t126 * t849 + t228 * t267 + t238 * t847 - t869) * MDP(28) + (t1102 * t290 + t116 * t370 - t126 * t872 - t228 * t254 + t241 * t847 + t845) * MDP(29) + (-t243 * t390 * t403 - t1109 * t238 + t1111 * t1112 - t1118 * t403) * MDP(30) + (-t241 * t416 * t687 - t243 * t387 * t403 - t1111 * t1125 - t1118 * t416 - t1125 * t422 - t1127 * t238 - t1135 * t403 + t388 * t912) * MDP(31) + (-t1118 * t439 - t1125 * t273 - t1140 * t687 + t126 * t900 - t238 * t898 + t241 * t395 + t388 * t562) * MDP(32) + (-t1112 * t273 - t1135 * t439 - t1140 * t629 + t126 * t912 - t238 * t910 + t241 * t422 - t392 * t562) * MDP(33) + (t126 * t562 - t238 * t560 + t241 * t273) * MDP(34) + t1190 * MDP(35) + t1212 * MDP(36);
t1218 = t267 ^ 2;
t1238 = pkin(7) * t387;
t1240 = t390 * t267;
t1241 = pkin(7) * t390;
t1243 = t1238 * t254 - t1241 * t290 - t1240;
t1252 = t387 * t267;
t1254 = -t1238 * t290 - t1241 * t254 - t1252;
t1308 = -t254 * t267 * MDP(23) + (t254 ^ 2 - t1218) * MDP(24) + (-t267 * t290 - t240 + t242 + t244 + t245) * MDP(25) + (t254 * t290 - t269 - t270 - t271 + t272) * MDP(26) - t135 * MDP(27) + (t199 * t254 + t290 * t370 - t328 - t329 - t330 - t332) * MDP(28) + (t199 * t267 + t290 * t338 + t360 - t361 - t362 + t364) * MDP(29) + (-t1111 * t390 - t1243 * t403 - t1127) * MDP(30) + (-t1111 * t387 - t1243 * t416 - t1254 * t403 - t387 * t422 - t392 * t416 + t1109) * MDP(31) + (-pkin(7) * t395 - t1243 * t439 + t254 * t403 - t273 * t387 - t392 * t439) * MDP(32) + (-pkin(7) * t422 - t1254 * t439 + t254 * t416 + t273 * t390 - t388 * t439) * MDP(33) + (-pkin(7) * t273 + t254 * t439) * MDP(34) + (t392 * pkin(6) * t439 + t387 * pkin(6) * t273 - t487 * pkin(7) - t1200 + t1175 * t387 - (pkin(6) * t1240 - t1238 * t482 - t1241 * t476 - t1177) * t439 + t491 * t254 - t370 * t416 + t338 * t1254) * MDP(35) + (t388 * pkin(6) * t439 - t390 * pkin(6) * t273 + t519 * pkin(7) - t392 * t338 - t1173 + (-pkin(6) * t1252 + t1238 * t476 - t1241 * t482 - t1203) * t439 - t523 * t254 + t370 * t403 - t338 * t1243) * MDP(36);
t1311 = t416 ^ 2;
unknown(1,1) = t161 + t543;
unknown(2,1) = t744 + t922;
unknown(3,1) = t1042 + t1043;
unknown(4,1) = -t116 * t126 * MDP(16) + (t116 ^ 2 - t1047) * MDP(17) + (-t126 * t144 - t106 + t108 - t110) * MDP(18) + (t116 * t144 - t132 - t133 + t134) * MDP(19) + t76 * MDP(20) + (-t116 * t206 + t144 * t228 - t182 - t185 + t189 - t194) * MDP(21) + (-t126 * t206 + t144 * t199 + t219 - t221 + t222 + t223) * MDP(22) + (-t126 * t794 + t241 * t792 + t803) * MDP(23) + (-t1072 * t267 + t126 * t806 - t238 * t792 + t243 * t267 + t558 + t790) * MDP(24) + (-t1072 * t290 - t116 * t254 - t135 * t238 + t243 * t290) * MDP(25) + t1214;
unknown(5,1) = t1308;
unknown(6,1) = -t403 * t416 * MDP(30) + (t403 ^ 2 - t1311) * MDP(31) + (-t416 * t439 + t389 - t391 - t393 - t394) * MDP(32) + (t403 * t439 - t418 - t419 - t420 + t421) * MDP(33) + t273 * MDP(34) + (-t338 * t403 + t439 * t523 - t477 - t480 - t483 + t486) * MDP(35) + (-t338 * t416 + t439 * t491 - t515 + t516 + t517 + t518) * MDP(36);
tauc = unknown;
