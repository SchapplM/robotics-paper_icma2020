% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% CloosQRC350OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-23 22:05
% Revision: 9ee7546dde8543a81bf40e37a1400ef9d9e232c4 (2020-06-23)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = CloosQRC350OL_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350OL_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350OL_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'CloosQRC350OL_inertiaDJ_reg2_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-23 22:03:19
% EndTime: 2020-06-23 22:03:31
% DurationCPUTime: 8.77s
% Computational Cost: add. (4903->312), mult. (11664->560), div. (0->0), fcn. (11390->10), ass. (0->213)
t133 = sin(qJ(5));
t134 = sin(qJ(4));
t136 = cos(qJ(5));
t216 = qJD(5) * t136;
t195 = t134 * t216;
t137 = cos(qJ(4));
t219 = qJD(4) * t137;
t98 = t133 * t219 + t195;
t132 = sin(qJ(6));
t135 = cos(qJ(6));
t212 = qJD(6) * t135;
t190 = t133 * t212;
t220 = qJD(4) * t136;
t175 = qJD(6) + t220;
t176 = -qJD(6) * t136 - qJD(4);
t217 = qJD(5) * t134;
t196 = t133 * t217;
t230 = t134 * t135;
t61 = t176 * t230 + (-t175 * t137 + t196) * t132;
t228 = t135 * t137;
t229 = t134 * t136;
t99 = -t132 * t229 + t228;
t26 = t99 * t190 + (t133 * t61 + t99 * t216) * t132;
t138 = cos(qJ(3));
t250 = pkin(3) * qJD(3);
t206 = t138 * t250;
t177 = t137 * t206;
t262 = pkin(3) * t138;
t201 = pkin(4) + t262;
t271 = -qJD(5) * t201 - t177;
t139 = cos(qJ(2));
t263 = sin(qJ(3));
t264 = sin(qJ(2));
t105 = t138 * t139 - t263 * t264;
t100 = t132 * t137 + t135 * t229;
t218 = qJD(5) * t133;
t60 = t175 * t228 + (t176 * t132 - t135 * t218) * t134;
t38 = t100 * t212 + t132 * t60;
t232 = t133 * t134;
t223 = qJD(2) * t139;
t207 = pkin(3) * t223;
t104 = t138 * t264 + t263 * t139;
t268 = qJD(2) + qJD(3);
t74 = t268 * t104;
t75 = t105 * t268;
t37 = pkin(4) * t75 - pkin(5) * t74 + t207;
t123 = t264 * pkin(3) + pkin(2);
t73 = pkin(4) * t104 + pkin(5) * t105 + t123;
t270 = t37 * t232 + t98 * t73;
t129 = t134 ^ 2;
t131 = t137 ^ 2;
t225 = t129 - t131;
t208 = t263 * pkin(3);
t122 = t208 - pkin(5);
t215 = qJD(5) * t137;
t146 = t133 * t215 + t134 * t220;
t174 = qJD(3) * t208;
t51 = t122 * t146 + t133 * t174 + t271 * t136;
t267 = t136 ^ 2;
t266 = pkin(6) * t60;
t265 = pkin(6) * t99;
t261 = pkin(6) * t100;
t259 = pkin(6) * t136;
t148 = t105 * t219 - t134 * t74;
t227 = t136 * t137;
t202 = t105 * t227;
t68 = -t104 * t133 + t202;
t144 = qJD(6) * t68 + t148;
t221 = qJD(4) * t134;
t240 = t137 * t74;
t143 = qJD(5) * t104 + t105 * t221 + t240;
t162 = -t105 * t215 - t75;
t20 = t162 * t133 - t143 * t136;
t233 = t105 * t134;
t161 = qJD(6) * t233 - t20;
t6 = t144 * t132 + t161 * t135;
t258 = t132 * t6;
t257 = t135 * t6;
t7 = -t161 * t132 + t144 * t135;
t256 = t135 * t7;
t255 = t37 * t73;
t90 = t122 * t227 + t133 * t201;
t78 = -pkin(6) * t137 + t90;
t185 = t122 - t259;
t94 = t185 * t134;
t56 = t132 * t78 + t135 * t94;
t238 = qJD(6) * t56;
t124 = pkin(6) * t221;
t45 = t124 - t51;
t115 = pkin(6) * t196;
t178 = t134 * t206;
t66 = t185 * t219 + t115 + t178;
t16 = t132 * t66 - t135 * t45 + t238;
t57 = t132 * t94 - t135 * t78;
t254 = t16 * t99 + t57 * t61;
t200 = -pkin(5) - t259;
t108 = t200 * t134;
t125 = t133 * pkin(4);
t97 = t125 + (-pkin(5) * t136 - pkin(6)) * t137;
t70 = t108 * t135 + t132 * t97;
t236 = qJD(6) * t70;
t86 = pkin(4) * t216 + pkin(5) * t146;
t76 = t124 + t86;
t88 = t200 * t219 + t115;
t30 = t132 * t88 - t135 * t76 + t236;
t71 = t108 * t132 - t135 * t97;
t253 = t30 * t99 + t71 * t61;
t128 = t133 ^ 2;
t187 = t134 * t219;
t168 = t128 * t187;
t210 = t129 * t255;
t72 = t73 ^ 2;
t252 = t128 * t210 + t72 * t168;
t231 = t133 * t137;
t106 = pkin(4) * t136 + pkin(5) * t231;
t52 = (-t122 * t215 - t174) * t136 + (t122 * t221 + t271) * t133;
t193 = t136 * t215;
t87 = -pkin(4) * t218 + (-t133 * t221 + t193) * pkin(5);
t89 = -t122 * t231 + t136 * t201;
t251 = t52 * t106 + t89 * t87;
t249 = t105 * t74;
t248 = t132 * t57;
t246 = t132 * t71;
t244 = t134 * t37;
t243 = t135 * t56;
t242 = t135 * t61;
t241 = t135 * t70;
t107 = -pkin(5) * t227 + t125;
t167 = t136 * t187;
t239 = 0.2e1 * pkin(5) * t167 + t107 * t221;
t237 = qJD(6) * t57;
t235 = qJD(6) * t71;
t234 = t105 * t129;
t224 = t129 + t131;
t214 = qJD(6) * t132;
t213 = qJD(6) * t133;
t211 = (t242 + t38) * pkin(6);
t118 = -0.2e1 * t187;
t159 = t122 * t118;
t197 = t129 * t218;
t209 = t122 * t197 + t136 * t159 + t90 * t221;
t204 = t73 * t232;
t198 = t136 * t219;
t194 = t135 * t216;
t191 = t132 * t213;
t189 = t132 * t212;
t188 = t133 * t216;
t186 = qJD(2) * t264;
t184 = t52 * t204 + t270 * t89;
t183 = t270 * t106 + t87 * t204;
t182 = t26 * pkin(6) + t191 * t261;
t181 = t224 * t138;
t180 = t129 * t206;
t179 = t136 * t206;
t172 = t72 * t187;
t169 = t105 ^ 2 * t187;
t166 = t129 * t188;
t165 = t128 * t189;
t163 = t139 * t186;
t158 = -pkin(6) * t105 - t136 * t73;
t17 = t132 * t45 + t135 * t66 - t237;
t157 = -t17 * t132 + t16 * t135;
t35 = pkin(6) * t68 + t137 * t73;
t50 = t158 * t134;
t18 = t132 * t50 + t135 * t35;
t19 = t132 * t35 - t135 * t50;
t156 = t132 * t19 + t135 * t18;
t31 = t132 * t76 + t135 * t88 - t235;
t155 = -t31 * t132 + t30 * t135;
t48 = t105 * t230 + t132 * t68;
t49 = t132 * t233 - t135 * t68;
t154 = t132 * t48 - t135 * t49;
t153 = t243 + t248;
t152 = t241 + t246;
t127 = t132 ^ 2;
t130 = t135 ^ 2;
t151 = (t127 + t130) * t188;
t150 = t137 * t37 - t73 * t221;
t149 = t136 * t37 - t73 * t218;
t11 = t158 * t219 + (pkin(6) * t74 - t149) * t134;
t8 = pkin(6) * t20 + t150;
t2 = t18 * qJD(6) - t135 * t11 + t132 * t8;
t3 = -t19 * qJD(6) + t132 * t11 + t135 * t8;
t147 = -t100 * t3 - t18 * t60 + t19 * t61 + t2 * t99;
t142 = t132 * t2 + t135 * t3 + (-t132 * t18 + t135 * t19) * qJD(6);
t141 = -t156 * qJD(6) - t3 * t132 + t2 * t135;
t117 = 0.2e1 * t187;
t116 = -0.2e1 * t188;
t101 = t122 * t180;
t93 = t181 * t250;
t85 = 0.2e1 * (t167 - t197) * t136;
t84 = 0.2e1 * t166 + 0.2e1 * t168;
t80 = -t133 * t198 + (t128 - t267) * t217;
t79 = -t132 * t194 + (t127 - t130) * t213;
t69 = t106 * t87;
t67 = -t104 * t136 - t105 * t231;
t63 = 0.2e1 * t104 * t75;
t47 = 0.2e1 * t100 * t60;
t46 = 0.2e1 * t99 * t61;
t40 = -0.2e1 * t74 * t234 + 0.2e1 * t169;
t39 = -t99 * t214 + t242;
t36 = t225 * qJD(4) * t105 + t134 * t240;
t34 = t89 * t52;
t25 = -t60 * t135 * t133 + (t191 - t194) * t100;
t24 = t131 * t255;
t21 = t143 * t133 + t162 * t136;
t15 = 0.2e1 * t67 * t21;
t14 = t136 * t21 - t67 * t218;
t10 = t67 * t195 + (t134 * t21 + t67 * t219) * t133;
t9 = -t68 * t198 + (-t136 * t20 + t68 * t218) * t134;
t5 = t48 * t61 + t7 * t99;
t4 = t100 * t6 + t49 * t60;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t163, 0, 0, 0.2e1 * t163, 0, 0, 0.2e1 * pkin(2) * t223, 0, 0, 0, -0.2e1 * t249, 0.2e1 * t104 * t74 - 0.2e1 * t105 * t75, 0, t63, 0, 0, 0.2e1 * t104 * t207 + 0.2e1 * t123 * t75, 0.2e1 * t105 * t207 - 0.2e1 * t123 * t74, 0, 0.2e1 * t123 * t207, -0.2e1 * t131 * t249 - 0.2e1 * t169, 0, 0, t40, 0, t63, 0, 0, 0.2e1 * (t105 * t37 - t73 * t74) * t224, 0.2e1 * t24 + 0.2e1 * t210, 0.2e1 * t68 * t20, 0, 0, t15, 0, t40, 0, 0.2e1 * (t136 * t234 + t137 * t68) * t37 + 0.2e1 * (t137 * t20 + (-t105 * t218 - t136 * t74) * t129 + (-t68 + 0.2e1 * t202) * t221) * t73, 0, -0.2e1 * t172 + 0.2e1 * t24 + 0.2e1 * (t172 + t210) * t267 + 0.2e1 * t252, 0.2e1 * t49 * t6, 0, 0, 0.2e1 * t48 * t7, 0, t15, 0, 0, -0.2e1 * t18 * t6 + 0.2e1 * t19 * t7 + 0.2e1 * t2 * t48 - 0.2e1 * t3 * t49, 0.2e1 * t166 * t72 + 0.2e1 * t18 * t3 + 0.2e1 * t19 * t2 + 0.2e1 * t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, 0, -t75, 0, 0, 0, (-t263 * t75 + t138 * t74 + (-t104 * t138 + t263 * t105) * qJD(3)) * pkin(3), 0, t36, 0, 0, -t36, 0, 0, 0, 0, 0, 0, t9, 0, 0, t10, 0, -t36, 0, (-t105 * t90 + t122 * t68) * t219 + (t105 * t51 + t122 * t20 + t68 * t206 + t74 * t90) * t134, 0, (t122 * t137 - t136 * t90) * t244 + ((t136 * t51 + t90 * t218 + t177) * t134 + (-t225 * t122 - t90 * t227) * qJD(4)) * t73 + t184, t4, 0, 0, t5, 0, t10, 0, 0, t16 * t48 - t17 * t49 - t56 * t6 + t57 * t7 + t147, t16 * t19 + t17 * t18 + t2 * t57 + t3 * t56 + t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t174, -0.2e1 * t206, 0, 0, t117, 0, 0, t118, 0, 0, 0, 0, -0.2e1 * t93, 0.2e1 * t101 + 0.2e1 * (t131 * t122 * t262 - t201 * t208) * qJD(3), t85, 0, 0, t84, 0, t118, 0, -0.2e1 * t129 * t179 + 0.2e1 * t137 * t51 + 0.2e1 * t209, 0, 0.2e1 * t122 ^ 2 * t187 - 0.2e1 * t51 * t90 + 0.2e1 * t101 + 0.2e1 * t34, t47, 0, 0, t46, 0, t84, 0, 0, -0.2e1 * t100 * t17 - 0.2e1 * t56 * t60 + 0.2e1 * t254, 0.2e1 * t16 * t57 + 0.2e1 * t17 * t56 + 0.2e1 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, 0, -t75, 0, 0, 0, 0, 0, t36, 0, 0, -t36, 0, 0, 0, 0, 0, 0, t9, 0, 0, t10, 0, -t36, 0, (-pkin(5) * t68 - t105 * t107) * t219 + (-pkin(5) * t20 - t105 * t86 + t107 * t74) * t134, 0, (-pkin(5) * t137 - t107 * t136) * t244 + ((t107 * t218 - t136 * t86) * t134 + (t225 * pkin(5) - t107 * t227) * qJD(4)) * t73 + t183, t4, 0, 0, t5, 0, t10, 0, 0, t30 * t48 - t31 * t49 - t6 * t70 + t7 * t71 + t147, t18 * t31 + t19 * t30 + t2 * t71 + t3 * t70 + t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, -t206, 0, 0, t117, 0, 0, t118, 0, 0, 0, 0, -t93, (-pkin(4) * t263 - pkin(5) * t181) * t250, t85, 0, 0, t84, 0, t118, 0, (t51 - t86) * t137 + (-pkin(5) * t218 - t179) * t129 + t209 + t239, 0, -t107 * t51 + t86 * t90 + (t159 - t180) * pkin(5) + t251, t47, 0, 0, t46, 0, t84, 0, 0, (-t56 - t70) * t60 + (-t17 - t31) * t100 + t253 + t254, t16 * t71 + t17 * t70 + t30 * t57 + t31 * t56 + t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, 0, 0, t118, 0, 0, 0, 0, 0, 0, t85, 0, 0, t84, 0, t118, 0, -0.2e1 * pkin(5) * t197 - 0.2e1 * t137 * t86 + 0.2e1 * t239, 0, 0.2e1 * pkin(5) ^ 2 * t187 + 0.2e1 * t107 * t86 + 0.2e1 * t69, t47, 0, 0, t46, 0, t84, 0, 0, -0.2e1 * t100 * t31 - 0.2e1 * t60 * t70 + 0.2e1 * t253, 0.2e1 * t30 * t71 + 0.2e1 * t31 * t70 + 0.2e1 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, 0, 0, 0, 0, t133 * t20 + t68 * t216, 0, 0, t14, 0, 0, 0, t133 * t150 + t193 * t73, 0, 0, -t49 * t194 + (t49 * t214 - t257) * t133, 0, 0, t48 * t190 + (t133 * t7 + t48 * t216) * t132, 0, t14, 0, 0, (pkin(6) * t154 + t156) * t216 + ((t132 * t7 - t257 + (t132 * t49 + t135 * t48) * qJD(6)) * pkin(6) + t142) * t133, (t133 * t142 + t156 * t216) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, 0, -t80, 0, 0, 0, t122 * t98 + t133 * t178, 0, 0, t25, 0, 0, t26, 0, -t80, 0, 0, (t248 + (t56 - t261) * t135) * t216 + ((t16 - t238) * t132 + (t17 + t237 - t266) * t135) * t133 + t182, (t153 * t216 + (t132 * t16 + t135 * t17 + (-t132 * t56 + t135 * t57) * qJD(6)) * t133) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, 0, -t80, 0, 0, 0, -t98 * pkin(5), 0, 0, t25, 0, 0, t26, 0, -t80, 0, 0, (t246 + (t70 - t261) * t135) * t216 + ((t30 - t236) * t132 + (t235 + t31 - t266) * t135) * t133 + t182, (t152 * t216 + (t132 * t30 + t135 * t31 + (-t132 * t70 + t135 * t71) * qJD(6)) * t133) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t188, 0, 0, t116, 0, 0, 0, 0, 0, 0, 0.2e1 * t130 * t188 - 0.2e1 * t165, 0, 0, 0.2e1 * t127 * t188 + 0.2e1 * t165, 0, t116, 0, 0, 0.4e1 * pkin(6) * t151, 0.2e1 * pkin(6) ^ 2 * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, 0, t134 * t149 + t198 * t73, 0, 0, t49 * t212 + t258, 0, 0, -t48 * t214 + t256, 0, 0, 0, 0, (-qJD(6) * t154 + t256 + t258) * pkin(6) + t141, t141 * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t221, 0, t51, 0, 0, t38, 0, 0, t39, 0, 0, 0, 0, (-t243 + (-t57 - t265) * t132) * qJD(6) + t157 + t211, (-qJD(6) * t153 + t157) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t221, 0, -t86, 0, 0, t38, 0, 0, t39, 0, 0, 0, 0, (-t241 + (-t71 - t265) * t132) * qJD(6) + t155 + t211, (-qJD(6) * t152 + t155) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, 0, -t79, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t189, 0, 0, -0.2e1 * t189, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t1;
