% Calculate vector of inverse dynamics joint torques for
% CloosQRC350OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6]';
% MDP [36x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see CloosQRC350OL_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-20 08:27
% Revision: 6013df02bda2c1f6ebc95d3649839f696d960e41 (2020-06-19)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = CloosQRC350OL_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(6,1),zeros(36,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350OL_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350OL_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'CloosQRC350OL_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'CloosQRC350OL_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'CloosQRC350OL_invdynJ_fixb_mdp_slag_vp: pkin has to be [6x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [36 1]), ...
  'CloosQRC350OL_invdynJ_fixb_mdp_slag_vp: MDP has to be [36x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-20 08:19:29
% EndTime: 2020-06-20 08:20:07
% DurationCPUTime: 30.59s
% Computational Cost: add. (11778->675), mult. (25654->923), div. (0->0), fcn. (20484->12), ass. (0->260)
t611 = sin(qJ(4));
t615 = cos(qJ(4));
t783 = sin(qJ(3));
t698 = t783 * qJD(3);
t699 = t783 * qJD(2);
t648 = t699 + t698;
t603 = qJD(2) + qJD(3);
t612 = sin(qJ(2));
t616 = cos(qJ(2));
t784 = cos(qJ(3));
t714 = t784 * t616;
t679 = qJD(1) * t714;
t693 = qJDD(1) * t783;
t694 = qJDD(1) * t784;
t680 = t603 * t679 + t612 * t694 + t616 * t693;
t742 = qJD(1) * t612;
t628 = t648 * t742 - t680;
t801 = qJDD(4) + t628;
t711 = t783 * t616;
t559 = t784 * t612 + t711;
t555 = t559 * qJD(1);
t728 = t555 - qJD(4);
t805 = qJD(4) * t728;
t809 = t611 * t805 + t615 * t801;
t808 = t611 * t728;
t807 = t611 * t801;
t712 = t783 * t612;
t554 = qJD(1) * t712 - t679;
t610 = sin(qJ(5));
t614 = cos(qJ(5));
t751 = t614 * t615;
t511 = t554 * t610 - t555 * t751;
t736 = qJD(5) * t610;
t707 = t611 * t736;
t802 = -t511 + t707;
t530 = -t554 * t615 - t611 * t603;
t498 = t530 * t610 + t614 * t728;
t660 = t554 * t611 - t603 * t615;
t792 = qJD(5) - t660;
t804 = t498 * t792;
t767 = t792 * t610;
t803 = t792 * t614;
t500 = t614 * t530 - t610 * t728;
t609 = sin(qJ(6));
t613 = cos(qJ(6));
t467 = t500 * t609 + t613 * t792;
t729 = qJD(6) - t498;
t800 = t467 * t729;
t468 = t500 * t613 - t609 * t792;
t799 = t468 * t729;
t798 = t660 * t728;
t524 = t603 * t559;
t496 = -qJD(1) * t524 - t612 * t693 + t616 * t694;
t727 = qJD(1) * qJD(2);
t697 = t616 * t727;
t726 = qJDD(1) * t612;
t795 = t697 + t726;
t549 = qJDD(1) * pkin(2) + pkin(3) * t795;
t453 = -pkin(4) * t628 + pkin(5) * t496 + t549;
t681 = pkin(3) * t699;
t564 = -t603 * pkin(5) + t681;
t569 = qJD(1) * pkin(2) + pkin(3) * t742;
t508 = pkin(4) * t555 - pkin(5) * t554 + t569;
t602 = qJDD(2) + qJDD(3);
t692 = t783 * qJDD(2);
t700 = t784 * qJD(3);
t546 = -t602 * pkin(5) + (qJD(2) * t700 + t692) * pkin(3);
t739 = qJD(4) * t611;
t689 = -t508 * t739 + t611 * t546;
t441 = (qJD(4) * t564 + t453) * t615 + t689;
t516 = -pkin(4) * t554 - t555 * pkin(5);
t741 = qJD(1) * t616;
t512 = pkin(3) * t741 + t516;
t797 = -t512 * t792 - t441;
t691 = t615 * t496 - t611 * t602;
t463 = qJD(4) * t660 + t691;
t796 = -qJD(5) * t728 + t463;
t753 = t613 * t614;
t558 = t609 * t615 + t611 * t753;
t755 = t611 * t613;
t747 = t558 * qJD(6) - t728 * t755 + (t751 * qJD(4) - t802) * t609;
t738 = qJD(4) * t614;
t752 = t613 * t615;
t759 = t609 * t611;
t746 = -t511 * t613 - t555 * t759 - (qJD(6) + t738) * t752 - (-t613 * t736 + (-qJD(6) * t614 - qJD(4)) * t609) * t611;
t757 = t610 * t615;
t510 = -t614 * t554 - t555 * t757;
t737 = qJD(4) * t615;
t709 = t610 * t737;
t735 = qJD(5) * t614;
t651 = -t611 * t735 - t709;
t645 = t510 - t651;
t484 = t508 * t615 + t564 * t611;
t663 = -t611 * t453 + t615 * t546;
t440 = -qJD(4) * t484 + t663;
t485 = -t508 * t611 + t564 * t615;
t722 = t784 * pkin(3);
t594 = qJDD(2) * t722;
t545 = t602 * pkin(4) - qJD(3) * t681 + t594;
t701 = t784 * qJD(2);
t682 = pkin(3) * t701;
t565 = t603 * pkin(4) + t682;
t429 = t614 * t440 - t485 * t736 + t610 * t545 + t565 * t735;
t794 = -t484 * t738 - t429;
t734 = qJD(5) * t615;
t793 = t610 * t734 + t611 * t738;
t791 = t802 * pkin(6);
t788 = -t615 * t805 + t807;
t505 = -t611 * t516 + t615 * t682;
t787 = -pkin(4) * t735 - pkin(5) * t793 + t614 * t505 - t610 * t681;
t684 = pkin(3) * t700;
t786 = -t615 * t512 + t611 * t684;
t782 = pkin(6) * t729;
t781 = pkin(6) * t614;
t780 = g(3) * t611;
t779 = g(3) * t615;
t592 = t612 * pkin(3) + pkin(2);
t778 = pkin(3) * qJD(2);
t443 = -t530 * t736 + t610 * t801 + t614 * t796;
t690 = t611 * t496 - t603 * t739;
t464 = (-qJD(4) * t554 + t602) * t615 + t690;
t462 = qJDD(5) + t464;
t732 = qJD(6) * t613;
t733 = qJD(6) * t609;
t423 = -t443 * t613 + t609 * t462 + t500 * t733 + t732 * t792;
t777 = t423 * t609;
t444 = t530 * t735 + t610 * t796 - t614 * t801;
t442 = -qJDD(6) + t444;
t776 = t442 * t609;
t775 = t442 * t613;
t774 = t443 * t610;
t773 = t462 * t610;
t772 = t462 * t614;
t771 = t463 * t611;
t770 = t484 * t610;
t560 = t714 - t712;
t517 = pkin(4) * t559 + pkin(5) * t560 + t592;
t768 = t517 * t615;
t765 = t660 * t614;
t764 = t530 * t615;
t763 = t555 * t611;
t762 = t560 * t611;
t761 = t560 * t615;
t760 = t565 * t555;
t758 = t610 * t611;
t756 = t611 * t524;
t754 = t611 * t614;
t749 = t615 * t524;
t618 = qJD(1) ^ 2;
t748 = t616 * t618;
t710 = t610 * t739;
t745 = -t610 * t505 - t614 * t681 + pkin(4) * t736 - (t614 * t734 - t710) * pkin(5);
t590 = pkin(3) * t783 - pkin(5);
t591 = t722 + pkin(4);
t744 = t590 * t751 + t610 * t591;
t605 = t616 ^ 2;
t743 = t612 ^ 2 - t605;
t740 = qJD(4) * t500;
t731 = t565 * qJD(4);
t725 = qJDD(1) * t616;
t606 = qJ(2) + qJ(3);
t599 = cos(t606);
t724 = t599 * t780;
t723 = t599 * t779;
t721 = t616 * t778;
t720 = t517 * t758;
t719 = t599 * t759;
t718 = t599 * t755;
t716 = -pkin(5) - t781;
t715 = t784 * t603;
t713 = t783 * t603;
t703 = t611 * t731;
t702 = t615 * t731;
t696 = t590 - t781;
t471 = t485 * t614 + t565 * t610;
t430 = -qJD(5) * t471 - t440 * t610 + t614 * t545;
t598 = sin(t606);
t695 = -g(3) * (-t598 * t614 - t599 * t757) + t430;
t688 = g(3) * t599 + t569 * t555;
t687 = t729 ^ 2;
t685 = t729 * t613;
t683 = pkin(3) * t698;
t678 = -t441 + t724;
t666 = t615 * t684;
t490 = (-t590 * t734 - t683) * t614 + (-qJD(5) * t591 + t590 * t739 - t666) * t610;
t677 = t512 * t758 - t490;
t676 = g(3) * t598 + t569 * t554 + t594;
t674 = -t614 * t737 - t511;
t482 = t530 * t609 - t660 * t753;
t673 = t613 * t735 + t482;
t525 = (t701 + t700) * t616 - t648 * t612;
t657 = -t560 * t739 - t749;
t449 = (-t560 * t734 - t525) * t610 + (-qJD(5) * t559 + t657) * t614;
t672 = qJD(6) * t762 - t449;
t504 = t615 * t516 + t611 * t682;
t600 = t610 * pkin(4);
t552 = t600 + (-pkin(5) * t614 - pkin(6)) * t615;
t671 = qJD(6) * t552 + t716 * t737 - t504 + t791;
t531 = -pkin(6) * t615 + t744;
t670 = qJD(6) * t531 + t696 * t737 + t786 + t791;
t562 = t716 * t611;
t597 = pkin(6) * t739;
t669 = pkin(6) * t763 + qJD(6) * t562 - t597 + t787;
t550 = t696 * t611;
t624 = -t590 * t793 + t591 * t735 - t610 * t683 + t614 * t666;
t668 = qJD(6) * t550 + (pkin(6) * t555 - t512 * t614) * t611 - t597 - t624;
t667 = -pkin(6) * t560 - t517 * t614;
t421 = pkin(6) * t443 + t441;
t422 = -pkin(6) * t462 + t429;
t664 = t609 * t421 - t613 * t422;
t515 = -t559 * t610 + t560 * t751;
t473 = pkin(6) * t515 + t768;
t489 = t667 * t611;
t662 = t473 * t613 + t489 * t609;
t661 = t473 * t609 - t489 * t613;
t542 = -t598 * t751 - t599 * t610;
t659 = -g(3) * t542 + t430 * t615 - t484 * t510;
t658 = t560 * t737 - t756;
t656 = t735 * t792 + t773;
t655 = t736 * t792 - t772;
t654 = -t729 * t732 + t776;
t653 = -t729 * t733 - t775;
t650 = pkin(6) * t500 + t484;
t649 = pkin(6) * t442;
t647 = -g(3) * (t598 * t757 - t599 * t614) + t802 * t484 + (t739 - t763) * t471;
t470 = -t485 * t610 + t565 * t614;
t646 = t470 * t728 - t484 * t735;
t644 = t609 * t650;
t643 = qJD(6) * t515 + t658;
t424 = t443 * t609 - t792 * t733 + (qJD(6) * t500 + t462) * t613;
t640 = t484 * t554 + t545 * t615 + t598 * t779 + t611 * t760 - t703;
t456 = -pkin(6) * t792 + t471;
t436 = t609 * t456 + t613 * t650;
t637 = t615 * t728;
t412 = -qJD(6) * t644 + t613 * t421 + t609 * t422 + t456 * t732;
t557 = t609 * t754 - t752;
t636 = -g(3) * (-t542 * t613 - t598 * t759) + t412 * t758 + t430 * t557 + t747 * t470 + t645 * t436;
t476 = pkin(4) * t525 - pkin(5) * t524 + t721;
t632 = -t476 * t758 + t517 * t651;
t627 = t485 * t554 - t545 * t611 - t598 * t780 + t615 * t760 - t702;
t411 = t436 * qJD(6) + t664;
t437 = t456 * t613 - t644;
t620 = -g(3) * (t542 * t609 - t598 * t755) - t411 * t758 + t430 * t558 + t437 * t645 - t746 * t470;
t619 = (-t423 * t557 + t424 * t558 - t467 * t746 + t468 * t747) * MDP(31) + (t423 * t758 - t442 * t558 - t468 * t645 - t729 * t746) * MDP(32) + (t424 * t758 + t442 * t557 + t467 * t645 - t729 * t747) * MDP(33) + (t498 * t511 + t500 * t510 + (t498 * t614 + t500 * t610) * t737 + (t774 + t444 * t614 + (-t498 * t610 + t500 * t614) * qJD(5)) * t611) * MDP(24) + (t423 * t558 + t468 * t746) * MDP(30) + (t443 * t615 + t674 * t792 + (t500 * t728 + t655) * t611) * MDP(25) + (-t444 * t615 + (t510 + t709) * t792 + (-t498 * t728 + t656) * t611) * MDP(26) + (-t442 * t758 + t645 * t729) * MDP(34) + (-t443 * t754 + (t674 + t707) * t500) * MDP(23) + ((-t463 + t798) * t615 + (-t530 * t728 + t464) * t611) * MDP(17) + (t462 * t615 + t792 * t808) * MDP(27) + (t728 * t764 - t771) * MDP(16) + (-t554 * t660 + t555 * t808 - t809) * MDP(19) + (-t530 * t554 - t555 * t637 - t788) * MDP(18) + (t555 * t603 + t496) * MDP(11) + (-t554 * t603 + t628) * MDP(12) + (t554 ^ 2 - t555 ^ 2) * MDP(10) + t602 * MDP(13) + (MDP(20) * t728 - t555 * MDP(9)) * t554;
t617 = qJD(2) ^ 2;
t561 = pkin(4) * t614 + pkin(5) * t757;
t544 = -t598 * t610 + t599 * t751;
t537 = -t590 * t757 + t591 * t614;
t514 = t614 * t559 + t560 * t757;
t488 = -t515 * t613 + t560 * t759;
t487 = t515 * t609 + t560 * t755;
t481 = t530 * t613 + t609 * t765;
t461 = pkin(6) * t765 + t485;
t459 = -pkin(6) * t530 - t484 * t614;
t450 = qJD(5) * t515 + t614 * t525 - t560 * t710 - t610 * t749;
t439 = t667 * t737 + (pkin(6) * t524 - t476 * t614 + t517 * t736) * t611;
t433 = pkin(6) * t449 + t615 * t476 - t517 * t739;
t432 = -t609 * t672 + t613 * t643;
t431 = t609 * t643 + t613 * t672;
t1 = [(-(-t530 * t611 + t615 * t660) * t524 + (-t771 - t464 * t615 + (-t611 * t660 - t764) * qJD(4)) * t560) * MDP(17) + (t496 * t592 - t524 * t569 + t549 * t560 - t554 * t721) * MDP(15) + (-t524 * t603 + t560 * t602) * MDP(11) + (t496 * t560 + t524 * t554) * MDP(9) + (t441 * t514 + t450 * t484 + (t444 * t517 + t476 * t498 + (t470 * t560 + t517 * t767) * qJD(4)) * t615 + (t476 * t767 + t430 * t560 - t470 * t524 + (-qJD(4) * t498 + t656) * t517) * t611) * MDP(28) + ((-qJD(6) * t661 + t433 * t613 + t439 * t609) * t729 - t662 * t442 - t412 * t514 - t436 * t450 - t424 * t720 - t430 * t487 - t470 * t432 + t632 * t467) * MDP(35) + (-(qJD(6) * t662 + t433 * t609 - t439 * t613) * t729 + t661 * t442 + t411 * t514 - t437 * t450 + t423 * t720 + t430 * t488 + t470 * t431 + t632 * t468) * MDP(36) + (-t424 * t514 + t432 * t729 - t442 * t487 - t450 * t467) * MDP(33) + (-t423 * t514 + t431 * t729 - t442 * t488 + t450 * t468) * MDP(32) + (t442 * t514 - t450 * t729) * MDP(34) + (t441 * t559 + t476 * t637 + t484 * t525 - t517 * t809 + t545 * t762 + t560 * t702 - t565 * t756) * MDP(21) + (-t463 * t559 + t524 * t637 - t530 * t525 + t560 * t809) * MDP(18) + (t441 * t515 + t449 * t484 + (t443 * t517 + t476 * t500 + (-t471 * t560 + t517 * t803) * qJD(4)) * t615 + (t476 * t803 - t429 * t560 + t471 * t524 + (-t655 - t740) * t517) * t611) * MDP(29) + 0.2e1 * ((-t612 * t727 + t725) * MDP(8) + t795 * MDP(7)) * pkin(2) + (-t525 * t603 - t559 * t602) * MDP(12) + (qJDD(2) * t616 - t612 * t617) * MDP(4) + (-qJDD(2) * t612 - t616 * t617) * MDP(5) + (t525 * t569 + t549 * t559 + t555 * t721 - t592 * t628) * MDP(14) + (-t496 * t559 + t524 * t555 + t525 * t554 + t560 * t628) * MDP(10) + (-t444 * t762 - t450 * t792 - t462 * t514 - t498 * t658) * MDP(26) + (t462 * t762 + t658 * t792) * MDP(27) + (t443 * t762 + t449 * t792 + t462 * t515 + t500 * t658) * MDP(25) + (-t443 * t514 - t444 * t515 - t449 * t498 - t450 * t500) * MDP(24) + (t443 * t515 + t449 * t500) * MDP(23) + (t423 * t487 + t424 * t488 + t431 * t467 - t432 * t468) * MDP(31) + (t423 * t488 - t431 * t468) * MDP(30) + (-(qJDD(4) - t680) * t559 - qJD(4) * t525 + (t525 * t711 + (t525 * t784 - t559 * t648) * t612) * qJD(1)) * MDP(20) + qJDD(1) * MDP(1) + (t464 * t559 - t524 * t808 - t525 * t660 - t560 * t788) * MDP(19) + (t440 * t559 - t476 * t808 + t485 * t525 + t517 * t807 + t545 * t761 - t560 * t703 - t565 * t749 - t768 * t805) * MDP(22) + (qJDD(1) * t605 - 0.2e1 * t612 * t697) * MDP(2) + 0.2e1 * (-t612 * t725 + t727 * t743) * MDP(3) + (t463 * t761 + t530 * t657) * MDP(16); ((-t531 * t613 + t550 * t609) * t442 + t537 * t423 - (t609 * t670 + t613 * t668) * t729 + t677 * t468 + t620) * MDP(36) + (t537 * t462 + t490 * t792 + (-t498 * t512 + (t498 * t590 - t770) * qJD(4)) * t615 + (t444 * t590 + t498 * t684 + t610 * t797 + t646) * t611 + t659) * MDP(28) + ((-t555 * t741 + t784 * t602 + (-t699 - t713) * qJD(3)) * pkin(3) + t676) * MDP(14) + ((t554 * t741 - t692 - t783 * t602 + (-t701 - t715) * qJD(3)) * pkin(3) + t688) * MDP(15) + (t591 * t463 + t512 * t808 - t530 * t683 - t590 * t809 + t666 * t728 + t627) * MDP(22) + (t591 * t464 - t512 * t637 - t590 * t788 + t660 * t683 + t684 * t808 + t640) * MDP(21) + t619 + (-pkin(2) * t748 + g(3) * t612) * MDP(7) + (pkin(2) * t612 * t618 + g(3) * t616) * MDP(8) + (-(t531 * t609 + t550 * t613) * t442 - t537 * t424 - (t609 * t668 - t613 * t670) * t729 + t677 * t467 + t636) * MDP(35) + qJDD(2) * MDP(6) + t612 * MDP(2) * t748 + MDP(4) * t725 - MDP(5) * t726 - t743 * t618 * MDP(3) + (t611 * t590 * t443 - t462 * t744 - t792 * t624 + t647 + (t590 * t737 + t786) * t500 + t797 * t754 + t794 * t615) * MDP(29); ((-t698 + t713) * t778 + t676) * MDP(14) + (-t600 * t462 - t504 * t500 + (-pkin(5) * t443 - t441 * t614) * t611 + t787 * t792 + ((-t740 + t772) * pkin(5) + t794) * t615 + t647) * MDP(29) + ((-t692 + (-t700 + t715) * qJD(2)) * pkin(3) + t688) * MDP(15) + (t462 * t561 - t498 * t504 - t745 * t792 + (-pkin(5) * t498 - t770) * t737 + (-pkin(5) * t444 - t441 * t610 + t646) * t611 + t659) * MDP(28) + (pkin(4) * t463 + pkin(5) * t809 - t505 * t728 + t530 * t681 + t627) * MDP(22) + (pkin(4) * t464 + pkin(5) * t788 - t504 * t728 - t660 * t681 + t640) * MDP(21) + ((-t552 * t613 + t562 * t609) * t442 + t561 * t423 - (t609 * t671 + t613 * t669) * t729 + t745 * t468 + t620) * MDP(36) + t619 + (-(t552 * t609 + t562 * t613) * t442 - t561 * t424 - (t609 * t669 - t613 * t671) * t729 + t745 * t467 + t636) * MDP(35); -t660 ^ 2 * MDP(17) + (t554 * t739 - t603 * t737 + t691 + t798) * MDP(18) + (t554 * t737 - t615 * t602 - t690) * MDP(19) + t801 * MDP(20) + (-t615 * t453 - t485 * t728 - t564 * t737 - t689 + t724) * MDP(21) + (t484 * t728 + t508 * t737 + t564 * t739 - t565 * t660 - t663 + t723) * MDP(22) + (t500 * t803 + t774) * MDP(23) + ((t443 - t804) * t614 + (-t500 * t792 - t444) * t610) * MDP(24) + (t792 * t803 + t773) * MDP(25) + (-t767 * t792 + t772) * MDP(26) + (-t485 * t498 + t614 * t678) * MDP(28) + (-t485 * t500 - t610 * t678) * MDP(29) + (-t423 * t610 * t613 + (-t610 * t733 + t673) * t468) * MDP(30) + (-t467 * t482 + t468 * t481 + (-t467 * t613 - t468 * t609) * t735 + (t777 - t424 * t613 + (t467 * t609 - t468 * t613) * qJD(6)) * t610) * MDP(31) + (t423 * t614 - t673 * t729 + (t468 * t792 - t653) * t610) * MDP(32) + (t424 * t614 - (-t609 * t735 + t481) * t729 + (-t467 * t792 - t654) * t610) * MDP(33) + (-t442 * t614 - t729 * t767) * MDP(34) + (-(t459 * t609 + t461 * t613) * t729 + t470 * t481 - t609 * t723 + (-g(3) * t718 + t412 + (-t470 * t609 + t613 * t782) * qJD(5)) * t614 + (pkin(6) * t653 - t609 * t430 - t436 * t792 + t484 * t467 - t470 * t732) * t610) * MDP(35) + ((-t459 * t613 + t461 * t609) * t729 - t470 * t482 - t613 * t723 + (g(3) * t719 - t411 + (-t470 * t613 - t609 * t782) * qJD(5)) * t614 + (pkin(6) * t654 - t430 * t613 - t437 * t792 + t484 * t468 + t470 * t733) * t610) * MDP(36) + (-MDP(16) * t660 + MDP(17) * t530 - MDP(19) * t728 - t565 * MDP(21) - t500 * MDP(25) + t498 * MDP(26) - MDP(27) * t792 - t470 * MDP(28) + t471 * MDP(29)) * t530; -t498 ^ 2 * MDP(24) + (t443 + t804) * MDP(25) - t444 * MDP(26) + t462 * MDP(27) + (t471 * t792 + t695) * MDP(28) + (g(3) * t544 + t470 * t792 + t484 * t498 - t429) * MDP(29) + (-t468 * t685 + t777) * MDP(30) + ((t423 + t800) * t613 + (t424 + t799) * t609) * MDP(31) + (t685 * t729 - t776) * MDP(32) + (-t609 * t687 - t775) * MDP(33) + (-t471 * t467 + (-pkin(6) * t687 - t695) * t613 + t649 * t609) * MDP(35) + (-t471 * t468 + t649 * t613 + (t729 * t782 + t695) * t609) * MDP(36) + (MDP(23) * t498 + t500 * MDP(24) + MDP(26) * t792 - t484 * MDP(28) - t468 * MDP(32) + t467 * MDP(33) + MDP(34) * t729 + t436 * MDP(35) + t437 * MDP(36)) * t500; t468 * t467 * MDP(30) + (-t467 ^ 2 + t468 ^ 2) * MDP(31) + (t423 - t800) * MDP(32) + (t424 - t799) * MDP(33) - t442 * MDP(34) + (-t437 * t729 + t470 * t468 - g(3) * (t544 * t609 + t718) + t412) * MDP(35) + (-t470 * t467 - g(3) * (t544 * t613 - t719) - t664 + (t729 - qJD(6)) * t436) * MDP(36);];
tau = t1;
