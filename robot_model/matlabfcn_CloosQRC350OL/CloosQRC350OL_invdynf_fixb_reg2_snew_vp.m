% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% CloosQRC350OL
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-23 22:05
% Revision: 9ee7546dde8543a81bf40e37a1400ef9d9e232c4 (2020-06-23)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = CloosQRC350OL_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350OL_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350OL_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'CloosQRC350OL_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'CloosQRC350OL_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'CloosQRC350OL_invdynf_fixb_reg2_snew_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-23 22:04:37
% EndTime: 2020-06-23 22:04:47
% DurationCPUTime: 10.29s
% Computational Cost: add. (38180->191), mult. (81052->300), div. (0->0), fcn. (58608->12), ass. (0->167)
t1269 = sin(qJ(3));
t1270 = sin(qJ(2));
t1275 = cos(qJ(3));
t1276 = cos(qJ(2));
t1240 = (-t1269 * t1276 - t1270 * t1275) * qJD(1);
t1297 = qJD(1) * t1276;
t1284 = qJD(2) * t1297;
t1288 = t1270 * qJDD(1);
t1247 = -t1284 - t1288;
t1286 = t1276 * qJDD(1);
t1298 = qJD(1) * t1270;
t1248 = -qJD(2) * t1298 + t1286;
t1214 = t1240 * qJD(3) + t1269 * t1247 + t1275 * t1248;
t1262 = qJD(2) + qJD(3);
t1295 = t1262 * t1240;
t1204 = t1214 + t1295;
t1300 = t1240 ^ 2;
t1242 = -t1269 * t1298 + t1275 * t1297;
t1299 = t1242 ^ 2;
t1260 = t1262 ^ 2;
t1296 = t1242 * t1240;
t1283 = -t1275 * t1247 + t1269 * t1248;
t1202 = (qJD(3) + t1262) * t1242 + t1283;
t1265 = qJDD(1) * pkin(2);
t1233 = t1265 + (-t1247 + t1284) * pkin(3);
t1182 = t1202 * pkin(4) + t1204 * pkin(5) + t1233;
t1279 = qJD(1) ^ 2;
t1292 = t1276 * t1279;
t1250 = -pkin(2) * t1292 + t1270 * g(3);
t1255 = -t1270 * t1292 + qJDD(2);
t1235 = t1255 * pkin(3) + t1250;
t1249 = -t1270 * t1279 * pkin(2) - t1276 * g(3);
t1263 = t1270 ^ 2;
t1256 = -qJD(2) ^ 2 - t1263 * t1279;
t1237 = t1256 * pkin(3) + t1249;
t1216 = t1269 * t1235 + t1275 * t1237;
t1221 = -t1240 * pkin(4) + t1242 * pkin(5);
t1261 = qJDD(2) + qJDD(3);
t1192 = -t1260 * pkin(4) - t1261 * pkin(5) + t1240 * t1221 + t1216;
t1268 = sin(qJ(4));
t1274 = cos(qJ(4));
t1168 = t1274 * t1182 + t1268 * t1192;
t1294 = t1268 * t1168;
t1293 = t1274 * t1168;
t1239 = qJD(4) + t1240;
t1291 = -qJD(4) + t1239;
t1169 = -t1268 * t1182 + t1274 * t1192;
t1215 = t1275 * t1235 - t1269 * t1237;
t1191 = t1261 * pkin(4) - t1260 * pkin(5) - t1242 * t1221 + t1215;
t1267 = sin(qJ(5));
t1273 = cos(qJ(5));
t1162 = t1273 * t1169 + t1267 * t1191;
t1227 = t1274 * t1242 - t1268 * t1262;
t1212 = t1273 * t1227 + t1267 * t1239;
t1226 = -t1268 * t1242 - t1274 * t1262;
t1225 = qJD(5) - t1226;
t1199 = -t1212 ^ 2 - t1225 ^ 2;
t1289 = -t1276 ^ 2 - t1263;
t1271 = sin(qJ(1));
t1287 = t1271 * qJDD(1);
t1277 = cos(qJ(1));
t1285 = t1277 * qJDD(1);
t1161 = -t1267 * t1169 + t1273 * t1191;
t1280 = -t1268 * t1214 - t1274 * t1261;
t1195 = t1227 * qJD(4) + qJDD(5) - t1280;
t1211 = -t1267 * t1227 + t1273 * t1239;
t1178 = t1211 * t1212 - t1195;
t1281 = -t1274 * t1214 + t1268 * t1261;
t1282 = t1273 * (t1226 * qJD(4) - t1281) + t1267 * (-t1242 * qJD(3) + qJDD(4) - t1283);
t1272 = cos(qJ(6));
t1266 = sin(qJ(6));
t1254 = t1289 * t1279;
t1253 = -t1277 * t1279 - t1287;
t1252 = -t1271 * t1279 + t1285;
t1251 = t1289 * qJDD(1);
t1246 = 0.2e1 * t1284 + t1288;
t1232 = -t1260 - t1299;
t1231 = -t1270 * t1255 + t1276 * t1256;
t1230 = t1276 * t1255 + t1270 * t1256;
t1223 = t1276 * t1249 - t1270 * t1250;
t1222 = t1270 * t1249 + t1276 * t1250;
t1220 = -t1261 + t1296;
t1219 = t1261 + t1296;
t1218 = -t1260 - t1300;
t1217 = -t1299 - t1300;
t1208 = -t1226 ^ 2 - t1227 ^ 2;
t1207 = t1275 * t1220 - t1269 * t1232;
t1206 = t1269 * t1220 + t1275 * t1232;
t1205 = -t1214 + t1295;
t1203 = (-qJD(3) + t1262) * t1242 - t1283;
t1201 = t1275 * t1218 - t1269 * t1219;
t1200 = t1269 * t1218 + t1275 * t1219;
t1198 = -t1272 * t1212 + t1266 * t1225;
t1197 = t1266 * t1212 + t1272 * t1225;
t1194 = -t1269 * t1215 + t1275 * t1216;
t1193 = t1275 * t1215 + t1269 * t1216;
t1188 = t1291 * t1226 + t1281;
t1187 = t1291 * t1227 + t1280;
t1186 = -t1270 * t1206 + t1276 * t1207;
t1185 = t1276 * t1206 + t1270 * t1207;
t1184 = t1275 * t1203 - t1269 * t1205;
t1183 = t1269 * t1203 + t1275 * t1205;
t1181 = -t1270 * t1200 + t1276 * t1201;
t1180 = t1276 * t1200 + t1270 * t1201;
t1179 = -t1197 ^ 2 - t1198 ^ 2;
t1177 = t1211 * qJD(5) + t1282;
t1176 = -t1270 * t1193 + t1276 * t1194;
t1175 = t1276 * t1193 + t1270 * t1194;
t1174 = t1274 * t1187 - t1268 * t1188;
t1173 = -t1268 * t1187 - t1274 * t1188;
t1172 = (qJD(5) + t1225) * t1211 + t1282;
t1171 = t1273 * t1178 - t1267 * t1199;
t1170 = t1267 * t1178 + t1273 * t1199;
t1166 = -t1270 * t1183 + t1276 * t1184;
t1165 = t1276 * t1183 + t1270 * t1184;
t1164 = t1275 * t1174 - t1269 * t1208;
t1163 = t1269 * t1174 + t1275 * t1208;
t1160 = t1199 * pkin(6) + t1161;
t1159 = t1272 * t1177 - t1266 * t1195 + t1197 * t1211;
t1158 = t1266 * t1177 + t1272 * t1195 + t1198 * t1211;
t1157 = (t1225 * t1211 + t1177) * pkin(6) + t1168;
t1156 = t1274 * t1171 + t1268 * t1172;
t1155 = -t1268 * t1171 + t1274 * t1172;
t1154 = t1274 * t1169 + t1294;
t1153 = -t1268 * t1169 + t1293;
t1152 = t1178 * pkin(6) + t1162;
t1151 = -t1270 * t1163 + t1276 * t1164;
t1150 = t1276 * t1163 + t1270 * t1164;
t1149 = t1275 * t1154 - t1269 * t1191;
t1148 = t1269 * t1154 + t1275 * t1191;
t1147 = -t1267 * t1161 + t1273 * t1162;
t1146 = t1273 * t1161 + t1267 * t1162;
t1145 = t1275 * t1156 - t1269 * t1170;
t1144 = t1269 * t1156 + t1275 * t1170;
t1143 = -t1272 * t1158 + t1266 * t1159;
t1142 = t1266 * t1158 + t1272 * t1159;
t1141 = t1274 * t1147 + t1294;
t1140 = -t1268 * t1147 + t1293;
t1139 = -t1272 * t1152 + t1266 * t1157;
t1138 = t1266 * t1152 + t1272 * t1157;
t1137 = t1273 * t1143 - t1267 * t1179;
t1136 = t1267 * t1143 + t1273 * t1179;
t1135 = -t1270 * t1148 + t1276 * t1149;
t1134 = t1276 * t1148 + t1270 * t1149;
t1133 = -t1270 * t1144 + t1276 * t1145;
t1132 = t1276 * t1144 + t1270 * t1145;
t1131 = t1275 * t1141 - t1269 * t1146;
t1130 = t1269 * t1141 + t1275 * t1146;
t1129 = t1274 * t1137 + t1268 * t1142;
t1128 = -t1268 * t1137 + t1274 * t1142;
t1127 = t1266 * t1138 - t1272 * t1139;
t1126 = t1272 * t1138 + t1266 * t1139;
t1125 = t1273 * t1127 - t1267 * t1160;
t1124 = t1267 * t1127 + t1273 * t1160;
t1123 = t1275 * t1129 - t1269 * t1136;
t1122 = t1269 * t1129 + t1275 * t1136;
t1121 = -t1270 * t1130 + t1276 * t1131;
t1120 = t1276 * t1130 + t1270 * t1131;
t1119 = t1274 * t1125 + t1268 * t1126;
t1118 = -t1268 * t1125 + t1274 * t1126;
t1117 = -t1270 * t1122 + t1276 * t1123;
t1116 = t1276 * t1122 + t1270 * t1123;
t1115 = t1275 * t1119 - t1269 * t1124;
t1114 = t1269 * t1119 + t1275 * t1124;
t1113 = -t1270 * t1114 + t1276 * t1115;
t1112 = t1276 * t1114 + t1270 * t1115;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1253, -t1252, 0, 0, 0, 0, 0, 0, 0, 0, t1277 * t1230 - t1271 * t1246, 0, t1277 * t1251 - t1271 * t1254, -pkin(2) * t1287 + t1277 * t1222, 0, 0, 0, 0, 0, 0, t1277 * t1180 - t1271 * t1202, t1277 * t1185 - t1271 * t1204, t1277 * t1165 - t1271 * t1217, t1277 * t1175 - t1271 * t1233, 0, 0, 0, 0, 0, 0, 0, 0, t1277 * t1150 - t1271 * t1173, t1277 * t1134 - t1271 * t1153, 0, 0, 0, 0, 0, 0, 0, t1277 * t1132 - t1271 * t1155, 0, t1277 * t1120 - t1271 * t1140, 0, 0, 0, 0, 0, 0, 0, 0, t1277 * t1116 - t1271 * t1128, t1277 * t1112 - t1271 * t1118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1252, t1253, 0, 0, 0, 0, 0, 0, 0, 0, t1271 * t1230 + t1277 * t1246, 0, t1271 * t1251 + t1277 * t1254, pkin(2) * t1285 + t1271 * t1222, 0, 0, 0, 0, 0, 0, t1271 * t1180 + t1277 * t1202, t1271 * t1185 + t1277 * t1204, t1271 * t1165 + t1277 * t1217, t1271 * t1175 + t1277 * t1233, 0, 0, 0, 0, 0, 0, 0, 0, t1271 * t1150 + t1277 * t1173, t1271 * t1134 + t1277 * t1153, 0, 0, 0, 0, 0, 0, 0, t1271 * t1132 + t1277 * t1155, 0, t1271 * t1120 + t1277 * t1140, 0, 0, 0, 0, 0, 0, 0, 0, t1271 * t1116 + t1277 * t1128, t1271 * t1112 + t1277 * t1118; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1231, 0, 0, t1223, 0, 0, 0, 0, 0, 0, t1181, t1186, t1166, t1176, 0, 0, 0, 0, 0, 0, 0, 0, t1151, t1135, 0, 0, 0, 0, 0, 0, 0, t1133, 0, t1121, 0, 0, 0, 0, 0, 0, 0, 0, t1117, t1113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1279, -qJDD(1), 0, 0, 0, 0, 0, 0, 0, 0, t1230, 0, t1251, t1222, 0, 0, 0, 0, 0, 0, t1180, t1185, t1165, t1175, 0, 0, 0, 0, 0, 0, 0, 0, t1150, t1134, 0, 0, 0, 0, 0, 0, 0, t1132, 0, t1120, 0, 0, 0, 0, 0, 0, 0, 0, t1116, t1112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1279, 0, 0, 0, 0, 0, 0, 0, 0, t1246, 0, t1254, t1265, 0, 0, 0, 0, 0, 0, t1202, t1204, t1217, t1233, 0, 0, 0, 0, 0, 0, 0, 0, t1173, t1153, 0, 0, 0, 0, 0, 0, 0, t1155, 0, t1140, 0, 0, 0, 0, 0, 0, 0, 0, t1128, t1118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1231, 0, 0, t1223, 0, 0, 0, 0, 0, 0, t1181, t1186, t1166, t1176, 0, 0, 0, 0, 0, 0, 0, 0, t1151, t1135, 0, 0, 0, 0, 0, 0, 0, t1133, 0, t1121, 0, 0, 0, 0, 0, 0, 0, 0, t1117, t1113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1256, 0, -t1288, t1249, 0, 0, 0, 0, 0, 0, t1201, t1207, t1184, t1194, 0, 0, 0, 0, 0, 0, 0, 0, t1164, t1149, 0, 0, 0, 0, 0, 0, 0, t1145, 0, t1131, 0, 0, 0, 0, 0, 0, 0, 0, t1123, t1115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1255, 0, -t1286, t1250, 0, 0, 0, 0, 0, 0, t1200, t1206, t1183, t1193, 0, 0, 0, 0, 0, 0, 0, 0, t1163, t1148, 0, 0, 0, 0, 0, 0, 0, t1144, 0, t1130, 0, 0, 0, 0, 0, 0, 0, 0, t1122, t1114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1246, 0, t1254, t1265, 0, 0, 0, 0, 0, 0, t1202, t1204, t1217, t1233, 0, 0, 0, 0, 0, 0, 0, 0, t1173, t1153, 0, 0, 0, 0, 0, 0, 0, t1155, 0, t1140, 0, 0, 0, 0, 0, 0, 0, 0, t1128, t1118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1218, t1220, t1203, t1216, 0, 0, 0, 0, 0, 0, 0, 0, t1174, t1154, 0, 0, 0, 0, 0, 0, 0, t1156, 0, t1141, 0, 0, 0, 0, 0, 0, 0, 0, t1129, t1119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1219, t1232, t1205, t1215, 0, 0, 0, 0, 0, 0, 0, 0, t1208, t1191, 0, 0, 0, 0, 0, 0, 0, t1170, 0, t1146, 0, 0, 0, 0, 0, 0, 0, 0, t1136, t1124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1202, t1204, t1217, t1233, 0, 0, 0, 0, 0, 0, 0, 0, t1173, t1153, 0, 0, 0, 0, 0, 0, 0, t1155, 0, t1140, 0, 0, 0, 0, 0, 0, 0, 0, t1128, t1118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1187, t1169, 0, 0, 0, 0, 0, 0, 0, t1171, 0, t1147, 0, 0, 0, 0, 0, 0, 0, 0, t1137, t1125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1188, -t1168, 0, 0, 0, 0, 0, 0, 0, -t1172, 0, -t1168, 0, 0, 0, 0, 0, 0, 0, 0, -t1142, -t1126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1208, t1191, 0, 0, 0, 0, 0, 0, 0, t1170, 0, t1146, 0, 0, 0, 0, 0, 0, 0, 0, t1136, t1124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1178, 0, t1162, 0, 0, 0, 0, 0, 0, 0, 0, t1143, t1127; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1199, 0, t1161, 0, 0, 0, 0, 0, 0, 0, 0, t1179, t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1172, 0, t1168, 0, 0, 0, 0, 0, 0, 0, 0, t1142, t1126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1158, t1139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1159, t1138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1179, t1160;];
f_new_reg = t1;
