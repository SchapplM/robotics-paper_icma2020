% Calculate minimal parameter regressor of coriolis matrix for
% CloosQRC350OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x19]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-23 22:05
% Revision: 9ee7546dde8543a81bf40e37a1400ef9d9e232c4 (2020-06-23)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = CloosQRC350OL_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350OL_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350OL_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'CloosQRC350OL_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-23 22:03:22
% EndTime: 2020-06-23 22:03:34
% DurationCPUTime: 8.98s
% Computational Cost: add. (3415->362), mult. (9075->556), div. (0->0), fcn. (10311->10), ass. (0->316)
t349 = qJD(2) + qJD(3);
t251 = sin(qJ(5));
t245 = t251 ^ 2;
t252 = sin(qJ(4));
t459 = t349 * t252;
t465 = t245 * t459;
t250 = sin(qJ(6));
t257 = cos(qJ(4));
t255 = cos(qJ(6));
t256 = cos(qJ(5));
t392 = t255 * t256;
t203 = t250 * t257 + t252 * t392;
t460 = t349 * t203;
t429 = cos(qJ(3));
t430 = cos(qJ(2));
t240 = t429 * t430;
t253 = sin(qJ(3));
t254 = sin(qJ(2));
t393 = t253 * t254;
t211 = -t240 + t393;
t387 = t257 * t251;
t212 = t253 * t430 + t429 * t254;
t390 = t256 * t212;
t144 = t211 * t387 - t390;
t418 = t144 * t251;
t389 = t256 * t257;
t340 = t211 * t389;
t398 = t251 * t212;
t146 = -t340 - t398;
t442 = -t146 / 0.2e1;
t65 = t256 * t442 - t418 / 0.2e1;
t464 = t65 * qJD(5);
t249 = t257 ^ 2;
t246 = t252 ^ 2;
t437 = -t246 / 0.2e1;
t149 = (t437 + t249 / 0.2e1) * t211;
t209 = t211 ^ 2;
t376 = qJD(1) * t252;
t455 = t257 * t209 * t376 - t349 * t149;
t248 = t256 ^ 2;
t207 = (t245 / 0.2e1 - t248 / 0.2e1) * t252;
t431 = t256 / 0.2e1;
t273 = (t144 * t431 + t251 * t442) * t252;
t402 = t246 * t251;
t44 = -t349 * t256 * t402 - t273 * qJD(1) + t207 * qJD(4);
t352 = t252 * qJD(3);
t353 = t252 * qJD(2);
t90 = t149 * qJD(1) + (t352 + t353) * t257;
t350 = t256 * qJD(4);
t234 = t251 * t350;
t454 = -t65 * qJD(1) + t349 * t207 + t234;
t366 = t144 * qJD(1);
t446 = t65 * qJD(4) - t146 * t366 + t273 * t349;
t395 = t252 * t255;
t279 = t250 * t146 - t211 * t395;
t463 = t279 / 0.2e1;
t309 = qJD(2) / 0.2e1 + qJD(3) / 0.2e1;
t462 = t257 * t309;
t394 = t252 * t256;
t32 = -qJD(6) * t394 / 0.2e1 + t44;
t351 = t252 * qJD(5);
t310 = t351 / 0.2e1;
t84 = t310 + t90;
t456 = t273 * qJD(5);
t354 = t251 * qJD(6);
t453 = t354 / 0.2e1 + t454;
t407 = t211 * t257;
t325 = t407 / 0.2e1;
t452 = qJD(5) * t325 - t455;
t278 = t250 * t394 - t255 * t257;
t440 = t203 / 0.2e1;
t401 = t250 * t252;
t82 = -t255 * t146 - t211 * t401;
t443 = -t82 / 0.2e1;
t26 = t278 * t443 + t279 * t440;
t436 = -t250 / 0.2e1;
t33 = (t255 * t463 + t82 * t436) * t251;
t424 = t82 * t255;
t38 = t250 * t463 + t424 / 0.2e1;
t423 = qJD(1) * t82;
t451 = -t33 * qJD(4) + t38 * qJD(5) + t26 * t349 + t279 * t423;
t247 = t255 ^ 2;
t206 = (t250 ^ 2 / 0.2e1 - t247 / 0.2e1) * t251;
t400 = t250 * t255;
t432 = -t255 / 0.2e1;
t99 = (t203 * t436 + t278 * t432) * t251;
t450 = t245 * qJD(4) * t400 + t33 * qJD(1) - t206 * qJD(5) + t349 * t99;
t321 = -t392 / 0.2e1;
t268 = t247 * t418 / 0.2e1 + t82 * t321;
t117 = t203 * t211;
t422 = t117 * t250;
t24 = t422 / 0.2e1 + t268;
t433 = t252 / 0.2e1;
t265 = t247 * t245 * t433 + t203 * t321;
t204 = t255 * t389 - t401;
t408 = t204 * t250;
t93 = -t408 / 0.2e1 + t265;
t449 = t24 * qJD(1) + t349 * t93;
t409 = t203 * t255;
t124 = t278 * t436 + t409 / 0.2e1;
t373 = qJD(5) * t250;
t330 = t255 * t373;
t448 = t38 * qJD(1) + t206 * qJD(4) + t124 * t349 + t330;
t9 = t26 * qJD(1) - t99 * qJD(4) + t124 * qJD(5) - t278 * t460;
t318 = -t389 / 0.2e1;
t322 = -t398 / 0.2e1;
t130 = t211 * t318 + t322;
t447 = -t130 * qJD(6) + t446;
t445 = -pkin(5) / 0.2e1;
t444 = pkin(5) / 0.2e1;
t441 = t146 / 0.2e1;
t347 = pkin(5) * t389;
t216 = t251 * pkin(4) - t347;
t439 = -t216 / 0.2e1;
t428 = t253 * pkin(3);
t241 = -pkin(5) + t428;
t438 = t241 / 0.2e1;
t435 = t251 / 0.2e1;
t434 = -t252 / 0.2e1;
t427 = -qJD(5) / 0.2e1;
t426 = qJD(6) / 0.2e1;
t243 = t254 * pkin(3) + pkin(2);
t399 = t251 * t211;
t145 = -t212 * t389 + t399;
t81 = -t255 * t145 - t212 * t401;
t425 = t81 * t250;
t157 = -t211 * pkin(4) - t212 * pkin(5);
t346 = t430 * pkin(3);
t150 = t346 + t157;
t148 = t212 * pkin(4) - t211 * pkin(5) + t243;
t274 = (t145 * t257 - t246 * t390) * t148;
t391 = t256 * t211;
t415 = t146 * t257;
t280 = -t246 * t391 + t415;
t13 = t280 * t150 + t274;
t421 = t13 * qJD(1);
t14 = t280 * t157 + t274;
t420 = t14 * qJD(1);
t143 = t212 * t387 + t391;
t419 = t143 * t256;
t417 = t145 * t241;
t416 = t145 * t251;
t281 = -t117 * t440 + t82 * t204 / 0.2e1;
t299 = t81 * t251 * t432;
t17 = t299 - t281;
t414 = t17 * qJD(1);
t345 = t429 * pkin(3);
t242 = t345 + pkin(4);
t172 = t241 * t387 - t256 * t242;
t413 = t172 * t211;
t412 = t172 * t257;
t388 = t257 * t241;
t339 = t256 * t388;
t173 = t251 * t242 + t339;
t411 = t173 * t212;
t397 = t251 * t252;
t264 = (-t144 * t203 / 0.2e1 + t397 * t443) * t255;
t20 = -t425 / 0.2e1 + t264;
t410 = t20 * qJD(1);
t215 = t256 * pkin(4) + pkin(5) * t387;
t406 = t215 * t211;
t405 = t215 * t257;
t403 = t241 * t144;
t396 = t251 * t253;
t34 = (-t146 - t340) * t252 * t148;
t386 = t34 * qJD(1);
t36 = (-t144 * t257 - t246 * t399) * t148;
t385 = t36 * qJD(1);
t317 = t387 / 0.2e1;
t323 = t211 * t437;
t267 = t144 * t317 + t245 * t323;
t51 = -t419 / 0.2e1 + t267;
t384 = t51 * qJD(1);
t266 = t146 * t318 + t248 * t323;
t53 = -t416 / 0.2e1 + t266;
t383 = t53 * qJD(1);
t381 = qJD(4) * t317 + t256 * t310;
t379 = qJD(1) * t146;
t378 = qJD(1) * t211;
t377 = qJD(1) * t243;
t375 = qJD(3) * t243;
t374 = qJD(4) * t252;
t372 = qJD(5) * t256;
t119 = t212 ^ 2 - t209;
t371 = t119 * qJD(1);
t129 = t257 * t322 - t391 / 0.2e1;
t370 = t129 * qJD(1);
t369 = t129 * qJD(6);
t131 = -t243 * t211 + t212 * t346;
t368 = t131 * qJD(1);
t132 = -t211 * t346 - t243 * t212;
t367 = t132 * qJD(1);
t365 = t144 * qJD(5);
t361 = t149 * qJD(4);
t357 = t207 * qJD(5);
t208 = t393 / 0.2e1 - t240 / 0.2e1;
t356 = t208 * qJD(1);
t355 = t251 * qJD(4);
t348 = pkin(5) * t402;
t344 = pkin(5) * t434;
t343 = t211 * t397;
t342 = t252 * t391;
t338 = t256 * t429;
t337 = t252 * t355;
t336 = t255 * t355;
t161 = t212 * t378;
t334 = t211 * t377;
t333 = t212 * t377;
t332 = t246 * t378;
t331 = qJD(6) * t400;
t329 = t251 * t372;
t328 = t251 * t351;
t237 = t257 * t374;
t327 = t252 * t350;
t326 = -t407 / 0.2e1;
t324 = t216 * t433;
t320 = t150 * t431;
t319 = t157 * t431;
t316 = qJD(1) * t430;
t315 = qJD(2) * t430;
t314 = t429 * qJD(2);
t313 = t429 * qJD(3);
t312 = -t376 / 0.2e1;
t311 = t376 / 0.2e1;
t155 = t349 * t212;
t305 = t349 * t257;
t154 = t349 * t211;
t302 = pkin(2) * t316;
t301 = t252 * t339;
t300 = t345 / 0.2e1;
t298 = t211 * t337;
t297 = t246 * t329;
t296 = t209 * t237;
t295 = t254 * t316;
t294 = -t338 / 0.2e1;
t293 = t350 + t426;
t291 = t212 * t154;
t290 = t251 * t459;
t289 = t309 * t252;
t288 = t251 * t300;
t165 = t173 * t252;
t118 = -t165 + t301;
t40 = (t150 * t435 - t173 * t211 / 0.2e1 + t241 * t442) * t257;
t285 = -t40 * qJD(1) - t118 * qJD(2);
t217 = t241 * t402;
t128 = -t217 - t412;
t39 = (t320 + t413 / 0.2e1 - t403 / 0.2e1) * t252;
t284 = t39 * qJD(1) + t128 * qJD(2);
t188 = (t257 * t338 - t396) * pkin(3);
t269 = t188 * t211 / 0.2e1 + t146 * t300;
t15 = ((t173 / 0.2e1 + t439) * t212 + (t438 + t444) * t145 + t269) * t252;
t153 = t246 * pkin(3) * t338 + t188 * t257;
t283 = -t15 * qJD(1) + t153 * qJD(2);
t282 = -t130 * qJD(1) - t355 / 0.2e1;
t101 = -t208 * qJD(4) + t161;
t275 = t256 * t351 + t257 * t355;
t164 = (t216 + t347) * t252;
t47 = (pkin(5) * t441 + t157 * t435 + t211 * t439) * t257;
t66 = -t165 / 0.2e1 + (t288 + t439 + (t445 + t438) * t389) * t252;
t272 = t47 * qJD(1) + t66 * qJD(2) - t164 * qJD(3);
t168 = t348 + t405;
t46 = (t319 - t406 / 0.2e1 + t144 * t444) * t252;
t62 = -t217 / 0.2e1 + (t428 / 0.2e1 + t246 * t444) * t251 + (pkin(3) * t294 + t215 / 0.2e1 - t172 / 0.2e1) * t257;
t271 = t46 * qJD(1) + t62 * qJD(2) + t168 * qJD(3);
t239 = -t374 / 0.2e1;
t238 = t251 * t427;
t191 = t206 * qJD(6);
t175 = t248 * t237 - t297;
t174 = t245 * t237 + t297;
t167 = t212 * t311 + t239;
t166 = t212 * t312 + t239;
t156 = qJD(1) * t326 - t289;
t152 = t153 * qJD(3);
t151 = t349 * t208;
t111 = t124 * qJD(6);
t94 = t99 * qJD(6);
t92 = t408 / 0.2e1 + t265;
t89 = qJD(4) * t326 - t212 * t289;
t87 = -t370 + t381;
t86 = t370 + t381;
t73 = -t249 * t161 + t361;
t67 = t347 * t433 + t324 - t301 / 0.2e1 + t165 / 0.2e1 + t252 * t288;
t63 = -t405 / 0.2e1 + t412 / 0.2e1 - t348 / 0.2e1 + t217 / 0.2e1 + (t257 * t294 + t396 / 0.2e1) * pkin(3);
t57 = -t361 + (t310 - t332) * t212;
t54 = (t204 * qJD(4) - t278 * qJD(6) - t255 * t328) * t203;
t52 = t416 / 0.2e1 + t266;
t50 = t419 / 0.2e1 + t267;
t49 = t157 * t317 + t216 * t325 + t415 * t445;
t48 = t144 * t344 + t252 * t319 + t406 * t433;
t45 = t361 + (t249 * t378 + t257 * t459) * t212;
t42 = t150 * t317 + t173 * t325 + t388 * t441;
t41 = t252 * t320 + t403 * t433 + t413 * t434;
t37 = -t361 + (t332 + (t427 - t305) * t252) * t212;
t35 = t38 * qJD(6);
t30 = t33 * qJD(6);
t29 = -t298 / 0.2e1 - t130 * qJD(5) - t349 * t129;
t28 = -t252 * t248 * t305 + t357 - t383;
t27 = -t384 - t357 + (-t354 / 0.2e1 - t465) * t257;
t25 = t383 + t357 + (t248 * t459 - t234) * t257;
t23 = -t422 / 0.2e1 + t268;
t22 = t26 * qJD(6);
t21 = t384 - t357 + (t293 * t251 + t465) * t257;
t19 = t425 / 0.2e1 + t264;
t18 = t299 + t281;
t16 = t212 * t324 + t145 * t344 + (t411 / 0.2e1 + t417 / 0.2e1 + t269) * t252;
t12 = t53 * qJD(4) - t145 * t379 - t456;
t11 = t51 * qJD(4) - t143 * t366 + t369 + t456;
t8 = -t93 * qJD(4) + t290 * t409 + t111 - t410;
t7 = t410 + t92 * qJD(4) + t111 + (-t460 - t373) * t251 * t395;
t6 = t52 * qJD(4) - t456 + (-t256 * t459 + t379) * t145;
t5 = t93 * qJD(5) - t204 * t460 + t414 - t94;
t4 = t50 * qJD(4) - t369 + t456 + (t290 + t366) * t143;
t3 = -t414 + t92 * qJD(5) - t94 + (t460 - t336) * t204;
t2 = -t17 * qJD(4) + t20 * qJD(5) - t81 * t423 + t22;
t1 = t18 * qJD(4) + t19 * qJD(5) + t22 + (t460 + t423) * t81;
t10 = [0, -t254 * t315, 0, 0, pkin(2) * t315, t291, t349 * t119, 0, 0, 0, t131 * qJD(2) - t211 * t375, t132 * qJD(2) - t212 * t375, t249 * t291 - t296, -t211 * t155, (t145 * t349 + t211 * t327 + t365) * t146, t246 * t291 + t296, t13 * qJD(2) + t14 * qJD(3) + t34 * qJD(4) - t36 * qJD(5), (-t117 * qJD(4) + qJD(6) * t279 - t255 * t365 + t349 * t81) * t82, (-qJD(5) * t146 + t143 * t349 - t298) * t144; 0, -t295, -qJD(2) * t254, 0, t302, t161, t371, -t155, t154, 0, t368, t367, t45, -t101, t6, t37, t421 + t16 * qJD(3) + t42 * qJD(4) + t41 * qJD(5) + (t411 + t417) * t353, t1, t4; 0, 0, 0, 0, 0, t161, t371, -t155, t154, 0, -t334, -t333, t45, -t101, t6, t37, t420 + t16 * qJD(2) + t49 * qJD(4) + t48 * qJD(5) + (-pkin(5) * t145 + t212 * t216) * t352, t1, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455, t151, -t464 + t349 * t52 + (t355 + t379) * t342, -t452, t386 + t42 * qJD(2) + t49 * qJD(3) + (t257 * t372 - t337) * t148, t23 * qJD(5) - t30 + t349 * t18 - (-t336 + t423) * t117, t464 + t349 * t50 + (-t293 - t366) * t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t446, t89, -t385 + t41 * qJD(2) + t48 * qJD(3) + (t257 * t350 - t328) * t148, t23 * qJD(4) + t35 + t349 * t19 + (-t373 - t423) * t255 * t144, t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t29; 0, t295, 0, 0, -t302, -t161, -t371, 0, 0, 0, -t368, -t367, t73, t101, t12, t57, t15 * qJD(3) - t40 * qJD(4) - t39 * qJD(5) - t421, t2, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t428, -pkin(3) * t313, t237, 0, t175, -t237, -t118 * qJD(4) - t128 * qJD(5) - t152, t54, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t349 * t428, (-t314 - t313) * pkin(3), t237, 0, t175, -t237, t67 * qJD(4) + t63 * qJD(5) - t152 - t283, t54, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t356, t25, -t84, t67 * qJD(3) + t241 * t275 + t285, t3, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, t167, t63 * qJD(3) + t172 * qJD(5) + t241 * t327 - t284, t7, -t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, t86; 0, 0, 0, 0, 0, -t161, -t371, 0, 0, 0, t334, t333, t73, t101, t12, t57, -t15 * qJD(2) - t47 * qJD(4) - t46 * qJD(5) - t420, t2, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t428, pkin(3) * t314, t237, 0, t175, -t237, -t66 * qJD(4) - t62 * qJD(5) + t283, t54, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, 0, t175, -t237, t164 * qJD(4) - t168 * qJD(5), t54, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t356, t25, -t84, -pkin(5) * t275 - t272, t3, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, t167, -pkin(5) * t327 - t215 * qJD(5) - t271, t7, -t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t151, -t342 * t379 - t349 * t53 - t464, t452, t40 * qJD(2) + t47 * qJD(3) - t386, t24 * qJD(5) + t117 * t423 + t17 * t349 - t30, t464 - t349 * t51 + (t366 + t426) * t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, t356, t28, t84, t66 * qJD(3) - t285, t5, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, t356, t28, t84, t272, t5, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t329, 0, 0, -t245 * t331 + t247 * t329, -t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, -t156, 0, t191 + (t247 * t355 - t330) * t256 + t449, -t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t450, t238 + (t211 * t311 - t462) * t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, t89, t39 * qJD(2) + t46 * qJD(3) + t385, -t24 * qJD(4) - t20 * t349 + t366 * t424 + t35, -t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, t166, t62 * qJD(3) + t284, t8, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, t166, t271, t8, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, t156, 0, -t234 * t247 + t191 - t449, t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t331, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, -t256 * t289 - t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t451, t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t9, t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t9, t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t450, t238 + (t211 * t312 + t462) * t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t448, t309 * t394 + t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t10;
