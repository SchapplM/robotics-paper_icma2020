% Calculate inertial parameters regressor of joint inertia matrix for
% CloosQRC350OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-20 08:27
% Revision: 6013df02bda2c1f6ebc95d3649839f696d960e41 (2020-06-19)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = CloosQRC350OL_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350OL_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'CloosQRC350OL_inertiaJ_reg2_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-20 08:18:58
% EndTime: 2020-06-20 08:19:13
% DurationCPUTime: 7.39s
% Computational Cost: add. (2007->235), mult. (4528->444), div. (0->0), fcn. (5347->10), ass. (0->199)
t239 = 2 * pkin(2);
t238 = 2 * pkin(6);
t132 = sin(qJ(5));
t138 = cos(qJ(4));
t110 = t132 * t138;
t137 = cos(qJ(5));
t134 = sin(qJ(3));
t135 = sin(qJ(2));
t139 = cos(qJ(3));
t140 = cos(qJ(2));
t90 = -t134 * t140 - t139 * t135;
t91 = -t134 * t135 + t139 * t140;
t42 = t91 * t110 - t137 * t90;
t237 = -0.2e1 * t42;
t118 = t135 * pkin(3) + pkin(2);
t49 = -t90 * pkin(4) + t91 * pkin(5) + t118;
t236 = 0.2e1 * t49;
t235 = 0.2e1 * t91;
t133 = sin(qJ(4));
t234 = -0.2e1 * t133;
t233 = 0.2e1 * t138;
t131 = sin(qJ(6));
t136 = cos(qJ(6));
t212 = t138 * t49;
t114 = t137 * t138;
t44 = t91 * t114 + t132 * t90;
t150 = t44 * pkin(6) + t212;
t22 = (-pkin(6) * t91 - t137 * t49) * t133;
t5 = t131 * t22 + t136 * t150;
t6 = -t131 * t150 + t136 * t22;
t186 = t137 * t133;
t82 = t131 * t186 - t136 * t138;
t84 = t131 * t138 + t136 * t186;
t232 = -t5 * t84 + t6 * t82;
t231 = pkin(6) * t84;
t109 = t132 * t133;
t169 = t82 * t109;
t230 = t5 * t109 + t49 * t169;
t229 = pkin(6) * t137;
t127 = t133 ^ 2;
t121 = t127 * pkin(5);
t228 = t134 * pkin(3);
t227 = t138 * pkin(5);
t124 = t139 * pkin(3);
t117 = t124 + pkin(4);
t226 = pkin(4) + t117;
t116 = -pkin(5) + t228;
t147 = (t116 - t229) * t133;
t193 = t132 * t117;
t59 = t193 + (t116 * t137 - pkin(6)) * t138;
t29 = t131 * t59 + t136 * t147;
t30 = -t131 * t147 + t136 * t59;
t225 = -t29 * t84 + t30 * t82;
t185 = t138 * t116;
t66 = t137 * t117 - t132 * t185;
t224 = t29 * t109 + t66 * t82;
t151 = (-pkin(5) - t229) * t133;
t119 = t132 * pkin(4);
t77 = t119 + (-pkin(5) * t137 - pkin(6)) * t138;
t45 = t131 * t77 + t136 * t151;
t46 = -t131 * t151 + t136 * t77;
t223 = -t45 * t84 + t46 * t82;
t93 = t137 * pkin(4) + pkin(5) * t110;
t222 = t45 * t109 + t93 * t82;
t67 = t137 * t185 + t193;
t221 = t67 * t109 + t66 * t186;
t188 = t136 * t132;
t167 = t84 * t188;
t197 = t131 * t132;
t68 = t82 * t197;
t220 = (-t167 - t68) * pkin(6);
t94 = pkin(5) * t114 - t119;
t219 = -t94 * t109 + t93 * t186;
t190 = t133 * t136;
t19 = t131 * t44 + t91 * t190;
t218 = t131 * t19;
t217 = t131 * t42;
t216 = t133 * t49;
t215 = t133 * t90;
t214 = t133 * t91;
t213 = t136 * t42;
t211 = t138 * t90;
t210 = t19 * t136;
t196 = t131 * t133;
t20 = t136 * t44 - t91 * t196;
t209 = t20 * t131;
t208 = t20 * t136;
t207 = t30 * t136;
t36 = t42 * t137;
t206 = t42 * t138;
t205 = t44 * t132;
t204 = t44 * t138;
t203 = t46 * t136;
t202 = t67 * t137;
t73 = t82 * t136;
t74 = t84 * t131;
t201 = t94 * t137;
t199 = t127 * t132;
t200 = pkin(5) * t199 + t93 * t138;
t126 = t132 ^ 2;
t108 = t126 * t127;
t198 = t127 * t137;
t129 = t137 ^ 2;
t113 = t129 * t127;
t195 = t131 * t136;
t194 = t131 * t137;
t192 = t132 * t137;
t191 = t133 * t116;
t189 = t133 * t138;
t187 = t136 * t137;
t130 = t138 ^ 2;
t184 = t130 * pkin(5) + t121;
t125 = t131 ^ 2;
t128 = t136 ^ 2;
t183 = t125 + t128;
t182 = t127 + t130;
t181 = t90 * t235;
t180 = 0.2e1 * t216;
t179 = -0.2e1 * t214;
t178 = -0.2e1 * t189;
t106 = 0.2e1 * t189;
t177 = t42 * t197;
t176 = t91 * t199;
t175 = t49 * t109;
t174 = t42 * t188;
t173 = t91 * t198;
t172 = t19 * t109;
t171 = t20 * t109;
t170 = t44 * t186;
t168 = t84 * t109;
t166 = t116 * t198;
t165 = t126 * t196;
t101 = t131 * t109;
t164 = t131 * t192;
t163 = t126 * t190;
t162 = t131 * t188;
t102 = t133 * t188;
t161 = t132 * t187;
t160 = t183 * (pkin(6) ^ 2);
t159 = t182 * t116;
t158 = pkin(6) * t101;
t157 = pkin(6) * t165;
t156 = pkin(6) * t102;
t155 = t183 * t238;
t154 = t6 * t109 + t49 * t168;
t153 = pkin(4) * t91 + pkin(5) * t90;
t152 = -t116 * t199 + t66 * t138;
t149 = -t131 * t6 + t136 * t5;
t148 = -t5 * t131 - t6 * t136;
t146 = -t116 * t90 + t117 * t91;
t145 = (-t131 * t30 + t136 * t29) * t132;
t144 = (-t131 * t46 + t136 * t45) * t132;
t142 = pkin(5) ^ 2;
t120 = t127 * t142;
t107 = t116 ^ 2;
t105 = pkin(5) * t198;
t103 = t132 * t186;
t100 = t127 * t107;
t99 = t137 * t178;
t98 = -0.2e1 * t127 * t192;
t97 = t132 * t106;
t96 = pkin(6) * t163;
t92 = t93 ^ 2;
t89 = (t126 - t129) * t133;
t88 = t91 ^ 2;
t87 = t90 ^ 2;
t81 = t84 ^ 2;
t80 = t82 ^ 2;
t78 = t127 * t88;
t72 = t91 * t189;
t70 = pkin(6) * t73;
t65 = 0.2e1 * t168;
t64 = -0.2e1 * t169;
t61 = t66 ^ 2;
t56 = t93 * t84;
t54 = t84 * t137 - t163;
t53 = -t82 * t137 + t165;
t52 = -0.2e1 * t84 * t82;
t51 = (t127 - t130) * t91;
t50 = t66 * t93;
t48 = t49 ^ 2;
t41 = t42 ^ 2;
t40 = t66 * t84;
t38 = t130 * t48;
t37 = -t131 * t82 + t84 * t136;
t35 = t48 * t108;
t33 = t42 * t109;
t32 = (t74 + t73) * t132;
t26 = t93 * t175;
t18 = -t173 + t204;
t17 = t176 - t206;
t16 = t66 * t175;
t13 = t20 * t84;
t12 = t19 * t82;
t10 = (t205 + t36) * t133;
t9 = -t84 * t42 - t171;
t8 = t82 * t42 + t172;
t3 = t84 * t19 + t20 * t82;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t140 ^ 2, -0.2e1 * t140 * t135, 0, t135 ^ 2, 0, 0, t135 * t239, t140 * t239, 0, pkin(2) ^ 2, t88, t181, 0, t87, 0, 0, -0.2e1 * t118 * t90, t118 * t235, 0, t118 ^ 2, t130 * t88, t88 * t178, t138 * t181, t78, t90 * t179, t87, -0.2e1 * t49 * t211, t90 * t180, t182 * t49 * t235, t127 * t48 + t38, t44 ^ 2, t44 * t237, 0.2e1 * t44 * t214, t41, t42 * t179, t78, (t176 + t206) * t236, (t173 + t204) * t236, (-t205 + t36) * t180, t48 * t113 + t35 + t38, t20 ^ 2, -0.2e1 * t20 * t19, 0.2e1 * t20 * t42, t19 ^ 2, t19 * t237, t41, -0.2e1 * t49 * t172 - 0.2e1 * t5 * t42, -0.2e1 * t171 * t49 - 0.2e1 * t6 * t42, -0.2e1 * t6 * t19 + 0.2e1 * t5 * t20, t5 ^ 2 + t6 ^ 2 + t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, -t135, 0, 0, 0, 0, 0, 0, 0, t91, 0, t90, 0, 0, 0, (t134 * t90 - t139 * t91) * pkin(3), 0, -t72, t51, -t215, t72, -t211, 0, t146 * t133, t146 * t138, 0, 0, -t170, t10, t18, -t33, t17, t72, (t116 * t42 + t66 * t91) * t133, (t116 * t44 - t67 * t91) * t133, -t67 * t42 - t66 * t44, t16 + (t185 - t202) * t216, -t13, t3, t9, -t12, t8, -t33, -t66 * t19 - t29 * t42 + t230, -t66 * t20 - t30 * t42 + t154, -t30 * t19 + t29 * t20 + t232, t5 * t29 + t6 * t30 + t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t124, -0.2e1 * t228, 0, (t134 ^ 2 + t139 ^ 2) * pkin(3) ^ 2, t127, t106, 0, t130, 0, 0, t117 * t233, t117 * t234, -0.2e1 * t159, t130 * t107 + t117 ^ 2 + t100, t113, t98, t99, t108, t97, t130, 0.2e1 * t152, -0.2e1 * t67 * t138 - 0.2e1 * t166, 0.2e1 * t221, t67 ^ 2 + t100 + t61, t81, t52, t65, t80, t64, t108, 0.2e1 * t224, 0.2e1 * t30 * t109 + 0.2e1 * t40, 0.2e1 * t225, t29 ^ 2 + t30 ^ 2 + t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, 0, t90, 0, 0, 0, 0, 0, -t72, t51, -t215, t72, -t211, 0, t153 * t133, t153 * t138, 0, 0, -t170, t10, t18, -t33, t17, t72, (-pkin(5) * t42 + t91 * t93) * t133, (-pkin(5) * t44 + t91 * t94) * t133, t94 * t42 - t93 * t44, t26 + (t201 - t227) * t216, -t13, t3, t9, -t12, t8, -t33, -t93 * t19 - t45 * t42 + t230, -t93 * t20 - t46 * t42 + t154, -t46 * t19 + t45 * t20 + t232, t5 * t45 + t6 * t46 + t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t124, -t228, 0, 0, t127, t106, 0, t130, 0, 0, t226 * t138, -t226 * t133, -t159 + t184, t117 * pkin(4) - pkin(5) * t159, t113, t98, t99, t108, t97, t130, t152 + t200, -t166 + t105 + (-t67 + t94) * t138, t219 + t221, -t116 * t121 - t67 * t94 + t50, t81, t52, t65, t80, t64, t108, t222 + t224, t40 + t56 + (t30 + t46) * t109, t223 + t225, t29 * t45 + t30 * t46 + t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t127, t106, 0, t130, 0, 0, pkin(4) * t233, pkin(4) * t234, 0.2e1 * t184, pkin(4) ^ 2 + t130 * t142 + t120, t113, t98, t99, t108, t97, t130, 0.2e1 * t200, 0.2e1 * t94 * t138 + 0.2e1 * t105, 0.2e1 * t219, t94 ^ 2 + t120 + t92, t81, t52, t65, t80, t64, t108, 0.2e1 * t222, 0.2e1 * t46 * t109 + 0.2e1 * t56, 0.2e1 * t223, t45 ^ 2 + t46 ^ 2 + t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138 * t91, 0, -t214, t90, -t212, t216, 0, 0, t205, -t132 * t42 + t44 * t137, t91 * t109, -t36, t91 * t186, 0, -t49 * t114, t49 * t110, (-t126 - t129) * t216, 0, t20 * t188, (-t209 - t210) * t132, -t20 * t137 + t174, t19 * t197, t19 * t137 - t177, -t36, -pkin(6) * t174 + t5 * t137 - t165 * t49, pkin(6) * t177 + t6 * t137 - t163 * t49, ((t208 + t218) * pkin(6) + t149) * t132, t149 * t132 * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t133, 0, -t138, 0, -t191, -t185, 0, 0, -t103, t89, t110, t103, t114, 0, -t116 * t186, t132 * t191, -t66 * t132 + t202, 0, -t167, t32, t54, -t68, t53, t103, t29 * t137 - t66 * t197 + t96, t30 * t137 - t66 * t188 - t157, t145 + t220, pkin(6) * t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t133, 0, -t138, 0, t133 * pkin(5), t227, 0, 0, -t103, t89, t110, t103, t114, 0, pkin(5) * t186, -pkin(5) * t109, -t93 * t132 - t201, 0, -t167, t32, t54, -t68, t53, t103, t45 * t137 - t93 * t197 + t96, t46 * t137 - t93 * t188 - t157, t144 + t220, pkin(6) * t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t126, 0.2e1 * t192, 0, t129, 0, 0, 0, 0, 0, 0, t128 * t126, -0.2e1 * t126 * t195, -0.2e1 * t161, t125 * t126, 0.2e1 * t164, t129, t161 * t238, -0.2e1 * pkin(6) * t164, t126 * t155, t126 * t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, -t42, t214, t175, t49 * t186, 0, 0, -t209, -t208 + t218, -t217, t210, -t213, 0, pkin(6) * t217 - t102 * t49, pkin(6) * t213 + t101 * t49, (-t209 + t210) * pkin(6) + t148, t148 * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, 0, t109, t138, t66, -t67, 0, 0, t74, t37, t101, -t73, t102, 0, -t66 * t136 - t158, t131 * t66 - t156, -t207 - t70 + (-t29 + t231) * t131, (-t29 * t131 - t207) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, 0, t109, t138, t93, t94, 0, 0, t74, t37, t101, -t73, t102, 0, -t93 * t136 - t158, t131 * t93 - t156, -t203 - t70 + (-t45 + t231) * t131, (-t45 * t131 - t203) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, 0, t137, 0, 0, 0, 0, 0, -t162, (t125 - t128) * t132, t194, t162, t187, 0, -pkin(6) * t194, -pkin(6) * t187, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t125, 0.2e1 * t195, 0, t128, 0, 0, 0, 0, t155, t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20, 0, t19, -t42, t5, t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t82, t109, t29, t30, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t82, t109, t45, t46, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188, 0, t197, t137, pkin(6) * t188, -pkin(6) * t197, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, 0, t136, 0, -t131 * pkin(6), -t136 * pkin(6), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg = t1;
