% Calculate minimal parameter regressor of Coriolis joint torque vector for
% CloosQRC350OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6]';
% MDP [36x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see CloosQRC350OL_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-20 08:27
% Revision: 6013df02bda2c1f6ebc95d3649839f696d960e41 (2020-06-19)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = CloosQRC350OL_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(36,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350OL_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350OL_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'CloosQRC350OL_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [6x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [36 1]), ...
  'CloosQRC350OL_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [36x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-20 08:19:24
% EndTime: 2020-06-20 08:19:58
% DurationCPUTime: 26.94s
% Computational Cost: add. (10000->611), mult. (23395->841), div. (0->0), fcn. (18491->10), ass. (0->231)
t539 = sin(qJ(4));
t540 = sin(qJ(3));
t545 = cos(qJ(2));
t541 = sin(qJ(2));
t705 = cos(qJ(3));
t633 = t705 * t541;
t588 = -t540 * t545 - t633;
t497 = t588 * qJD(1);
t567 = t497 + qJD(4);
t725 = qJD(4) * t567;
t727 = t539 * t725;
t726 = t539 * t567;
t632 = t705 * t545;
t609 = qJD(1) * t632;
t660 = qJD(1) * t541;
t631 = t540 * t660;
t496 = -t609 + t631;
t538 = sin(qJ(5));
t543 = cos(qJ(5));
t544 = cos(qJ(4));
t669 = t543 * t544;
t461 = t496 * t538 + t497 * t669;
t652 = qJD(5) * t538;
t626 = t539 * t652;
t722 = -t461 + t626;
t533 = qJD(2) + qJD(3);
t482 = -t496 * t544 - t539 * t533;
t448 = t482 * t538 - t543 * t567;
t591 = t496 * t539 - t533 * t544;
t715 = qJD(5) - t591;
t724 = t448 * t715;
t689 = t715 * t538;
t723 = t715 * t543;
t450 = t543 * t482 + t538 * t567;
t537 = sin(qJ(6));
t542 = cos(qJ(6));
t417 = t450 * t537 + t542 * t715;
t645 = qJD(6) - t448;
t721 = t417 * t645;
t418 = t450 * t542 - t537 * t715;
t720 = t418 * t645;
t719 = t591 * t567;
t476 = t533 * t588;
t467 = t476 * qJD(1);
t465 = t544 * t467;
t429 = qJD(4) * t591 + t465;
t718 = qJD(5) * t567 + t429;
t671 = t542 * t543;
t500 = t537 * t544 + t539 * t671;
t675 = t539 * t542;
t666 = t500 * qJD(6) + t567 * t675 + (t669 * qJD(4) - t722) * t537;
t654 = qJD(4) * t543;
t670 = t542 * t544;
t679 = t537 * t539;
t665 = -t461 * t542 + t497 * t679 - (qJD(6) + t654) * t670 - (-t542 * t652 + (-qJD(6) * t543 - qJD(4)) * t537) * t539;
t677 = t538 * t544;
t460 = -t543 * t496 + t497 * t677;
t653 = qJD(4) * t544;
t629 = t538 * t653;
t651 = qJD(5) * t543;
t578 = -t539 * t651 - t629;
t573 = t460 - t578;
t650 = qJD(5) * t544;
t717 = t538 * t650 + t539 * t654;
t716 = pkin(2) * t545 * MDP(7) + (t541 ^ 2 - t545 ^ 2) * MDP(3) - t541 * (pkin(2) * MDP(8) + MDP(2) * t545);
t657 = qJD(3) * t540;
t640 = pkin(3) * t657;
t610 = qJD(2) * t640;
t621 = t705 * qJD(2);
t611 = pkin(3) * t621;
t507 = t533 * pkin(4) + t611;
t647 = t507 * qJD(4);
t714 = -t539 * t610 + t544 * t647;
t713 = t722 * pkin(6);
t614 = t541 * t533;
t599 = t540 * t614;
t662 = t533 * t609;
t571 = -qJD(1) * t599 + t662;
t712 = -t539 * t571 + t544 * t725;
t711 = t544 * t571 + t727;
t572 = -t533 * t631 + t662;
t710 = -t544 * t572 - t727;
t470 = -pkin(4) * t496 + t497 * pkin(5);
t455 = -t539 * t470 + t544 * t611;
t658 = qJD(2) * t540;
t641 = pkin(3) * t658;
t709 = -pkin(4) * t651 - pkin(5) * t717 + t543 * t455 - t538 * t641;
t708 = -t539 * t647 - t544 * t610;
t512 = qJD(1) * pkin(2) + pkin(3) * t660;
t458 = -pkin(4) * t497 - pkin(5) * t496 + t512;
t506 = -pkin(5) * t533 + t641;
t437 = t458 * t544 + t506 * t539;
t702 = pkin(3) * qJD(2);
t639 = t545 * t702;
t420 = t467 * pkin(5) + t662 * pkin(4) + (-pkin(4) * t599 + t639) * qJD(1);
t595 = qJD(3) * t611;
t568 = -t539 * t420 + t544 * t595;
t399 = -qJD(4) * t437 + t568;
t438 = -t458 * t539 + t506 * t544;
t386 = -t538 * (qJD(5) * t438 + t610) + t543 * t399 + t507 * t651;
t704 = pkin(6) * t645;
t703 = pkin(6) * t543;
t527 = t541 * pkin(3) + pkin(2);
t396 = -t482 * t652 - t538 * t571 + t543 * t718;
t655 = qJD(4) * t539;
t579 = -t539 * t467 + t496 * t653 + t533 * t655;
t648 = qJD(6) * t542;
t649 = qJD(6) * t537;
t378 = -t396 * t542 + t450 * t649 - t537 * t579 + t648 * t715;
t701 = t378 * t537;
t700 = t396 * t538;
t397 = t482 * t651 + t538 * t718 + t543 * t571;
t699 = t397 * t543;
t575 = -t458 * t655 + t539 * t595;
t400 = (qJD(4) * t506 + t420) * t544 + t575;
t698 = t400 * t538;
t697 = t400 * t543;
t696 = t429 * t539;
t695 = t579 * t538;
t694 = t579 * t543;
t693 = t579 * t544;
t692 = t437 * t538;
t691 = t437 * t543;
t502 = -t540 * t541 + t632;
t471 = -pkin(4) * t588 + pkin(5) * t502 + t527;
t690 = t471 * t544;
t687 = t591 * t543;
t686 = t482 * t544;
t685 = t496 * t512;
t684 = t497 * t539;
t683 = t502 * t539;
t682 = t507 * t497;
t681 = t512 * t497;
t680 = t537 * t397;
t678 = t538 * t539;
t676 = t539 * t476;
t674 = t539 * t543;
t672 = t542 * t397;
t668 = t544 * t476;
t630 = t538 * t655;
t664 = -t455 * t538 - t543 * t641 + pkin(4) * t652 - (t543 * t650 - t630) * pkin(5);
t525 = pkin(3) * t540 - pkin(5);
t526 = pkin(3) * t705 + pkin(4);
t663 = t525 * t669 + t538 * t526;
t659 = qJD(1) * t545;
t656 = qJD(4) * t450;
t637 = t471 * t678;
t635 = -pkin(5) - t703;
t634 = t705 * t533;
t627 = t715 * t652;
t620 = t705 * qJD(3);
t619 = t525 - t703;
t422 = t438 * t543 + t507 * t538;
t387 = -qJD(5) * t422 - t399 * t538 - t543 * t610;
t618 = t387 * t544 - t437 * t460;
t617 = t645 ^ 2;
t615 = t645 * t542;
t612 = pkin(3) * t620;
t597 = t544 * t612;
t445 = (-t525 * t650 - t640) * t543 + (-qJD(5) * t526 + t525 * t655 - t597) * t538;
t462 = pkin(3) * t659 + t470;
t608 = t462 * t678 - t445;
t606 = -t543 * t653 - t461;
t435 = t482 * t537 - t591 * t671;
t605 = t542 * t651 + t435;
t477 = (t621 + t620) * t545 + (-t658 - t657) * t541;
t586 = -t502 * t655 + t668;
t405 = (-t502 * t650 - t477) * t538 + (qJD(5) * t588 + t586) * t543;
t604 = qJD(6) * t683 - t405;
t454 = t544 * t470 + t539 * t611;
t531 = t538 * pkin(4);
t494 = t531 + (-pkin(5) * t543 - pkin(6)) * t544;
t603 = qJD(6) * t494 + t635 * t653 - t454 + t713;
t483 = -pkin(6) * t544 + t663;
t602 = qJD(6) * t483 - t462 * t544 + t539 * t612 + t619 * t653 + t713;
t504 = t635 * t539;
t530 = pkin(6) * t655;
t601 = -pkin(6) * t684 + qJD(6) * t504 - t530 + t709;
t492 = t619 * t539;
t581 = t526 * t651 - t538 * t640 + t543 * t597;
t600 = qJD(6) * t492 + (-pkin(6) * t497 - t462 * t543) * t539 - t530 + t717 * t525 - t581;
t598 = -pkin(6) * t502 - t471 * t543;
t380 = pkin(6) * t579 + t386;
t381 = t396 * pkin(6) + t400;
t594 = -t542 * t380 + t537 * t381;
t469 = t502 * t669 + t538 * t588;
t424 = pkin(6) * t469 + t690;
t442 = t598 * t539;
t593 = t424 * t542 + t442 * t537;
t592 = t424 * t537 - t442 * t542;
t589 = t722 * t437 + (t655 + t684) * t422;
t587 = t502 * t653 + t676;
t585 = t651 * t715 - t695;
t584 = t627 + t694;
t583 = -t645 * t648 + t680;
t582 = -t645 * t649 - t672;
t577 = pkin(6) * t450 + t437;
t576 = pkin(6) * t397;
t421 = -t438 * t538 + t507 * t543;
t574 = -t421 * t567 - t437 * t651;
t570 = t537 * t577;
t569 = qJD(6) * t469 + t587;
t379 = t396 * t537 - t715 * t649 + (qJD(6) * t450 - t579) * t542;
t411 = -pkin(6) * t715 + t422;
t369 = -qJD(6) * t570 + t537 * t380 + t542 * t381 + t411 * t648;
t393 = t537 * t411 + t542 * t577;
t499 = t537 * t674 - t670;
t562 = t369 * t678 + t387 * t499 + t393 * t573 + t421 * t666;
t561 = t438 * t496 - t544 * t682 - t714;
t558 = t544 * t567;
t427 = pkin(4) * t477 + pkin(5) * t476 + t639;
t551 = -t427 * t678 + t471 * t578;
t550 = t437 * t496 - t539 * t682 + t708;
t368 = qJD(6) * t393 + t594;
t394 = t411 * t542 - t570;
t549 = -t368 * t678 + t387 * t500 + t394 * t573 - t421 * t665;
t548 = (-t378 * t499 + t379 * t500 - t417 * t665 + t418 * t666) * MDP(31) + (t378 * t678 - t397 * t500 - t418 * t573 - t645 * t665) * MDP(32) + (t379 * t678 + t397 * t499 + t417 * t573 - t645 * t666) * MDP(33) + (t448 * t461 + t450 * t460 + (t448 * t543 + t450 * t538) * t653 + (t700 + t699 + (-t448 * t538 + t450 * t543) * qJD(5)) * t539) * MDP(24) + (t378 * t500 + t418 * t665) * MDP(30) + (t396 * t544 + t606 * t715 + (-t450 * t567 + t584) * t539) * MDP(25) + (-t397 * t544 + (t460 + t629) * t715 + (t448 * t567 + t585) * t539) * MDP(26) + (-t397 * t678 + t573 * t645) * MDP(34) + (-t396 * t674 + (t606 + t626) * t450) * MDP(23) + ((-t429 - t719) * t544 + (t482 * t567 - t579) * t539) * MDP(17) + (-t715 * t726 - t693) * MDP(27) + (-t567 * t686 - t696) * MDP(16) + (-t496 * t591 + t497 * t726 + t711) * MDP(19) + (-t482 * t496 - t497 * t558 - t712) * MDP(18) + (-t497 * t533 + t467) * MDP(11) + (-t496 * t533 - t571) * MDP(12) + (t496 ^ 2 - t497 ^ 2) * MDP(10) + (-MDP(20) * t567 + MDP(9) * t497) * t496;
t503 = pkin(4) * t543 + pkin(5) * t677;
t486 = -t525 * t677 + t526 * t543;
t468 = t502 * t677 - t543 * t588;
t441 = -t469 * t542 + t502 * t679;
t440 = t469 * t537 + t502 * t675;
t434 = t482 * t542 + t537 * t687;
t414 = pkin(6) * t687 + t438;
t413 = -pkin(6) * t482 - t691;
t406 = qJD(5) * t469 + t543 * t477 - t502 * t630 + t538 * t668;
t395 = t598 * t653 + (-pkin(6) * t476 - t427 * t543 + t471 * t652) * t539;
t390 = pkin(6) * t405 + t544 * t427 - t471 * t655;
t389 = -t537 * t604 + t542 * t569;
t388 = t537 * t569 + t542 * t604;
t1 = [(t400 * t469 + t405 * t437 + (t396 * t471 + t427 * t450 + (-t422 * t502 + t471 * t723) * qJD(4)) * t544 + (t427 * t723 - t386 * t502 - t422 * t476 + (-t584 - t656) * t471) * t539) * MDP(29) + (-t476 * t726 - t477 * t591 - t502 * t712 + t579 * t588) * MDP(19) + (-t471 * t539 * t572 - t399 * t588 + t427 * t726 + t438 * t477 + t502 * t708 + t507 * t668 + t690 * t725) * MDP(22) + (t512 * t477 - 0.2e1 * t497 * t639 + t527 * t572) * MDP(14) + ((-qJD(6) * t592 + t390 * t542 + t395 * t537) * t645 - t593 * t397 - t369 * t468 - t393 * t406 - t379 * t637 - t387 * t440 - t421 * t389 + t551 * t417) * MDP(35) + (-(qJD(6) * t593 + t390 * t537 - t395 * t542) * t645 + t592 * t397 + t368 * t468 - t394 * t406 + t378 * t637 + t387 * t441 + t421 * t388 + t551 * t418) * MDP(36) + (t397 * t468 - t406 * t645) * MDP(34) + (-t379 * t468 + t389 * t645 - t397 * t440 - t406 * t417) * MDP(33) + (-t378 * t468 + t388 * t645 - t397 * t441 + t406 * t418) * MDP(32) + ((-t482 * t539 + t544 * t591) * t476 + (-t696 + t693 + (-t539 * t591 - t686) * qJD(4)) * t502) * MDP(17) + (t467 * t588 + t476 * t497 + t496 * t477 - t502 * t571) * MDP(10) + (-t662 * t588 - qJD(4) * t477 + (t477 * t633 + (t545 * t477 + t588 * t614) * t540) * qJD(1)) * MDP(20) + (-t400 * t588 - t427 * t558 + t437 * t477 + t711 * t471 + t502 * t714 + t507 * t676) * MDP(21) + (t429 * t588 + t476 * t558 - t482 * t477 - t502 * t711) * MDP(18) + (0.2e1 * t716 * qJD(1) + (-MDP(4) * t541 - MDP(5) * t545) * qJD(2)) * qJD(2) + (t467 * t527 + t476 * t512 + (qJD(1) * t502 - t496) * t639) * MDP(15) + (t400 * t468 + t406 * t437 + (t397 * t471 + t427 * t448 + (t421 * t502 + t471 * t689) * qJD(4)) * t544 + (t427 * t689 + t387 * t502 + t421 * t476 + (-qJD(4) * t448 + t585) * t471) * t539) * MDP(28) + (t467 * t502 - t476 * t496) * MDP(9) + (t396 * t469 + t405 * t450) * MDP(23) + (-t396 * t468 - t397 * t469 - t405 * t448 - t406 * t450) * MDP(24) + (t429 * t502 * t544 + t482 * t586) * MDP(16) + (MDP(11) * t476 - MDP(12) * t477) * t533 + (-t397 * t683 - t406 * t715 - t448 * t587 + t468 * t579) * MDP(26) + (-t579 * t683 + t587 * t715) * MDP(27) + (t396 * t683 + t405 * t715 + t450 * t587 - t469 * t579) * MDP(25) + (t378 * t441 - t388 * t418) * MDP(30) + (t378 * t440 + t379 * t441 + t388 * t417 - t389 * t418) * MDP(31); (t462 * t558 - t525 * t712 - t526 * t579 + t591 * t640 - t612 * t726 + t550) * MDP(21) + (t526 * t429 - t462 * t726 - t482 * t640 - t525 * t710 - t567 * t597 + t561) * MDP(22) + (-t486 * t579 + t445 * t715 + (-t448 * t462 + (t448 * t525 - t692) * qJD(4)) * t544 + (t448 * t612 + t397 * t525 + (-t462 * t715 - t400) * t538 + t574) * t539 + t618) * MDP(28) + (-t681 + (t496 * t659 + (-t621 - t634) * qJD(3)) * pkin(3)) * MDP(15) + (t685 + (t497 * t659 + (-qJD(2) - t533) * t657) * pkin(3)) * MDP(14) + (-t581 * t715 + t663 * t579 + (t525 * t627 - t462 * t450 - t386 + (t450 * t525 - t691) * qJD(4)) * t544 + (t450 * t612 + t525 * t396 + (-t400 + (qJD(4) * t525 - t462) * t715) * t543) * t539 + t589) * MDP(29) + ((-t483 * t542 + t492 * t537) * t397 + t486 * t378 - (t537 * t602 + t542 * t600) * t645 + t608 * t418 + t549) * MDP(36) + t548 + (-(t483 * t537 + t492 * t542) * t397 - t486 * t379 - (t537 * t600 - t542 * t602) * t645 + t608 * t417 + t562) * MDP(35) - t716 * qJD(1) ^ 2; (-t579 * t503 - t448 * t454 - t664 * t715 + (-pkin(5) * t448 - t692) * t653 + (-pkin(5) * t397 + t574 - t698) * t539 + t618) * MDP(28) + (-pkin(4) * t579 + pkin(5) * t712 + t454 * t567 - t591 * t641 + t550) * MDP(21) + (pkin(4) * t429 + pkin(5) * t710 + t455 * t567 + t482 * t641 + t561) * MDP(22) + (-t681 + (-t620 + t634) * t702) * MDP(15) + (t531 * t579 - t454 * t450 + (-pkin(5) * t396 - t697) * t539 + t709 * t715 + (-t437 * t654 - t386 + (-t656 - t694) * pkin(5)) * t544 + t589) * MDP(29) + (t685 + (-qJD(3) + t533) * t641) * MDP(14) + ((-t494 * t542 + t504 * t537) * t397 + t503 * t378 - (t537 * t603 + t542 * t601) * t645 + t664 * t418 + t549) * MDP(36) + (-(t494 * t537 + t504 * t542) * t397 - t503 * t379 - (t537 * t601 - t542 * t603) * t645 + t664 * t417 + t562) * MDP(35) + t548; -t591 ^ 2 * MDP(17) + (t496 * t655 - t533 * t653 + t465 - t719) * MDP(18) + t579 * MDP(19) - t571 * MDP(20) + (-t544 * t420 + t438 * t567 - t506 * t653 - t575) * MDP(21) + (-t437 * t567 + t458 * t653 + t506 * t655 - t507 * t591 - t568) * MDP(22) + (t450 * t723 + t700) * MDP(23) + ((t396 - t724) * t543 + (-t450 * t715 - t397) * t538) * MDP(24) + (t715 * t723 - t695) * MDP(25) + (-t689 * t715 - t694) * MDP(26) + (-t438 * t448 - t697) * MDP(28) + (-t438 * t450 + t698) * MDP(29) + (-t378 * t538 * t542 + (-t538 * t649 + t605) * t418) * MDP(30) + (-t417 * t435 + t418 * t434 + (-t417 * t542 - t418 * t537) * t651 + (t701 - t379 * t542 + (t417 * t537 - t418 * t542) * qJD(6)) * t538) * MDP(31) + (t378 * t543 - t605 * t645 + (t418 * t715 - t582) * t538) * MDP(32) + (t379 * t543 - (-t537 * t651 + t434) * t645 + (-t417 * t715 - t583) * t538) * MDP(33) + (-t645 * t689 - t699) * MDP(34) + (-(t413 * t537 + t414 * t542) * t645 + t421 * t434 + (t369 + (-t421 * t537 + t542 * t704) * qJD(5)) * t543 + (pkin(6) * t582 - t537 * t387 - t393 * t715 + t437 * t417 - t421 * t648) * t538) * MDP(35) + ((-t413 * t542 + t414 * t537) * t645 - t421 * t435 + (-t368 + (-t421 * t542 - t537 * t704) * qJD(5)) * t543 + (pkin(6) * t583 - t387 * t542 - t394 * t715 + t437 * t418 + t421 * t649) * t538) * MDP(36) + (-MDP(16) * t591 + MDP(17) * t482 + MDP(19) * t567 - t507 * MDP(21) - t450 * MDP(25) + t448 * MDP(26) - MDP(27) * t715 - t421 * MDP(28) + t422 * MDP(29)) * t482; -t448 ^ 2 * MDP(24) + (t396 + t724) * MDP(25) - t397 * MDP(26) - t579 * MDP(27) + (t422 * t715 + t387) * MDP(28) + (t421 * t715 + t437 * t448 - t386) * MDP(29) + (-t418 * t615 + t701) * MDP(30) + ((t378 + t721) * t542 + (t379 + t720) * t537) * MDP(31) + (t615 * t645 - t680) * MDP(32) + (-t537 * t617 - t672) * MDP(33) + (-t422 * t417 + (-pkin(6) * t617 - t387) * t542 + t576 * t537) * MDP(35) + (-t422 * t418 + (t645 * t704 + t387) * t537 + t576 * t542) * MDP(36) + (MDP(23) * t448 + t450 * MDP(24) + MDP(26) * t715 - t437 * MDP(28) - t418 * MDP(32) + t417 * MDP(33) + MDP(34) * t645 + t393 * MDP(35) + t394 * MDP(36)) * t450; t418 * t417 * MDP(30) + (-t417 ^ 2 + t418 ^ 2) * MDP(31) + (t378 - t721) * MDP(32) + (t379 - t720) * MDP(33) - t397 * MDP(34) + (-t394 * t645 + t421 * t418 + t369) * MDP(35) + (-t421 * t417 - t594 + (-qJD(6) + t645) * t393) * MDP(36);];
tauc = t1;
