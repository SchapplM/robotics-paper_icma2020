% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% CloosQRC350OL
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-20 08:27
% Revision: 6013df02bda2c1f6ebc95d3649839f696d960e41 (2020-06-19)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = CloosQRC350OL_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'CloosQRC350OL_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'CloosQRC350OL_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'CloosQRC350OL_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'CloosQRC350OL_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'CloosQRC350OL_invdynm_fixb_reg2_snew_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-20 08:20:40
% EndTime: 2020-06-20 08:21:59
% DurationCPUTime: 83.10s
% Computational Cost: add. (265367->860), mult. (541572->1308), div. (0->0), fcn. (420034->12), ass. (0->664)
t1720 = sin(qJ(3));
t1713 = qJDD(2) + qJDD(3);
t1721 = sin(qJ(2));
t1726 = cos(qJ(3));
t1727 = cos(qJ(2));
t1830 = t1720 * t1727;
t1678 = (-t1721 * t1726 - t1830) * qJD(1);
t1814 = t1726 * t1727;
t1831 = t1720 * t1721;
t1680 = (t1814 - t1831) * qJD(1);
t1846 = t1680 * t1678;
t1873 = t1713 + t1846;
t1880 = t1720 * t1873;
t1879 = t1726 * t1873;
t1718 = sin(qJ(5));
t1714 = qJD(2) + qJD(3);
t1719 = sin(qJ(4));
t1725 = cos(qJ(4));
t1651 = t1725 * t1680 - t1719 * t1714;
t1674 = qJD(4) + t1678;
t1724 = cos(qJ(5));
t1614 = t1718 * t1651 - t1724 * t1674;
t1616 = t1724 * t1651 + t1718 * t1674;
t1558 = t1616 * t1614;
t1710 = t1727 * qJDD(1);
t1855 = qJD(1) * qJD(2);
t1792 = t1721 * t1855;
t1689 = t1710 - t1792;
t1786 = t1727 * t1855;
t1807 = t1721 * qJDD(1);
t1760 = -t1786 - t1807;
t1619 = t1678 * qJD(3) + t1726 * t1689 + t1720 * t1760;
t1765 = t1719 * t1619 + t1725 * t1713;
t1567 = -t1651 * qJD(4) - t1765;
t1566 = qJDD(5) - t1567;
t1868 = -t1558 + t1566;
t1878 = t1718 * t1868;
t1730 = qJD(1) ^ 2;
t1857 = t1727 * g(3);
t1691 = t1721 * t1730 * pkin(2) + t1857;
t1729 = qJD(2) ^ 2;
t1715 = t1721 ^ 2;
t1841 = t1715 * t1730;
t1701 = -t1729 - t1841;
t1671 = pkin(3) * t1701 - t1691;
t1711 = t1721 * g(3);
t1812 = t1727 * t1730;
t1692 = pkin(2) * t1812 - t1711;
t1791 = t1721 * t1812;
t1699 = qJDD(2) - t1791;
t1738 = pkin(3) * t1699 - t1692;
t1620 = t1720 * t1671 - t1726 * t1738;
t1621 = t1726 * t1671 + t1720 * t1738;
t1552 = t1726 * t1620 - t1720 * t1621;
t1877 = t1721 * t1552;
t1876 = t1724 * t1868;
t1875 = t1727 * t1552;
t1845 = t1714 * t1678;
t1874 = t1619 + t1845;
t1776 = t1720 * t1689 - t1726 * t1760;
t1618 = -t1680 * qJD(3) - t1776;
t1617 = qJDD(4) + t1618;
t1649 = t1719 * t1680 + t1725 * t1714;
t1850 = t1651 * t1649;
t1741 = t1617 - t1850;
t1872 = t1719 * t1741;
t1871 = t1725 * t1741;
t1635 = -t1678 * pkin(4) + t1680 * pkin(5);
t1712 = t1714 ^ 2;
t1548 = -t1712 * pkin(4) - t1713 * pkin(5) + t1678 * t1635 + t1621;
t1844 = t1714 * t1680;
t1777 = -t1618 + t1844;
t1856 = qJDD(1) * pkin(2);
t1662 = t1856 + (-t1760 + t1786) * pkin(3);
t1864 = pkin(5) * t1874 + t1662;
t1732 = t1777 * pkin(4) + t1864;
t1463 = t1725 * t1548 - t1719 * t1732;
t1547 = -t1713 * pkin(4) + t1712 * pkin(5) + t1680 * t1635 + t1620;
t1412 = t1718 * t1463 + t1724 * t1547;
t1413 = t1724 * t1463 - t1718 * t1547;
t1870 = t1718 * t1412 + t1724 * t1413;
t1568 = -t1649 * qJD(4) + t1725 * t1619 - t1719 * t1713;
t1766 = -t1724 * t1568 - t1718 * t1617;
t1492 = -t1614 * qJD(5) - t1766;
t1646 = qJD(5) + t1649;
t1583 = t1646 * t1614;
t1471 = t1492 - t1583;
t1723 = cos(qJ(6));
t1863 = sin(qJ(6));
t1574 = t1723 * t1616 - t1863 * t1646;
t1418 = t1574 * qJD(6) + t1863 * t1492 + t1723 * t1566;
t1608 = -qJD(6) + t1614;
t1529 = t1608 * t1574;
t1869 = t1529 + t1418;
t1867 = -t1566 - t1558;
t1613 = t1616 ^ 2;
t1645 = t1646 ^ 2;
t1866 = t1613 + t1645;
t1627 = t1674 * t1649;
t1865 = -t1627 + t1568;
t1573 = t1863 * t1616 + t1723 * t1646;
t1571 = t1573 ^ 2;
t1572 = t1574 ^ 2;
t1607 = t1608 ^ 2;
t1612 = t1614 ^ 2;
t1647 = t1649 ^ 2;
t1648 = t1651 ^ 2;
t1673 = t1674 ^ 2;
t1676 = t1678 ^ 2;
t1677 = t1680 ^ 2;
t1775 = -t1727 * t1691 + t1721 * t1692;
t1862 = pkin(2) * t1775;
t1861 = pkin(3) * t1662;
t1860 = pkin(4) * t1720;
t1368 = t1867 * pkin(6) + t1413;
t1835 = t1719 * t1548;
t1462 = t1725 * t1732 + t1835;
t1731 = t1471 * pkin(6) + t1462;
t1289 = t1863 * t1368 + t1723 * t1731;
t1290 = t1723 * t1368 - t1863 * t1731;
t1223 = t1723 * t1289 - t1863 * t1290;
t1859 = pkin(6) * t1223;
t1224 = t1863 * t1289 + t1723 * t1290;
t1858 = pkin(6) * t1224;
t1854 = t1573 * t1574;
t1853 = t1573 * t1608;
t1852 = t1646 * t1718;
t1851 = t1646 * t1724;
t1849 = t1674 * t1651;
t1848 = t1674 * t1719;
t1847 = t1674 * t1725;
t1843 = t1714 * t1720;
t1842 = t1714 * t1726;
t1716 = t1727 ^ 2;
t1840 = t1716 * t1730;
t1454 = t1718 * t1462;
t1839 = t1718 * t1867;
t1838 = t1719 * t1223;
t1837 = t1719 * t1462;
t1836 = t1719 * t1547;
t1554 = -t1617 - t1850;
t1834 = t1719 * t1554;
t1633 = -t1846 + t1713;
t1833 = t1720 * t1633;
t1832 = t1720 * t1662;
t1688 = 0.2e1 * t1786 + t1807;
t1653 = t1721 * t1688;
t1698 = qJDD(2) + t1791;
t1829 = t1721 * t1698;
t1828 = t1721 * t1699;
t1400 = pkin(6) * t1866 + t1412;
t1827 = t1723 * t1400;
t1778 = -t1718 * t1568 + t1724 * t1617;
t1761 = t1616 * qJD(5) - t1778;
t1486 = qJDD(6) - t1761;
t1420 = -t1486 - t1854;
t1826 = t1723 * t1420;
t1421 = t1486 - t1854;
t1825 = t1723 * t1421;
t1824 = t1723 * t1573;
t1823 = t1723 * t1574;
t1419 = t1573 * qJD(6) - t1723 * t1492 + t1863 * t1566;
t1391 = -t1419 - t1853;
t1308 = t1723 * t1391 + t1863 * t1869;
t1193 = pkin(6) * t1308 + t1223;
t1822 = t1724 * t1193;
t1455 = t1724 * t1462;
t1821 = t1724 * t1867;
t1820 = t1725 * t1223;
t1819 = t1725 * t1462;
t1818 = t1725 * t1547;
t1817 = t1725 * t1554;
t1816 = t1726 * t1633;
t1815 = t1726 * t1662;
t1813 = t1727 * t1698;
t1803 = -t1607 - t1571;
t1363 = t1863 * t1803 + t1825;
t1800 = t1863 * t1400;
t1302 = pkin(6) * t1363 + t1800;
t1811 = t1724 * t1289 + t1718 * t1302;
t1799 = t1863 * t1420;
t1804 = -t1572 - t1607;
t1374 = t1723 * t1804 + t1799;
t1306 = pkin(6) * t1374 + t1827;
t1810 = t1724 * t1290 + t1718 * t1306;
t1808 = -t1715 - t1716;
t1722 = sin(qJ(1));
t1806 = t1722 * qJDD(1);
t1728 = cos(qJ(1));
t1805 = t1728 * qJDD(1);
t1802 = t1727 * t1861;
t1801 = -pkin(4) * t1726 - pkin(3);
t1798 = t1863 * t1421;
t1797 = t1863 * t1573;
t1796 = t1863 * t1574;
t1795 = t1718 * t1854;
t1794 = t1719 * t1558;
t1793 = t1720 * t1850;
t1790 = t1722 * t1846;
t1789 = t1724 * t1854;
t1788 = t1725 * t1558;
t1787 = t1726 * t1850;
t1785 = t1728 * t1846;
t1784 = t1721 * t1806;
t1783 = t1722 * t1710;
t1782 = t1721 * t1805;
t1781 = t1727 * t1805;
t1300 = t1725 * t1870 + t1837;
t1334 = t1724 * t1412 - t1718 * t1413;
t1780 = -pkin(4) * t1334 - pkin(5) * t1300;
t1372 = t1725 * t1463 + t1837;
t1779 = -pkin(4) * t1547 - pkin(5) * t1372;
t1553 = t1720 * t1620 + t1726 * t1621;
t1774 = t1722 * t1791;
t1773 = t1728 * t1791;
t1239 = t1720 * t1300 - t1334 * t1726;
t1772 = pkin(3) * t1239 + t1780;
t1348 = t1720 * t1372 - t1726 * t1547;
t1771 = pkin(3) * t1348 + t1779;
t1695 = -t1722 * t1730 + t1805;
t1770 = -pkin(1) * t1695 - t1722 * g(3);
t1769 = pkin(5) * t1726 + t1860;
t1631 = -t1712 - t1676;
t1581 = t1720 * t1631 + t1879;
t1768 = pkin(3) * t1581 - t1620;
t1767 = pkin(5) * t1720 + t1801;
t1371 = -t1719 * t1463 + t1819;
t1641 = -t1721 * t1691 - t1727 * t1692;
t1470 = (-qJD(5) + t1646) * t1616 + t1778;
t1472 = t1492 + t1583;
t1384 = t1724 * t1470 + t1718 * t1472;
t1514 = t1612 + t1613;
t1342 = t1725 * t1384 - t1719 * t1514;
t1382 = t1718 * t1470 - t1724 * t1472;
t1764 = pkin(4) * t1382 - pkin(5) * t1342 - t1719 * t1334;
t1589 = -t1673 - t1647;
t1497 = t1725 * t1589 - t1872;
t1538 = (qJD(4) + t1674) * t1651 + t1765;
t1763 = pkin(4) * t1538 - pkin(5) * t1497 - t1818;
t1603 = -t1648 - t1673;
t1500 = -t1719 * t1603 + t1817;
t1762 = pkin(4) * t1865 - pkin(5) * t1500 + t1836;
t1274 = t1720 * t1342 + t1726 * t1382;
t1759 = pkin(3) * t1274 + t1764;
t1544 = -t1645 - t1612;
t1429 = t1724 * t1544 - t1878;
t1584 = t1646 * t1616;
t1469 = -t1584 - t1761;
t1361 = t1725 * t1429 - t1719 * t1469;
t1428 = t1718 * t1544 + t1876;
t1758 = pkin(4) * t1428 - pkin(5) * t1361 - t1725 * t1412 - t1718 * t1837;
t1432 = t1720 * t1497 + t1726 * t1538;
t1757 = pkin(3) * t1432 + t1763;
t1436 = t1720 * t1500 + t1726 * t1865;
t1756 = pkin(3) * t1436 + t1762;
t1755 = t1419 - t1853;
t1754 = (-qJD(3) + t1714) * t1680 - t1776;
t1317 = t1720 * t1361 + t1726 * t1428;
t1753 = pkin(3) * t1317 + t1758;
t1752 = t1863 * t1804 - t1826;
t1227 = -t1718 * t1289 + t1724 * t1302;
t1390 = -t1529 + t1418;
t1733 = -t1723 * t1803 + t1798;
t1294 = t1718 * t1390 + t1724 * t1733;
t1245 = t1725 * t1294 + t1719 * t1363;
t1293 = -t1724 * t1390 + t1718 * t1733;
t1303 = -pkin(6) * t1733 + t1827;
t1751 = pkin(4) * t1293 - pkin(5) * t1245 - t1719 * t1227 + t1725 * t1303;
t1228 = -t1718 * t1290 + t1724 * t1306;
t1298 = -t1718 * t1755 + t1724 * t1752;
t1254 = t1725 * t1298 + t1719 * t1374;
t1297 = t1718 * t1752 + t1724 * t1755;
t1305 = -pkin(6) * t1752 - t1800;
t1750 = pkin(4) * t1297 - pkin(5) * t1254 - t1719 * t1228 + t1725 * t1305;
t1542 = t1627 + t1568;
t1748 = (-qJD(4) + t1674) * t1651 - t1765;
t1477 = t1719 * t1542 + t1725 * t1748;
t1577 = -t1647 - t1648;
t1749 = pkin(4) * t1577 - pkin(5) * t1477 - t1372;
t1735 = t1863 * t1391 - t1723 * t1869;
t1192 = -pkin(6) * t1735 - t1224;
t1482 = -t1571 - t1572;
t1271 = -t1718 * t1482 + t1724 * t1735;
t1221 = t1725 * t1271 + t1719 * t1308;
t1270 = t1724 * t1482 + t1718 * t1735;
t1747 = pkin(4) * t1270 - pkin(5) * t1221 + t1725 * t1192 - t1719 * t1822;
t1442 = t1718 * t1866 + t1821;
t1473 = (qJD(5) + t1646) * t1614 + t1766;
t1370 = t1725 * t1442 - t1719 * t1473;
t1441 = -t1724 * t1866 + t1839;
t1746 = pkin(4) * t1441 - pkin(5) * t1370 - t1725 * t1413 - t1719 * t1455;
t1198 = t1720 * t1245 + t1726 * t1293;
t1745 = pkin(3) * t1198 + t1751;
t1206 = t1720 * t1254 + t1726 * t1297;
t1744 = pkin(3) * t1206 + t1750;
t1423 = t1720 * t1477 + t1726 * t1577;
t1743 = pkin(3) * t1423 + t1749;
t1186 = t1720 * t1221 + t1726 * t1270;
t1740 = pkin(3) * t1186 + t1747;
t1321 = t1720 * t1370 + t1726 * t1441;
t1739 = pkin(3) * t1321 + t1746;
t1203 = t1724 * t1224 + t1718 * t1400;
t1170 = t1725 * t1203 + t1838;
t1202 = t1718 * t1224 - t1724 * t1400;
t1737 = -pkin(5) * t1170 + pkin(4) * t1202 + (-t1725 * t1224 - t1724 * t1838) * pkin(6);
t1148 = t1720 * t1170 + t1726 * t1202;
t1736 = pkin(3) * t1148 + t1737;
t1661 = -t1677 - t1712;
t1597 = t1726 * t1661 - t1833;
t1734 = pkin(3) * t1597 - t1621;
t1717 = pkin(2) ^ 2 * qJDD(1);
t1708 = pkin(2) * t1807;
t1703 = -t1729 - t1840;
t1702 = t1729 - t1840;
t1700 = -t1729 + t1841;
t1697 = t1808 * t1730;
t1696 = (-t1715 + t1716) * t1730;
t1694 = t1728 * t1730 + t1806;
t1693 = t1808 * qJDD(1);
t1690 = t1710 - 0.2e1 * t1792;
t1687 = t1727 * t1699;
t1686 = t1808 * t1855;
t1675 = -pkin(1) * t1694 + t1728 * g(3);
t1669 = (t1690 + t1710) * pkin(2);
t1668 = pkin(2) * t1688 + t1708;
t1666 = -t1677 + t1712;
t1665 = t1676 - t1712;
t1664 = t1721 * t1689 + t1716 * t1855;
t1663 = t1715 * t1855 + t1727 * t1760;
t1660 = -t1721 * t1702 + t1687;
t1659 = (t1689 - t1792) * t1727;
t1658 = t1727 * t1700 - t1829;
t1657 = t1727 * t1703 - t1829;
t1656 = t1727 * t1702 + t1828;
t1655 = t1721 * t1701 + t1687;
t1654 = t1721 * t1700 + t1813;
t1640 = -t1727 * t1688 - t1721 * t1690;
t1639 = t1727 * t1690 - t1653;
t1636 = t1677 - t1676;
t1630 = t1857 + (t1813 + (t1703 + t1730) * t1721) * pkin(2);
t1629 = t1711 + (t1828 + (-t1701 - t1730) * t1727) * pkin(2);
t1628 = pkin(2) * t1697 - t1641;
t1626 = -t1648 + t1673;
t1625 = t1647 - t1673;
t1624 = (t1678 * t1726 + t1680 * t1720) * t1714;
t1623 = (t1678 * t1720 - t1680 * t1726) * t1714;
t1622 = -t1676 - t1677;
t1605 = t1648 - t1647;
t1604 = (pkin(3) * t1721 + pkin(2)) * t1662;
t1602 = t1726 * t1665 - t1833;
t1601 = -t1720 * t1666 + t1879;
t1600 = t1720 * t1665 + t1816;
t1599 = t1726 * t1666 + t1880;
t1598 = -t1720 * t1661 - t1816;
t1596 = -t1845 + t1619;
t1591 = (qJD(3) + t1714) * t1680 + t1776;
t1588 = t1726 * t1619 - t1680 * t1843;
t1587 = t1720 * t1619 + t1680 * t1842;
t1586 = -t1720 * t1618 - t1678 * t1842;
t1585 = t1726 * t1618 - t1678 * t1843;
t1582 = t1726 * t1631 - t1880;
t1580 = -t1613 + t1645;
t1579 = t1612 - t1645;
t1564 = (-t1649 * t1725 + t1651 * t1719) * t1674;
t1563 = (t1649 * t1719 + t1651 * t1725) * t1674;
t1562 = -t1721 * t1623 + t1727 * t1624;
t1561 = -pkin(3) * t1591 - t1815;
t1560 = t1727 * t1623 + t1721 * t1624;
t1559 = -pkin(3) * t1874 + t1832;
t1557 = t1613 - t1612;
t1550 = pkin(3) * t1552;
t1537 = t1727 * t1559 + t1721 * t1815;
t1536 = t1727 * t1561 + t1662 * t1831;
t1533 = -t1721 * t1600 + t1727 * t1602;
t1532 = -t1721 * t1599 + t1727 * t1601;
t1531 = t1727 * t1600 + t1721 * t1602;
t1530 = t1727 * t1599 + t1721 * t1601;
t1528 = t1725 * t1568 - t1651 * t1848;
t1527 = -t1719 * t1568 - t1651 * t1847;
t1526 = -t1719 * t1567 + t1649 * t1847;
t1525 = -t1725 * t1567 - t1649 * t1848;
t1524 = -t1572 + t1607;
t1523 = t1571 - t1607;
t1522 = t1727 * t1597 + t1721 * t1598;
t1521 = t1720 * t1596 + t1726 * t1754;
t1520 = -t1726 * t1591 - t1720 * t1874;
t1519 = -t1726 * t1596 + t1720 * t1754;
t1518 = -t1720 * t1591 + t1726 * t1874;
t1517 = pkin(3) * t1519;
t1516 = t1726 * t1564 - t1720 * t1617;
t1515 = t1720 * t1564 + t1726 * t1617;
t1513 = -pkin(3) * t1622 + t1553;
t1512 = t1725 * t1625 + t1834;
t1511 = -t1719 * t1626 + t1871;
t1510 = -t1719 * t1625 + t1817;
t1509 = -t1725 * t1626 - t1872;
t1508 = -t1721 * t1587 + t1727 * t1588;
t1507 = -t1721 * t1585 + t1727 * t1586;
t1506 = t1727 * t1587 + t1721 * t1588;
t1505 = t1727 * t1585 + t1721 * t1586;
t1504 = (-t1614 * t1724 + t1616 * t1718) * t1646;
t1503 = (-t1614 * t1718 - t1616 * t1724) * t1646;
t1502 = t1727 * t1581 + t1721 * t1582;
t1499 = -t1725 * t1603 - t1834;
t1498 = t1572 - t1571;
t1496 = -t1719 * t1589 - t1871;
t1490 = t1726 * t1528 - t1793;
t1489 = t1726 * t1526 + t1793;
t1488 = t1720 * t1528 + t1787;
t1487 = t1720 * t1526 - t1787;
t1485 = pkin(2) * t1874 - t1721 * t1559 + t1662 * t1814;
t1484 = pkin(2) * t1591 - t1721 * t1561 + t1662 * t1830;
t1483 = t1721 * t1553 - t1875;
t1481 = t1725 * t1504 + t1719 * t1566;
t1480 = -t1719 * t1504 + t1725 * t1566;
t1479 = -pkin(2) * (-t1721 * t1597 + t1727 * t1598) + t1734;
t1478 = t1727 * t1513 + t1877;
t1476 = -t1725 * t1538 - t1719 * t1865;
t1475 = t1725 * t1542 - t1719 * t1748;
t1474 = t1719 * t1538 - t1725 * t1865;
t1468 = -t1584 + t1761;
t1467 = t1724 * t1579 + t1839;
t1466 = -t1718 * t1580 + t1876;
t1465 = t1718 * t1579 - t1821;
t1464 = t1724 * t1580 + t1878;
t1461 = (-t1796 + t1824) * t1608;
t1460 = (-t1797 - t1823) * t1608;
t1459 = t1724 * t1492 - t1616 * t1852;
t1458 = t1718 * t1492 + t1616 * t1851;
t1457 = t1614 * t1851 + t1718 * t1761;
t1456 = t1614 * t1852 - t1724 * t1761;
t1453 = pkin(5) * t1499 - t1818;
t1451 = -t1721 * t1518 + t1727 * t1520;
t1450 = t1727 * t1519 + t1721 * t1521;
t1449 = t1727 * t1518 + t1721 * t1520;
t1448 = t1726 * t1512 - t1720 * t1748;
t1447 = t1726 * t1511 - t1720 * t1542;
t1446 = t1720 * t1512 + t1726 * t1748;
t1445 = t1720 * t1511 + t1726 * t1542;
t1444 = -pkin(2) * (-t1721 * t1581 + t1727 * t1582) + t1768;
t1443 = pkin(5) * t1496 - t1836;
t1439 = -t1721 * t1515 + t1727 * t1516;
t1438 = t1727 * t1515 + t1721 * t1516;
t1437 = t1726 * t1500 - t1720 * t1865;
t1434 = pkin(2) * t1622 - t1721 * t1513 + t1875;
t1433 = t1726 * t1497 - t1720 * t1538;
t1430 = -pkin(2) * (t1727 * t1553 + t1877) - t1550;
t1426 = t1726 * t1476 - t1720 * t1605;
t1425 = t1720 * t1476 + t1726 * t1605;
t1424 = t1726 * t1477 - t1720 * t1577;
t1417 = t1725 * t1459 + t1794;
t1416 = t1725 * t1457 - t1794;
t1415 = -t1719 * t1459 + t1788;
t1414 = -t1719 * t1457 - t1788;
t1409 = -t1721 * t1488 + t1727 * t1490;
t1408 = -t1721 * t1487 + t1727 * t1489;
t1407 = t1727 * t1488 + t1721 * t1490;
t1406 = t1727 * t1487 + t1721 * t1489;
t1405 = t1726 * t1481 - t1720 * t1503;
t1404 = t1720 * t1481 + t1726 * t1503;
t1403 = -pkin(2) * (-t1721 * t1519 + t1727 * t1521) + t1517;
t1402 = -pkin(4) * t1499 - t1463;
t1401 = -t1835 - t1725 * t1864 + (-t1725 * t1777 - t1496) * pkin(4);
t1399 = t1724 * t1461 - t1718 * t1486;
t1398 = t1718 * t1461 + t1724 * t1486;
t1397 = -t1723 * t1523 - t1799;
t1396 = t1863 * t1524 - t1825;
t1395 = t1863 * t1523 - t1826;
t1394 = t1723 * t1524 + t1798;
t1388 = -t1723 * t1419 + t1608 * t1796;
t1387 = t1863 * t1419 + t1608 * t1823;
t1386 = t1863 * t1418 - t1608 * t1824;
t1385 = -t1723 * t1418 - t1608 * t1797;
t1383 = t1724 * t1469 - t1718 * t1471;
t1381 = t1718 * t1469 + t1724 * t1471;
t1379 = t1725 * t1467 - t1719 * t1468;
t1378 = t1725 * t1466 + t1719 * t1472;
t1377 = -t1719 * t1467 - t1725 * t1468;
t1376 = -t1719 * t1466 + t1725 * t1472;
t1369 = -t1719 * t1442 - t1725 * t1473;
t1367 = -t1721 * t1446 + t1727 * t1448;
t1366 = -t1721 * t1445 + t1727 * t1447;
t1365 = t1727 * t1446 + t1721 * t1448;
t1364 = t1727 * t1445 + t1721 * t1447;
t1360 = -t1719 * t1429 - t1725 * t1469;
t1359 = t1727 * t1436 + t1721 * t1437;
t1358 = t1727 * t1432 + t1721 * t1433;
t1357 = t1725 * t1383 + t1719 * t1557;
t1356 = -t1719 * t1383 + t1725 * t1557;
t1355 = -t1721 * t1425 + t1727 * t1426;
t1354 = t1727 * t1425 + t1721 * t1426;
t1353 = t1726 * t1417 - t1720 * t1458;
t1352 = t1726 * t1416 - t1720 * t1456;
t1351 = t1720 * t1417 + t1726 * t1458;
t1350 = t1720 * t1416 + t1726 * t1456;
t1349 = t1726 * t1372 + t1720 * t1547;
t1346 = t1724 * t1388 - t1795;
t1345 = t1724 * t1386 + t1795;
t1344 = t1718 * t1388 + t1789;
t1343 = t1718 * t1386 - t1789;
t1341 = -t1719 * t1384 - t1725 * t1514;
t1340 = t1727 * t1423 + t1721 * t1424;
t1339 = -t1720 * t1402 + t1726 * t1453;
t1338 = -t1720 * t1401 + t1726 * t1443;
t1337 = t1725 * t1399 + t1719 * t1460;
t1336 = -t1719 * t1399 + t1725 * t1460;
t1331 = pkin(5) * t1475 + t1371;
t1330 = t1726 * t1379 - t1720 * t1465;
t1329 = t1726 * t1378 - t1720 * t1464;
t1328 = t1720 * t1379 + t1726 * t1465;
t1327 = t1720 * t1378 + t1726 * t1464;
t1326 = -t1721 * t1404 + t1727 * t1405;
t1325 = t1727 * t1404 + t1721 * t1405;
t1324 = -pkin(4) * t1369 + t1454;
t1323 = -pkin(4) * t1360 - t1455;
t1322 = t1726 * t1370 - t1720 * t1441;
t1319 = -pkin(3) * t1499 + t1726 * t1402 + t1720 * t1453;
t1318 = t1726 * t1361 - t1720 * t1428;
t1315 = -pkin(3) * t1496 + t1726 * t1401 + t1720 * t1443;
t1314 = t1724 * t1397 - t1718 * t1869;
t1313 = t1718 * t1391 + t1724 * t1396;
t1312 = t1718 * t1397 + t1724 * t1869;
t1311 = -t1724 * t1391 + t1718 * t1396;
t1310 = -t1723 * t1390 + t1755 * t1863;
t1309 = t1863 * t1390 + t1723 * t1755;
t1299 = -t1719 * t1870 + t1819;
t1295 = t1726 * t1331 + t1475 * t1860;
t1291 = t1769 * t1371;
t1286 = t1724 * t1310 - t1718 * t1498;
t1285 = t1718 * t1310 + t1724 * t1498;
t1284 = t1726 * t1357 - t1720 * t1381;
t1283 = t1720 * t1357 + t1726 * t1381;
t1282 = t1725 * t1346 + t1719 * t1387;
t1281 = t1725 * t1345 - t1719 * t1385;
t1280 = -t1719 * t1346 + t1725 * t1387;
t1279 = -t1719 * t1345 - t1725 * t1385;
t1278 = t1726 * t1337 - t1720 * t1398;
t1277 = t1720 * t1337 + t1726 * t1398;
t1276 = pkin(5) * t1369 - t1719 * t1413 + t1724 * t1819;
t1275 = t1726 * t1342 - t1720 * t1382;
t1272 = pkin(5) * t1360 - t1719 * t1412 + t1718 * t1819;
t1268 = -pkin(2) * (-t1721 * t1436 + t1727 * t1437) + t1756;
t1267 = -t1721 * t1351 + t1727 * t1353;
t1266 = -t1721 * t1350 + t1727 * t1352;
t1265 = t1727 * t1351 + t1721 * t1353;
t1264 = t1727 * t1350 + t1721 * t1352;
t1263 = t1727 * t1348 + t1721 * t1349;
t1262 = t1720 * t1331 + t1801 * t1475;
t1261 = -pkin(2) * (-t1721 * t1432 + t1727 * t1433) + t1757;
t1260 = -pkin(4) * t1341 + t1870;
t1259 = pkin(5) * t1341 + t1725 * t1334;
t1258 = t1725 * t1314 + t1719 * t1395;
t1257 = t1725 * t1313 + t1719 * t1394;
t1256 = -t1719 * t1314 + t1725 * t1395;
t1255 = -t1719 * t1313 + t1725 * t1394;
t1253 = -t1719 * t1298 + t1725 * t1374;
t1252 = t1727 * t1319 + t1721 * t1339;
t1251 = -t1721 * t1328 + t1727 * t1330;
t1250 = -t1721 * t1327 + t1727 * t1329;
t1249 = t1727 * t1328 + t1721 * t1330;
t1248 = t1727 * t1327 + t1721 * t1329;
t1247 = t1767 * t1371;
t1246 = t1727 * t1315 + t1721 * t1338;
t1244 = -t1719 * t1294 + t1725 * t1363;
t1243 = t1727 * t1321 + t1721 * t1322;
t1242 = pkin(2) * t1499 - t1721 * t1319 + t1727 * t1339;
t1241 = t1727 * t1317 + t1721 * t1318;
t1240 = t1726 * t1300 + t1334 * t1720;
t1237 = pkin(2) * t1496 - t1721 * t1315 + t1727 * t1338;
t1236 = t1726 * t1282 - t1720 * t1344;
t1235 = t1726 * t1281 - t1720 * t1343;
t1234 = t1720 * t1282 + t1726 * t1344;
t1233 = t1720 * t1281 + t1726 * t1343;
t1232 = -pkin(2) * (-t1721 * t1423 + t1727 * t1424) + t1743;
t1231 = t1726 * t1276 - t1720 * t1324;
t1230 = t1769 * t1299;
t1229 = t1726 * t1272 - t1720 * t1323;
t1226 = t1725 * t1286 + t1719 * t1309;
t1225 = -t1719 * t1286 + t1725 * t1309;
t1222 = t1718 * t1859;
t1220 = -t1719 * t1271 + t1725 * t1308;
t1219 = -t1721 * t1283 + t1727 * t1284;
t1218 = t1727 * t1283 + t1721 * t1284;
t1217 = t1727 * t1262 + t1721 * t1295;
t1216 = -t1721 * t1277 + t1727 * t1278;
t1215 = t1727 * t1277 + t1721 * t1278;
t1214 = t1727 * t1274 + t1721 * t1275;
t1213 = t1726 * t1258 - t1720 * t1312;
t1212 = t1726 * t1257 - t1720 * t1311;
t1211 = t1720 * t1258 + t1726 * t1312;
t1210 = t1720 * t1257 + t1726 * t1311;
t1209 = -pkin(3) * t1369 + t1720 * t1276 + t1726 * t1324;
t1208 = -pkin(2) * (-t1721 * t1348 + t1727 * t1349) + t1771;
t1207 = t1726 * t1254 - t1720 * t1297;
t1204 = pkin(2) * t1475 - t1721 * t1262 + t1727 * t1295;
t1200 = -pkin(3) * t1360 + t1720 * t1272 + t1726 * t1323;
t1199 = t1726 * t1245 - t1720 * t1293;
t1196 = t1727 * t1247 + t1721 * t1291;
t1195 = t1726 * t1259 - t1720 * t1260;
t1194 = t1767 * t1299;
t1191 = t1718 * t1193;
t1190 = pkin(2) * t1371 - t1721 * t1247 + t1727 * t1291;
t1189 = t1726 * t1226 - t1720 * t1285;
t1188 = t1720 * t1226 + t1726 * t1285;
t1187 = t1726 * t1221 - t1720 * t1270;
t1184 = -pkin(3) * t1341 + t1720 * t1259 + t1726 * t1260;
t1183 = t1727 * t1239 + t1721 * t1240;
t1182 = -pkin(4) * t1253 + t1810;
t1181 = -t1721 * t1234 + t1727 * t1236;
t1180 = -t1721 * t1233 + t1727 * t1235;
t1179 = t1727 * t1234 + t1721 * t1236;
t1178 = t1727 * t1233 + t1721 * t1235;
t1177 = -pkin(4) * t1244 + t1811;
t1176 = -pkin(2) * (-t1721 * t1321 + t1727 * t1322) + t1739;
t1175 = -pkin(2) * (-t1721 * t1317 + t1727 * t1318) + t1753;
t1174 = t1727 * t1209 + t1721 * t1231;
t1173 = pkin(5) * t1253 + t1725 * t1228 + t1719 * t1305;
t1172 = t1727 * t1200 + t1721 * t1229;
t1171 = pkin(5) * t1244 + t1725 * t1227 + t1719 * t1303;
t1169 = -t1719 * t1203 + t1820;
t1168 = -t1721 * t1211 + t1727 * t1213;
t1167 = -t1721 * t1210 + t1727 * t1212;
t1166 = t1727 * t1211 + t1721 * t1213;
t1165 = t1727 * t1210 + t1721 * t1212;
t1164 = t1727 * t1194 + t1721 * t1230;
t1163 = pkin(2) * t1369 - t1721 * t1209 + t1727 * t1231;
t1162 = t1727 * t1206 + t1721 * t1207;
t1161 = pkin(2) * t1360 - t1721 * t1200 + t1727 * t1229;
t1160 = -pkin(4) * t1220 + t1191;
t1159 = t1727 * t1198 + t1721 * t1199;
t1158 = -pkin(2) * (-t1721 * t1274 + t1727 * t1275) + t1759;
t1157 = pkin(2) * t1299 - t1721 * t1194 + t1727 * t1230;
t1156 = t1727 * t1184 + t1721 * t1195;
t1155 = -t1721 * t1188 + t1727 * t1189;
t1154 = t1727 * t1188 + t1721 * t1189;
t1153 = t1727 * t1186 + t1721 * t1187;
t1152 = -pkin(4) * t1169 + t1222;
t1151 = pkin(2) * t1341 - t1721 * t1184 + t1727 * t1195;
t1150 = -pkin(2) * (-t1721 * t1239 + t1727 * t1240) + t1772;
t1149 = t1726 * t1170 - t1720 * t1202;
t1146 = t1726 * t1173 - t1720 * t1182;
t1145 = t1726 * t1171 - t1720 * t1177;
t1144 = pkin(5) * t1220 + t1719 * t1192 + t1725 * t1822;
t1143 = pkin(5) * t1169 + (-t1224 * t1719 + t1724 * t1820) * pkin(6);
t1142 = -pkin(3) * t1253 + t1720 * t1173 + t1726 * t1182;
t1141 = -pkin(3) * t1244 + t1720 * t1171 + t1726 * t1177;
t1140 = -pkin(2) * (-t1721 * t1206 + t1727 * t1207) + t1744;
t1139 = -pkin(2) * (-t1721 * t1198 + t1727 * t1199) + t1745;
t1138 = t1726 * t1144 - t1720 * t1160;
t1137 = t1727 * t1148 + t1721 * t1149;
t1136 = -pkin(3) * t1220 + t1720 * t1144 + t1726 * t1160;
t1135 = t1726 * t1143 - t1720 * t1152;
t1134 = t1727 * t1142 + t1721 * t1146;
t1133 = t1727 * t1141 + t1721 * t1145;
t1132 = pkin(2) * t1253 - t1721 * t1142 + t1727 * t1146;
t1131 = -pkin(2) * (-t1721 * t1186 + t1727 * t1187) + t1740;
t1130 = pkin(2) * t1244 - t1721 * t1141 + t1727 * t1145;
t1129 = -pkin(3) * t1169 + t1720 * t1143 + t1726 * t1152;
t1128 = t1727 * t1136 + t1721 * t1138;
t1127 = pkin(2) * t1220 - t1721 * t1136 + t1727 * t1138;
t1126 = -pkin(2) * (-t1721 * t1148 + t1727 * t1149) + t1736;
t1125 = t1727 * t1129 + t1721 * t1135;
t1124 = pkin(2) * t1169 - t1721 * t1129 + t1727 * t1135;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, t1695, 0, -t1694, 0, t1770, -t1675, 0, 0, t1728 * t1664 - t1774, t1728 * t1639 - t1722 * t1696, t1728 * t1656 - t1783, t1728 * t1663 + t1774, t1728 * t1654 + t1784, -t1722 * qJDD(2) + t1728 * t1686, -pkin(2) * t1781 - t1722 * t1629 - pkin(1) * (t1722 * t1655 + t1728 * t1688), pkin(2) * t1782 - t1722 * t1630 - pkin(1) * (t1722 * t1657 + t1728 * t1690), t1728 * t1775 - pkin(1) * (t1722 * t1693 + t1728 * t1697), t1722 * t1862 - pkin(1) * (pkin(2) * t1805 + t1722 * t1641), t1728 * t1506 + t1790, t1728 * t1449 - t1722 * t1636, t1728 * t1530 - t1722 * t1596, t1728 * t1505 - t1790, t1728 * t1531 - t1722 * t1754, t1728 * t1560 - t1722 * t1713, t1728 * t1536 - t1722 * t1444 - pkin(1) * (t1722 * t1502 + t1728 * t1591), t1728 * t1537 - t1722 * t1479 - pkin(1) * (t1722 * t1522 + t1728 * t1874), t1728 * t1478 - t1722 * t1403 - pkin(1) * (t1722 * t1450 + t1728 * t1622), -t1728 * t1802 - t1722 * t1430 - pkin(1) * (t1722 * t1483 + t1728 * t1662), t1728 * t1407 - t1722 * t1527, t1728 * t1354 - t1722 * t1474, t1728 * t1364 - t1722 * t1509, t1728 * t1406 - t1722 * t1525, t1728 * t1365 - t1722 * t1510, t1728 * t1438 - t1722 * t1563, t1728 * t1246 - t1722 * t1261 - pkin(1) * (t1722 * t1358 + t1728 * t1496), t1728 * t1252 - t1722 * t1268 - pkin(1) * (t1722 * t1359 + t1728 * t1499), t1728 * t1217 - t1722 * t1232 - pkin(1) * (t1722 * t1340 + t1728 * t1475), t1728 * t1196 - t1722 * t1208 - pkin(1) * (t1722 * t1263 + t1728 * t1371), t1728 * t1265 - t1722 * t1415, t1728 * t1218 - t1722 * t1356, t1728 * t1248 - t1722 * t1376, t1728 * t1264 - t1722 * t1414, t1728 * t1249 - t1722 * t1377, t1728 * t1325 - t1722 * t1480, t1728 * t1172 - t1722 * t1175 - pkin(1) * (t1722 * t1241 + t1728 * t1360), t1728 * t1174 - t1722 * t1176 - pkin(1) * (t1722 * t1243 + t1728 * t1369), t1728 * t1156 - t1722 * t1158 - pkin(1) * (t1722 * t1214 + t1728 * t1341), t1728 * t1164 - t1722 * t1150 - pkin(1) * (t1722 * t1183 + t1728 * t1299), t1728 * t1179 - t1722 * t1280, t1728 * t1154 - t1722 * t1225, t1728 * t1165 - t1722 * t1255, t1728 * t1178 - t1722 * t1279, t1728 * t1166 - t1722 * t1256, t1728 * t1215 - t1722 * t1336, t1728 * t1133 - t1722 * t1139 - pkin(1) * (t1722 * t1159 + t1728 * t1244), t1728 * t1134 - t1722 * t1140 - pkin(1) * (t1722 * t1162 + t1728 * t1253), t1728 * t1128 - t1722 * t1131 - pkin(1) * (t1722 * t1153 + t1728 * t1220), t1728 * t1125 - t1722 * t1126 - pkin(1) * (t1722 * t1137 + t1728 * t1169); 0, 0, 0, 0, 0, 0, g(3), 0, 0, 0, 0, 0, t1694, 0, t1695, 0, t1675, t1770, 0, 0, t1722 * t1664 + t1773, t1722 * t1639 + t1728 * t1696, t1722 * t1656 + t1781, t1722 * t1663 - t1773, t1722 * t1654 - t1782, t1728 * qJDD(2) + t1722 * t1686, -pkin(2) * t1783 + t1728 * t1629 + pkin(1) * (t1728 * t1655 - t1722 * t1688), pkin(2) * t1784 + t1728 * t1630 + pkin(1) * (t1728 * t1657 - t1722 * t1690), t1722 * t1775 + pkin(1) * (t1728 * t1693 - t1722 * t1697), -t1728 * t1862 + pkin(1) * (-pkin(2) * t1806 + t1728 * t1641), t1722 * t1506 - t1785, t1722 * t1449 + t1728 * t1636, t1722 * t1530 + t1728 * t1596, t1722 * t1505 + t1785, t1722 * t1531 + t1728 * t1754, t1722 * t1560 + t1728 * t1713, t1722 * t1536 + t1728 * t1444 + pkin(1) * (t1728 * t1502 - t1722 * t1591), t1722 * t1537 + t1728 * t1479 + pkin(1) * (t1728 * t1522 - t1722 * t1874), t1722 * t1478 + t1728 * t1403 + pkin(1) * (t1728 * t1450 - t1722 * t1622), -t1722 * t1802 + t1728 * t1430 + pkin(1) * (t1728 * t1483 - t1722 * t1662), t1722 * t1407 + t1728 * t1527, t1722 * t1354 + t1728 * t1474, t1722 * t1364 + t1728 * t1509, t1722 * t1406 + t1728 * t1525, t1722 * t1365 + t1728 * t1510, t1722 * t1438 + t1728 * t1563, t1722 * t1246 + t1728 * t1261 + pkin(1) * (t1728 * t1358 - t1722 * t1496), t1722 * t1252 + t1728 * t1268 + pkin(1) * (t1728 * t1359 - t1722 * t1499), t1722 * t1217 + t1728 * t1232 + pkin(1) * (t1728 * t1340 - t1722 * t1475), t1722 * t1196 + t1728 * t1208 + pkin(1) * (t1728 * t1263 - t1722 * t1371), t1722 * t1265 + t1728 * t1415, t1722 * t1218 + t1728 * t1356, t1722 * t1248 + t1728 * t1376, t1722 * t1264 + t1728 * t1414, t1722 * t1249 + t1728 * t1377, t1722 * t1325 + t1728 * t1480, t1722 * t1172 + t1728 * t1175 + pkin(1) * (t1728 * t1241 - t1722 * t1360), t1722 * t1174 + t1728 * t1176 + pkin(1) * (t1728 * t1243 - t1722 * t1369), t1722 * t1156 + t1728 * t1158 + pkin(1) * (t1728 * t1214 - t1722 * t1341), t1722 * t1164 + t1728 * t1150 + pkin(1) * (t1728 * t1183 - t1722 * t1299), t1722 * t1179 + t1728 * t1280, t1722 * t1154 + t1728 * t1225, t1722 * t1165 + t1728 * t1255, t1722 * t1178 + t1728 * t1279, t1722 * t1166 + t1728 * t1256, t1722 * t1215 + t1728 * t1336, t1722 * t1133 + t1728 * t1139 + pkin(1) * (t1728 * t1159 - t1722 * t1244), t1722 * t1134 + t1728 * t1140 + pkin(1) * (t1728 * t1162 - t1722 * t1253), t1722 * t1128 + t1728 * t1131 + pkin(1) * (t1728 * t1153 - t1722 * t1220), t1722 * t1125 + t1728 * t1126 + pkin(1) * (t1728 * t1137 - t1722 * t1169); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, t1659, t1640, t1660, t1653, t1658, 0, t1668, t1669, t1628, t1717, t1508, t1451, t1532, t1507, t1533, t1562, t1484, t1485, t1434, t1604, t1409, t1355, t1366, t1408, t1367, t1439, t1237, t1242, t1204, t1190, t1267, t1219, t1250, t1266, t1251, t1326, t1161, t1163, t1151, t1157, t1181, t1155, t1167, t1180, t1168, t1216, t1130, t1132, t1127, t1124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1730, 0, 0, -g(3), 0, 0, t1664, t1639, t1656, t1663, t1654, t1686, -pkin(2) * t1710, t1708, t1775, 0, t1506, t1449, t1530, t1505, t1531, t1560, t1536, t1537, t1478, -t1802, t1407, t1354, t1364, t1406, t1365, t1438, t1246, t1252, t1217, t1196, t1265, t1218, t1248, t1264, t1249, t1325, t1172, t1174, t1156, t1164, t1179, t1154, t1165, t1178, t1166, t1215, t1133, t1134, t1128, t1125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1730, 0, qJDD(1), 0, g(3), 0, 0, 0, t1791, t1696, t1710, -t1791, -t1807, qJDD(2), t1629, t1630, 0, -t1862, -t1846, t1636, t1596, t1846, t1754, t1713, t1444, t1479, t1403, t1430, t1527, t1474, t1509, t1525, t1510, t1563, t1261, t1268, t1232, t1208, t1415, t1356, t1376, t1414, t1377, t1480, t1175, t1176, t1158, t1150, t1280, t1225, t1255, t1279, t1256, t1336, t1139, t1140, t1131, t1126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, t1659, t1640, t1660, t1653, t1658, 0, t1668, t1669, t1628, t1717, t1508, t1451, t1532, t1507, t1533, t1562, t1484, t1485, t1434, t1604, t1409, t1355, t1366, t1408, t1367, t1439, t1237, t1242, t1204, t1190, t1267, t1219, t1250, t1266, t1251, t1326, t1161, t1163, t1151, t1157, t1181, t1155, t1167, t1180, t1168, t1216, t1130, t1132, t1127, t1124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1689, -t1688, t1699, t1792, t1700, -t1792, 0, t1856, t1692, 0, t1588, t1520, t1601, t1586, t1602, t1624, t1832, t1815, t1552, 0, t1490, t1426, t1447, t1489, t1448, t1516, t1338, t1339, t1295, t1291, t1353, t1284, t1329, t1352, t1330, t1405, t1229, t1231, t1195, t1230, t1236, t1189, t1212, t1235, t1213, t1278, t1145, t1146, t1138, t1135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1786, t1690, t1702, t1760, t1698, -t1786, -t1856, 0, -t1691, 0, t1587, t1518, t1599, t1585, t1600, t1623, t1561, t1559, t1513, -t1861, t1488, t1425, t1445, t1487, t1446, t1515, t1315, t1319, t1262, t1247, t1351, t1283, t1327, t1350, t1328, t1404, t1200, t1209, t1184, t1194, t1234, t1188, t1210, t1233, t1211, t1277, t1141, t1142, t1136, t1129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1791, t1696, t1710, -t1791, -t1807, qJDD(2), -t1692, t1691, 0, 0, -t1846, t1636, t1596, t1846, t1754, t1713, t1768, t1734, t1517, -t1550, t1527, t1474, t1509, t1525, t1510, t1563, t1757, t1756, t1743, t1771, t1415, t1356, t1376, t1414, t1377, t1480, t1753, t1739, t1759, t1772, t1280, t1225, t1255, t1279, t1256, t1336, t1745, t1744, t1740, t1736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1619, -t1591, t1873, -t1845, t1665, t1845, 0, t1662, t1620, 0, t1528, t1476, t1511, t1526, t1512, t1564, t1443, t1453, t1331, pkin(5) * t1371, t1417, t1357, t1378, t1416, t1379, t1481, t1272, t1276, t1259, pkin(5) * t1299, t1282, t1226, t1257, t1281, t1258, t1337, t1171, t1173, t1144, t1143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1844, t1874, t1666, t1618, t1633, -t1844, -t1662, 0, t1621, 0, t1850, t1605, t1542, -t1850, t1748, t1617, t1401, t1402, -pkin(4) * t1475, -pkin(4) * t1371, t1458, t1381, t1464, t1456, t1465, t1503, t1323, t1324, t1260, -pkin(4) * t1299, t1344, t1285, t1311, t1343, t1312, t1398, t1177, t1182, t1160, t1152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1846, t1636, t1596, t1846, t1754, t1713, -t1620, -t1621, 0, 0, t1527, t1474, t1509, t1525, t1510, t1563, t1763, t1762, t1749, t1779, t1415, t1356, t1376, t1414, t1377, t1480, t1758, t1746, t1764, t1780, t1280, t1225, t1255, t1279, t1256, t1336, t1751, t1750, t1747, t1737; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1568, -t1538, t1741, t1627, t1625, -t1627, 0, -t1547, t1462, 0, t1459, t1383, t1466, t1457, t1467, t1504, t1454, t1455, t1334, 0, t1346, t1286, t1313, t1345, t1314, t1399, t1227, t1228, t1822, t1724 * t1859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1849, t1865, t1626, t1567, -t1554, -t1849, t1547, 0, t1463, 0, -t1558, -t1557, -t1472, t1558, t1468, -t1566, t1412, t1413, 0, 0, -t1387, -t1309, -t1394, t1385, -t1395, -t1460, -t1303, -t1305, -t1192, t1858; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1850, t1605, t1542, -t1850, t1748, t1617, -t1462, -t1463, 0, 0, t1458, t1381, t1464, t1456, t1465, t1503, -t1455, t1454, t1870, 0, t1344, t1285, t1311, t1343, t1312, t1398, t1811, t1810, t1191, t1222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1492, t1469, t1868, t1583, t1579, -t1583, 0, t1462, t1412, 0, t1388, t1310, t1396, t1386, t1397, t1461, t1302, t1306, t1193, t1859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1584, t1471, t1580, -t1761, -t1867, -t1584, -t1462, 0, t1413, 0, t1854, t1498, -t1391, -t1854, t1869, t1486, t1289, t1290, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1558, t1557, t1472, -t1558, -t1468, t1566, -t1412, -t1413, 0, 0, t1387, t1309, t1394, -t1385, t1395, t1460, t1303, t1305, t1192, -t1858; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1419, t1390, t1421, t1853, t1523, -t1853, 0, -t1400, -t1289, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1529, t1755, t1524, t1418, -t1420, -t1529, t1400, 0, -t1290, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1854, t1498, -t1391, -t1854, t1869, t1486, t1289, t1290, 0, 0;];
m_new_reg = t1;
